{
  "openapi": "3.0.1",
  "info": {
    "title": "Flashcat API",
    "description": "Flashduty: One-stop Incident Response Platform; Nightingale: Open Source Alert Management Expert; Flashcat: Unified Observability Platform",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Flashduty"
    },
    {
      "name": "Flashduty/Open API"
    },
    {
      "name": "Flashduty/Open API/Member Management"
    },
    {
      "name": "Flashduty/Open API/Team Management"
    },
    {
      "name": "Flashduty/Open API/Schedule Management"
    },
    {
      "name": "Flashduty/Open API/Information Retrieval"
    },
    {
      "name": "Flashduty/Open API/Preference Settings"
    },
    {
      "name": "Flashduty/Open API/Channel"
    },
    {
      "name": "Flashduty/Open API/Channel/Escalation Rules"
    },
    {
      "name": "Flashduty/Open API/Channel/Subscription Rules"
    },
    {
      "name": "Flashduty/Open API/Channel/Drop Rules"
    },
    {
      "name": "Flashduty/Open API/Channel/Silence Rules"
    },
    {
      "name": "Flashduty/Open API/Channel/Inhibit Rules"
    },
    {
      "name": "Flashduty/Open API/Template Management"
    },
    {
      "name": "Flashduty/Open API/Incident Management"
    },
    {
      "name": "Flashduty/Open API/Incident Management/Group View"
    },
    {
      "name": "Flashduty/Open API/Alert Management"
    },
    {
      "name": "Flashduty/Open API/Alert Management/Group View"
    },
    {
      "name": "Flashduty/Open API/Change Management"
    },
    {
      "name": "Flashduty/Open API/Insights"
    },
    {
      "name": "Flashduty/Open API/Custom Fields"
    },
    {
      "name": "Flashduty/Open API/Service Calendar"
    },
    {
      "name": "Flashduty/Open API/Label Enhancement"
    },
    {
      "name": "Flashduty/Open API/Label Enhancement/Mapping"
    },
    {
      "name": "Flashduty/Open API/Alert Processing"
    },
    {
      "name": "Flashduty/Open API/Integration Routing"
    },
    {
      "name": "Flashduty/Open API/License Management"
    },
    {
      "name": "Flashduty/Open API/Insights (New)"
    }
  ],
  "paths": {
    "/member/invite": {
      "post": {
        "summary": "Invite Members",
        "deprecated": false,
        "description": "Account is created upon invitation. Sign in to complete activation and verify phone or email to receive notifications through corresponding channels",
        "tags": [
          "Flashduty/Open API/Member Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "title": "Email Address",
                          "description": "At least one of email or phone is required. <span style=\"color: red;\">Email must be verified to receive notifications</span>. The system will guide users to complete or verify information upon sign in"
                        },
                        "phone": {
                          "type": "string",
                          "title": "Phone Number",
                          "description": "At least one of email or phone is required. <span style=\"color: red;\">Phone number must be verified to receive notifications</span>. The system will guide users to complete or verify information upon sign in"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "Default is CN"
                        },
                        "member_name": {
                          "type": "string",
                          "title": "Member Name",
                          "description": "Required when phone is provided; defaults to email prefix when email is provided. <span style=\"color: red;\">Member name must be unique within the account</span>"
                        },
                        "role_ids": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          },
                          "title": "Account Role ID List",
                          "description": "Not set if not provided"
                        }
                      },
                      "x-apifox-orders": [
                        "email",
                        "phone",
                        "country_code",
                        "member_name",
                        "role_ids"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "title": "Member List",
                    "description": "<span style=\"color: red;\">Maximum 20 invites per request, 200 per day</span>",
                    "maxItems": 20
                  }
                },
                "required": [
                  "members"
                ],
                "x-apifox-orders": [
                  "members"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MemberItemShort"
                      }
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "items"
                  ],
                  "required": [
                    "items"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Member Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655697-run"
      }
    },
    "/member/delete": {
      "post": {
        "summary": "Delete Member",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Member Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "member_id": {
                    "type": "integer",
                    "title": "Member ID",
                    "description": "At least one of the three is required"
                  },
                  "phone": {
                    "type": "string",
                    "title": "Member Phone",
                    "description": "At least one of the three is required"
                  },
                  "email": {
                    "type": "string",
                    "title": "Member Email",
                    "description": "At least one of the three is required"
                  }
                },
                "x-apifox-orders": [
                  "member_id",
                  "phone",
                  "email"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "refs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Reference"
                          },
                          "title": "Associated Resource List"
                        }
                      },
                      "x-apifox-orders": [
                        "refs"
                      ],
                      "required": [
                        "refs"
                      ],
                      "description": "Only exists when code=ReferenceExist",
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Member Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-140202372-run"
      }
    },
    "/member/info/reset": {
      "post": {
        "summary": "Reset Information",
        "deprecated": false,
        "description": "<span style=\"color: red;\">Account owner can modify all member information, each member can modify their own information</span>",
        "tags": [
          "Flashduty/Open API/Member Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "member_id": {
                    "type": "integer",
                    "title": "Member ID",
                    "description": "Exactly one of the four is required"
                  },
                  "member_name": {
                    "type": "string",
                    "title": "Member Name",
                    "description": "Exactly one of the four is required"
                  },
                  "phone": {
                    "type": "string",
                    "title": "Member Phone",
                    "description": "Exactly one of the four is required"
                  },
                  "email": {
                    "type": "string",
                    "title": "Member Email",
                    "description": "Exactly one of the four is required"
                  },
                  "updates": {
                    "type": "object",
                    "properties": {
                      "phone": {
                        "type": "string",
                        "title": "New Phone Number",
                        "description": "Not updated if not provided. Note: <span style=\"color: red;\">Old phone number becomes invalid immediately, new phone number must be verified to receive notifications, please proceed with caution!</span> The system will guide users to complete or verify information upon sign in"
                      },
                      "country_code": {
                        "type": "string",
                        "title": "New Country Code",
                        "description": "Not updated if not provided."
                      },
                      "email": {
                        "type": "string",
                        "title": "New Email Address",
                        "description": "Not updated if not provided. Note: <span style=\"color: red;\">Old email becomes invalid immediately, new email must be verified to receive notifications, please proceed with caution!</span> The system will guide users to complete or verify information upon sign in"
                      },
                      "member_name": {
                        "type": "string",
                        "title": "New Member Name",
                        "description": "Not updated if not provided."
                      },
                      "time_zone": {
                        "type": "string",
                        "default": "Asia/Shanghai",
                        "description": "Not updated if not provided. Must be in tzdata format. Please refer to [this list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) for acceptable values.",
                        "title": "Default Timezone"
                      },
                      "locale": {
                        "type": "string",
                        "enum": [
                          "zh-CN",
                          "en-US"
                        ],
                        "x-apifox": {
                          "enumDescriptions": {
                            "zh-CN": "Simplified Chinese",
                            "en-US": "English"
                          }
                        },
                        "title": "Default Language",
                        "description": "Not updated if not provided."
                      }
                    },
                    "x-apifox-orders": [
                      "phone",
                      "country_code",
                      "email",
                      "member_name",
                      "time_zone",
                      "locale"
                    ],
                    "title": "Update Content",
                    "description": "Fields not provided will not be updated",
                    "x-apifox-ignore-properties": []
                  }
                },
                "x-apifox-orders": [
                  "member_id",
                  "member_name",
                  "phone",
                  "email",
                  "updates"
                ],
                "required": [
                  "updates"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Member Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-159274244-run"
      }
    },
    "/member/list": {
      "post": {
        "summary": "Member List",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Member Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "p": {
                    "type": "integer",
                    "title": "Page number, starts from 1"
                  },
                  "limit": {
                    "type": "integer",
                    "title": "Items per page"
                  },
                  "asc": {
                    "title": "Ascending order",
                    "type": "boolean"
                  },
                  "orderby": {
                    "type": "string",
                    "title": "Sort by, supports created_at updated_at"
                  },
                  "role_id": {
                    "type": "integer",
                    "title": "Role ID"
                  },
                  "query": {
                    "type": "string",
                    "title": "Search keyword",
                    "description": "Currently only fuzzy search for member_name"
                  }
                },
                "x-apifox-orders": [
                  "01H4JZVNYR10Z098ABAFCWV1G0",
                  "orderby",
                  "role_id",
                  "query"
                ],
                "x-apifox-refs": {
                  "01H4JZVNYR10Z098ABAFCWV1G0": {
                    "$ref": "#/components/schemas/PageQuery"
                  }
                },
                "x-apifox-ignore-properties": [
                  "p",
                  "limit",
                  "asc"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "p": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "member_id": {
                                "type": "integer",
                                "title": "id"
                              },
                              "member_name": {
                                "type": "string",
                                "title": "Name"
                              },
                              "phone": {
                                "type": "string",
                                "title": "Encrypted phone number"
                              },
                              "email": {
                                "type": "string",
                                "title": "Plain text email address"
                              },
                              "account_role_ids": {
                                "type": "array",
                                "items": {
                                  "type": "integer"
                                },
                                "title": "Role ID List"
                              },
                              "status": {
                                "type": "string",
                                "title": "Status"
                              },
                              "created_at": {
                                "type": "integer",
                                "title": "Created timestamp"
                              },
                              "updated_at": {
                                "type": "integer",
                                "title": "Updated timestamp"
                              },
                              "phone_verified": {
                                "type": "string",
                                "title": "Phone verified"
                              },
                              "email_verified": {
                                "type": "string",
                                "title": "Email verified"
                              }
                            },
                            "required": [
                              "member_id",
                              "member_name",
                              "created_at",
                              "status",
                              "updated_at"
                            ],
                            "x-apifox-orders": [
                              "member_id",
                              "member_name",
                              "phone",
                              "phone_verified",
                              "email",
                              "email_verified",
                              "account_role_ids",
                              "status",
                              "created_at",
                              "updated_at"
                            ],
                            "$ref": "#/components/schemas/MemberItem"
                          }
                        }
                      },
                      "required": [
                        "p",
                        "items",
                        "total",
                        "limit"
                      ],
                      "x-apifox-orders": [
                        "p",
                        "limit",
                        "total",
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Member Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655698-run"
      }
    },
    "/team/list": {
      "post": {
        "summary": "Team List",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Team Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "p": {
                    "type": "integer",
                    "title": "Page number, starts from 1"
                  },
                  "limit": {
                    "type": "integer",
                    "title": "Items per page"
                  },
                  "asc": {
                    "title": "Ascending order",
                    "type": "boolean"
                  },
                  "orderby": {
                    "type": "string",
                    "title": "Sort field"
                  },
                  "query": {
                    "type": "string",
                    "title": "Search query",
                    "description": "Search scope: name and description"
                  },
                  "person_id": {
                    "type": "integer",
                    "title": "Member ID",
                    "description": "Query teams containing this member, member can be account or member"
                  }
                },
                "x-apifox-orders": [
                  "01H4JZX340FKRS470QKK8W63V6",
                  "orderby",
                  "query",
                  "person_id"
                ],
                "x-apifox-refs": {
                  "01H4JZX340FKRS470QKK8W63V6": {
                    "$ref": "#/components/schemas/PageQuery"
                  }
                },
                "x-apifox-ignore-properties": [
                  "p",
                  "limit",
                  "asc"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "team_id": {
                                "title": "id",
                                "type": "integer"
                              },
                              "team_name": {
                                "type": "string",
                                "title": "name"
                              },
                              "description": {
                                "type": "string",
                                "title": "Description"
                              },
                              "created_at": {
                                "title": "Created timestamp",
                                "type": "integer"
                              },
                              "updated_at": {
                                "title": "Updated timestamp",
                                "type": "integer"
                              },
                              "updated_by": {
                                "title": "Last modified by",
                                "type": "integer"
                              },
                              "updated_by_name": {
                                "type": "string",
                                "title": "Last modifier name"
                              },
                              "creator_id": {
                                "type": "integer",
                                "title": "Creator"
                              },
                              "person_ids": {
                                "type": "array",
                                "items": {
                                  "type": "integer"
                                },
                                "title": "Member List"
                              }
                            },
                            "x-apifox-orders": [
                              "team_id",
                              "team_name",
                              "description",
                              "created_at",
                              "updated_at",
                              "updated_by",
                              "updated_by_name",
                              "creator_id",
                              "person_ids"
                            ],
                            "required": [
                              "team_id",
                              "updated_by",
                              "updated_at",
                              "created_at",
                              "description",
                              "team_name",
                              "updated_by_name",
                              "person_ids",
                              "creator_id"
                            ],
                            "x-apifox-ignore-properties": []
                          },
                          "title": "List"
                        },
                        "p": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer",
                          "title": "Total count"
                        }
                      },
                      "x-apifox-orders": [
                        "items",
                        "p",
                        "limit",
                        "total"
                      ],
                      "required": [
                        "items",
                        "p",
                        "total",
                        "limit"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Team Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655699-run"
      }
    },
    "/team/info": {
      "post": {
        "summary": "Basic Information",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Team Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "team_id": {
                    "type": "integer",
                    "title": "id"
                  }
                },
                "x-apifox-orders": [
                  "team_id"
                ],
                "required": [
                  "team_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "team_id": {
                          "title": "id",
                          "type": "integer"
                        },
                        "team_name": {
                          "type": "string",
                          "title": "name"
                        },
                        "description": {
                          "type": "string",
                          "title": "Description"
                        },
                        "created_at": {
                          "title": "Created timestamp",
                          "type": "integer"
                        },
                        "updated_at": {
                          "title": "Updated timestamp",
                          "type": "integer"
                        },
                        "updated_by": {
                          "title": "Last modified by",
                          "type": "integer"
                        },
                        "updated_by_name": {
                          "type": "string",
                          "title": "Last modifier name"
                        },
                        "creator_id": {
                          "type": "integer",
                          "title": "Creator ID"
                        },
                        "person_ids": {
                          "title": "Member List",
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "team_id",
                        "team_name",
                        "description",
                        "created_at",
                        "updated_at",
                        "updated_by",
                        "updated_by_name",
                        "creator_id",
                        "person_ids",
                        "01GB29AK833YTGER10DSPWDSW2"
                      ],
                      "required": [
                        "team_id",
                        "01GB29AK833YTGER10DSPWDSW2",
                        "updated_by",
                        "updated_at",
                        "created_at",
                        "description",
                        "team_name",
                        "person_ids",
                        "updated_by_name",
                        "creator_id"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Team Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655700-run"
      }
    },
    "/team/delete": {
      "post": {
        "summary": "Delete Team",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Team Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "team_id": {
                    "type": "integer",
                    "title": "Team ID",
                    "description": "Choose one between ID and name"
                  },
                  "team_name": {
                    "type": "string",
                    "title": "Team Name",
                    "description": "Choose one between ID and name"
                  }
                },
                "x-apifox-orders": [
                  "team_id",
                  "team_name"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "refs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Reference"
                          },
                          "title": "Associated Resource List"
                        }
                      },
                      "x-apifox-orders": [
                        "refs"
                      ],
                      "required": [
                        "refs"
                      ],
                      "description": "Only exists when code=ReferenceExist",
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Team Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655701-run"
      }
    },
    "/team/upsert": {
      "post": {
        "summary": "Team Upsert",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Team Management"
        ],
        "parameters": [
          {
            "name": "Content-MD5",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "team_id": {
                    "type": "integer",
                    "title": "Team ID"
                  },
                  "team_name": {
                    "type": "string",
                    "title": "Team Name",
                    "description": "<span style=\"color: red;\">Team name must be unique within the account</span>"
                  },
                  "reset_if_name_exist": {
                    "type": "boolean",
                    "title": "Update by name",
                    "description": "If team ID is not provided but team name exists, when this value is true, the team with the same name will be updated, otherwise the update will be rejected with a duplicate name error"
                  },
                  "description": {
                    "type": "string",
                    "title": "Team Description"
                  },
                  "person_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Member ID List",
                    "description": "At least one of email, phone, or ID list is required. When multiple exist, the system will merge them"
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Member Email List",
                    "description": "At least one of email, phone, or ID list is required. When multiple exist, the system will merge them. <span style=\"color: red;\">When an email is used by both owner and member, both will be invited to join the team</span>"
                  },
                  "phones": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Member Phone List",
                    "description": "At least one of email, phone, or ID list is required. When multiple exist, the system will merge them. <span style=\"color: red;\">When an email is used by both owner and member, both will be invited to join the team</span>"
                  }
                },
                "x-apifox-orders": [
                  "team_id",
                  "team_name",
                  "reset_if_name_exist",
                  "description",
                  "person_ids",
                  "emails",
                  "phones"
                ],
                "required": [
                  "team_name",
                  "description"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "team_id": {
                          "type": "integer"
                        }
                      },
                      "x-apifox-orders": [
                        "team_id"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Team Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655702-run"
      }
    },
    "/schedule/preview": {
      "post": {
        "summary": "Preview Schedule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Schedule Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start": {
                    "type": "integer",
                    "title": "Start time",
                    "description": "Time automatically aligned to the previous half hour"
                  },
                  "end": {
                    "type": "integer",
                    "title": "End time",
                    "description": "Time automatically aligned to the previous half hour, interval with start should not exceed 30 days"
                  },
                  "layers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "layer_name": {
                          "type": "string",
                          "title": "Rule name"
                        },
                        "mode": {
                          "type": "integer",
                          "title": "Mode (Normal/Temporary)",
                          "enum": [
                            0,
                            1
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "0": "Normal mode",
                              "1": "Temporary mode"
                            }
                          },
                          "description": "Rules with mode=1 are placed after those with mode=0"
                        },
                        "groups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "group_name": {
                                "type": "string",
                                "title": "Group name"
                              },
                              "members": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "role_id": {
                                      "type": "integer",
                                      "title": "Role ID"
                                    },
                                    "person_ids": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      },
                                      "title": "Member ID"
                                    }
                                  },
                                  "x-apifox-orders": [
                                    "role_id",
                                    "person_ids"
                                  ],
                                  "x-apifox-ignore-properties": []
                                }
                              }
                            },
                            "x-apifox-orders": [
                              "group_name",
                              "members"
                            ],
                            "x-apifox-ignore-properties": []
                          },
                          "title": "On-call group"
                        },
                        "rotation_duration": {
                          "type": "integer",
                          "title": "On-call cycle",
                          "description": "Unit: seconds, minimum granularity 1800"
                        },
                        "fair_rotation": {
                          "type": "boolean",
                          "title": "Fair rotation switch"
                        },
                        "handoff_time": {
                          "type": "integer",
                          "title": "Handover time",
                          "description": "Handover time in seconds from Monday 00:00 for weekly rotation cycle"
                        },
                        "layer_start": {
                          "type": "integer",
                          "title": "Start time",
                          "description": "Minimum granularity half hour"
                        },
                        "layer_end": {
                          "type": "integer",
                          "title": "End time",
                          "description": "Minimum granularity half hour"
                        },
                        "restrict_mode": {
                          "type": "integer",
                          "title": "Cycle restriction mode",
                          "enum": [
                            0,
                            1,
                            2
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "0": "No restriction",
                              "1": "Daily restriction",
                              "2": "Weekly restriction"
                            }
                          },
                          "description": "0 No restriction, 1 Daily granularity, 2 Weekly granularity"
                        },
                        "restrict_periods": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "restrict_start": {
                                "type": "integer",
                                "title": "Restriction start time",
                                "description": "Only effective for daily and weekly restriction modes. For daily mode, seconds from 00:00 of the day to restriction start time. For weekly mode, seconds from Monday 00:00 to restriction start time"
                              },
                              "restrict_end": {
                                "type": "integer",
                                "title": "Restriction end time",
                                "description": "Only effective for daily and weekly restriction modes. For daily mode, seconds from 00:00 of the day to restriction end time. For weekly mode, seconds from Monday 00:00 to restriction end time"
                              }
                            },
                            "x-apifox-orders": [
                              "restrict_start",
                              "restrict_end"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "layer_name",
                        "mode",
                        "groups",
                        "rotation_duration",
                        "fair_rotation",
                        "handoff_time",
                        "layer_start",
                        "layer_end",
                        "restrict_mode",
                        "restrict_periods"
                      ],
                      "required": [
                        "mode",
                        "layer_start"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "title": "Rules"
                  }
                },
                "required": [
                  "start",
                  "end",
                  "layers"
                ],
                "x-apifox-orders": [
                  "start",
                  "end",
                  "01HFDNZC5KES8ZA936NKW32FZ4"
                ],
                "x-apifox-refs": {
                  "01HFDNZC5KES8ZA936NKW32FZ4": {
                    "$ref": "#/components/schemas/Layers"
                  }
                },
                "x-apifox-ignore-properties": [
                  "layers"
                ]
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "start": {
                          "type": "integer"
                        },
                        "end": {
                          "type": "integer"
                        },
                        "schedule_id": {
                          "type": "integer"
                        },
                        "schedule_name": {
                          "type": "string"
                        },
                        "team_id": {
                          "type": "integer"
                        },
                        "layers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "layer_name": {
                                "type": "string",
                                "title": "Rule name"
                              },
                              "mode": {
                                "type": "integer",
                                "title": "Mode (Normal/Temporary)",
                                "enum": [
                                  0,
                                  1
                                ],
                                "x-apifox": {
                                  "enumDescriptions": {
                                    "0": "Normal mode",
                                    "1": "Temporary mode"
                                  }
                                },
                                "description": "Rules with mode=1 are placed after those with mode=0"
                              },
                              "groups": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "group_name": {
                                      "type": "string",
                                      "title": "Group name"
                                    },
                                    "members": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "role_id": {
                                            "type": "integer",
                                            "title": "Role ID"
                                          },
                                          "person_ids": {
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            },
                                            "title": "Member ID"
                                          }
                                        },
                                        "x-apifox-orders": [
                                          "role_id",
                                          "person_ids"
                                        ],
                                        "x-apifox-ignore-properties": []
                                      }
                                    }
                                  },
                                  "x-apifox-orders": [
                                    "group_name",
                                    "members"
                                  ],
                                  "x-apifox-ignore-properties": []
                                },
                                "title": "On-call group"
                              },
                              "rotation_duration": {
                                "type": "integer",
                                "title": "On-call cycle",
                                "description": "Unit: seconds, minimum granularity 1800"
                              },
                              "fair_rotation": {
                                "type": "boolean",
                                "title": "Fair rotation switch"
                              },
                              "handoff_time": {
                                "type": "integer",
                                "title": "Handover time",
                                "description": "Handover time in seconds from Monday 00:00 for weekly rotation cycle"
                              },
                              "layer_start": {
                                "type": "integer",
                                "title": "Start time",
                                "description": "Minimum granularity half hour"
                              },
                              "layer_end": {
                                "type": "integer",
                                "title": "End time",
                                "description": "Minimum granularity half hour"
                              },
                              "restrict_mode": {
                                "type": "integer",
                                "title": "Cycle restriction mode",
                                "enum": [
                                  0,
                                  1,
                                  2
                                ],
                                "x-apifox": {
                                  "enumDescriptions": {
                                    "0": "No restriction",
                                    "1": "Daily restriction",
                                    "2": "Weekly restriction"
                                  }
                                },
                                "description": "0 No restriction, 1 Daily granularity, 2 Weekly granularity"
                              },
                              "restrict_periods": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "restrict_start": {
                                      "type": "integer",
                                      "title": "Restriction start time",
                                      "description": "Only effective for daily and weekly restriction modes. For daily mode, seconds from 00:00 of the day to restriction start time. For weekly mode, seconds from Monday 00:00 to restriction start time"
                                    },
                                    "restrict_end": {
                                      "type": "integer",
                                      "title": "Restriction end time",
                                      "description": "Only effective for daily and weekly restriction modes. For daily mode, seconds from 00:00 of the day to restriction end time. For weekly mode, seconds from Monday 00:00 to restriction end time"
                                    }
                                  },
                                  "x-apifox-orders": [
                                    "restrict_start",
                                    "restrict_end"
                                  ],
                                  "x-apifox-ignore-properties": []
                                }
                              }
                            },
                            "x-apifox-orders": [
                              "layer_name",
                              "mode",
                              "groups",
                              "rotation_duration",
                              "fair_rotation",
                              "handoff_time",
                              "layer_start",
                              "layer_end",
                              "restrict_mode",
                              "restrict_periods"
                            ],
                            "required": [
                              "mode",
                              "layer_start"
                            ],
                            "x-apifox-ignore-properties": []
                          },
                          "title": "Rules"
                        },
                        "layer_schedules": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "layer_name": {
                                "type": "string",
                                "title": "Rule name"
                              },
                              "mode": {
                                "type": "integer",
                                "title": "Mode (Normal/Temporary)"
                              },
                              "schedules": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "start": {
                                      "type": "integer",
                                      "title": "Start time"
                                    },
                                    "end": {
                                      "type": "integer",
                                      "title": "End time"
                                    },
                                    "hash": {
                                      "type": "string",
                                      "title": "Hash"
                                    },
                                    "group": {
                                      "type": "object",
                                      "properties": {
                                        "group_name": {
                                          "type": "string",
                                          "title": "Team name"
                                        },
                                        "members": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "role_id": {
                                                "type": "integer",
                                                "title": "Role ID"
                                              },
                                              "person_ids": {
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                },
                                                "title": "Responder ID"
                                              }
                                            },
                                            "x-apifox-orders": [
                                              "role_id",
                                              "person_ids"
                                            ],
                                            "x-apifox-ignore-properties": []
                                          }
                                        }
                                      },
                                      "required": [
                                        "group_name",
                                        "members"
                                      ],
                                      "x-apifox-orders": [
                                        "group_name",
                                        "members"
                                      ],
                                      "title": "On-call team",
                                      "x-apifox-ignore-properties": []
                                    }
                                  },
                                  "x-apifox-orders": [
                                    "start",
                                    "end",
                                    "hash",
                                    "group"
                                  ],
                                  "x-apifox-ignore-properties": []
                                },
                                "title": "Schedule"
                              }
                            },
                            "x-apifox-orders": [
                              "layer_name",
                              "mode",
                              "schedules"
                            ],
                            "x-apifox-ignore-properties": []
                          },
                          "title": "Rule calculation"
                        },
                        "final_schedule": {
                          "type": "object",
                          "properties": {
                            "layer_name": {
                              "type": "string",
                              "description": "Rule name"
                            },
                            "mode": {
                              "type": "integer"
                            },
                            "schedules": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "start": {
                                    "type": "integer",
                                    "description": "Start time"
                                  },
                                  "end": {
                                    "type": "integer",
                                    "description": "End time"
                                  },
                                  "hash": {
                                    "type": "string",
                                    "description": "Hash"
                                  },
                                  "group": {
                                    "type": "object",
                                    "properties": {
                                      "group_name": {
                                        "type": "string",
                                        "description": "Team name"
                                      },
                                      "members": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "role_id": {
                                              "type": "integer",
                                              "description": "Role ID"
                                            },
                                            "person_ids": {
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              },
                                              "description": "Responder ID"
                                            }
                                          },
                                          "x-apifox-orders": [
                                            "role_id",
                                            "person_ids"
                                          ],
                                          "x-apifox-ignore-properties": []
                                        }
                                      }
                                    },
                                    "required": [
                                      "group_name",
                                      "members"
                                    ],
                                    "x-apifox-orders": [
                                      "group_name",
                                      "members"
                                    ],
                                    "description": "On-call team",
                                    "x-apifox-ignore-properties": []
                                  }
                                },
                                "x-apifox-orders": [
                                  "start",
                                  "end",
                                  "hash",
                                  "group"
                                ],
                                "x-apifox-ignore-properties": []
                              }
                            }
                          },
                          "required": [
                            "layer_name",
                            "mode",
                            "schedules"
                          ],
                          "x-apifox-orders": [
                            "layer_name",
                            "mode",
                            "schedules"
                          ],
                          "description": "Final schedule",
                          "x-apifox-ignore-properties": []
                        }
                      },
                      "required": [
                        "start",
                        "end",
                        "schedule_id",
                        "schedule_name",
                        "team_id",
                        "layers",
                        "layer_schedules",
                        "final_schedule"
                      ],
                      "x-apifox-orders": [
                        "start",
                        "end",
                        "schedule_id",
                        "schedule_name",
                        "team_id",
                        "01HFDP1XPF88C5XVX4JRS41DZ6",
                        "01HFDP29E0SXJ0GGPDXQKHQ0CB",
                        "01HFDSVQ93Q3C3MVSTPFW4DFS1"
                      ],
                      "x-apifox-refs": {
                        "01HFDP1XPF88C5XVX4JRS41DZ6": {
                          "$ref": "#/components/schemas/Layers"
                        },
                        "01HFDP29E0SXJ0GGPDXQKHQ0CB": {
                          "$ref": "#/components/schemas/LayerSchedules"
                        },
                        "01HFDSVQ93Q3C3MVSTPFW4DFS1": {
                          "$ref": "#/components/schemas/FinalSchedule"
                        }
                      },
                      "x-apifox-ignore-properties": [
                        "layers",
                        "layer_schedules",
                        "final_schedule"
                      ]
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "enum": [
                            "InvalidParameter",
                            "InvalidContentType",
                            "Unauthorized",
                            "AccessDenied",
                            "MethodNotAllowed",
                            "RequestTooFrequently",
                            "RequestVerifyRequired",
                            "DangerousOperation",
                            "RequestLocked",
                            "RouteNotFound",
                            "BalanceNotEnough",
                            "UndonedOrderExist",
                            "ResourceNotFound",
                            "InternalError",
                            "ReferenceExist"
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "InvalidParameter": "Parameter error (status=400)",
                              "InvalidContentType": "Content-type error (status=400)",
                              "Unauthorized": "Authentication failed (status=401)",
                              "AccessDenied": "Authorization failed (status=403)",
                              "MethodNotAllowed": "（status=405）",
                              "RequestTooFrequently": "Too many requests (status=429)",
                              "RequestVerifyRequired": "Sensitive operation, requires multi-factor authentication (status=428)",
                              "DangerousOperation": "Dangerous operation, requires multi-factor authentication (status=428)",
                              "RequestLocked": "Too many failed sensitive operations, request locked (status=423)",
                              "RouteNotFound": "Request Method+Path not matched (status=404)",
                              "BalanceNotEnough": "Insufficient account balance, please recharge (status=402)",
                              "UndonedOrderExist": "Unfinished order exists, wait for retry or contact customer service (status=409)",
                              "ResourceNotFound": "Account has not purchased resources, please place order in billing center (status=400)",
                              "InternalError": "Internal or unknown error (status=500)",
                              "ReferenceExist": "Associated resources exist, deletion not allowed (status=400)"
                            }
                          }
                        },
                        "message": {
                          "type": "string",
                          "title": "Error description"
                        }
                      },
                      "x-apifox-orders": [
                        "01HFDP0KBDBXEBMDMMA3ES9GGM"
                      ],
                      "x-apifox-refs": {
                        "01HFDP0KBDBXEBMDMMA3ES9GGM": {
                          "$ref": "#/components/schemas/DutyError"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "error"
                  ],
                  "x-apifox-orders": [
                    "data",
                    "error"
                  ],
                  "x-apifox-refs": {},
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Schedule Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-125491399-run"
      }
    },
    "/schedule/update": {
      "post": {
        "summary": "Update Schedule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Schedule Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "layers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "layer_name": {
                          "type": "string",
                          "title": "Rule name"
                        },
                        "mode": {
                          "type": "integer",
                          "title": "Mode (Normal/Temporary)",
                          "enum": [
                            0,
                            1
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "0": "Normal mode",
                              "1": "Temporary mode"
                            }
                          },
                          "description": "Rules with mode=1 are placed after those with mode=0"
                        },
                        "groups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "group_name": {
                                "type": "string",
                                "title": "Group name"
                              },
                              "members": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "role_id": {
                                      "type": "integer",
                                      "title": "Role ID"
                                    },
                                    "person_ids": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      },
                                      "title": "Member ID"
                                    }
                                  },
                                  "x-apifox-orders": [
                                    "role_id",
                                    "person_ids"
                                  ],
                                  "x-apifox-ignore-properties": []
                                }
                              }
                            },
                            "x-apifox-orders": [
                              "group_name",
                              "members"
                            ],
                            "x-apifox-ignore-properties": []
                          },
                          "title": "On-call group"
                        },
                        "rotation_duration": {
                          "type": "integer",
                          "title": "On-call cycle",
                          "description": "Unit: seconds, minimum granularity 1800"
                        },
                        "fair_rotation": {
                          "type": "boolean",
                          "title": "Fair rotation switch"
                        },
                        "handoff_time": {
                          "type": "integer",
                          "title": "Handover time",
                          "description": "Handover time in seconds from Monday 00:00 for weekly rotation cycle"
                        },
                        "layer_start": {
                          "type": "integer",
                          "title": "Start time",
                          "description": "Minimum granularity half hour"
                        },
                        "layer_end": {
                          "type": "integer",
                          "title": "End time",
                          "description": "Minimum granularity half hour"
                        },
                        "restrict_mode": {
                          "type": "integer",
                          "title": "Cycle restriction mode",
                          "enum": [
                            0,
                            1,
                            2
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "0": "No restriction",
                              "1": "Daily restriction",
                              "2": "Weekly restriction"
                            }
                          },
                          "description": "0 No restriction, 1 Daily granularity, 2 Weekly granularity"
                        },
                        "restrict_periods": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "restrict_start": {
                                "type": "integer",
                                "title": "Restriction start time",
                                "description": "Only effective for daily and weekly restriction modes. For daily mode, seconds from 00:00 of the day to restriction start time. For weekly mode, seconds from Monday 00:00 to restriction start time"
                              },
                              "restrict_end": {
                                "type": "integer",
                                "title": "Restriction end time",
                                "description": "Only effective for daily and weekly restriction modes. For daily mode, seconds from 00:00 of the day to restriction end time. For weekly mode, seconds from Monday 00:00 to restriction end time"
                              }
                            },
                            "x-apifox-orders": [
                              "restrict_start",
                              "restrict_end"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "layer_name",
                        "mode",
                        "groups",
                        "rotation_duration",
                        "fair_rotation",
                        "handoff_time",
                        "layer_start",
                        "layer_end",
                        "restrict_mode",
                        "restrict_periods"
                      ],
                      "required": [
                        "mode",
                        "layer_start"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "title": "Rules"
                  },
                  "notify": {
                    "type": "object",
                    "properties": {
                      "advance_in_time": {
                        "type": "integer",
                        "title": "Advance notice time",
                        "description": "Unit: seconds"
                      },
                      "by": {
                        "type": "object",
                        "properties": {
                          "follow_preference": {
                            "type": "boolean",
                            "title": "Personal preference settings"
                          },
                          "personal_channels": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "email",
                                "sms",
                                "feishu_app:xxxx",
                                "dingtalk_app:xxxx",
                                "wecom_app:xxxx"
                              ],
                              "x-apifox": {
                                "enumDescriptions": {
                                  "email": "Email",
                                  "sms": "SMS",
                                  "feishu_app:xxxx": "Feishu/Lark app",
                                  "dingtalk_app:xxxx": "Dingtalk app",
                                  "wecom_app:xxxx": "WeCom app"
                                }
                              }
                            },
                            "title": "Personal custom settings"
                          }
                        },
                        "x-apifox-orders": [
                          "follow_preference",
                          "personal_channels"
                        ],
                        "title": "Personal notifications",
                        "x-apifox-ignore-properties": []
                      },
                      "webhooks": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "title": "Category",
                              "enum": [
                                "feishu",
                                "dingtalk",
                                "feishu_app",
                                "dingtalk_app",
                                "slack_app"
                              ],
                              "x-apifox": {
                                "enumDescriptions": {
                                  "feishu": "",
                                  "dingtalk": "",
                                  "feishu_app": "",
                                  "dingtalk_app": "",
                                  "slack_app": ""
                                }
                              }
                            },
                            "settings": {
                              "type": "object",
                              "properties": {
                                "token": {
                                  "type": "string",
                                  "title": "Token"
                                },
                                "alias": {
                                  "type": "string",
                                  "title": "Alias"
                                },
                                "integration_id": {
                                  "type": "integer",
                                  "title": "Integration ID"
                                },
                                "chat_ids": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Notification IDs"
                                },
                                "sign_secret": {
                                  "type": "string",
                                  "title": "Signature Secret"
                                }
                              },
                              "x-apifox-orders": [
                                "token",
                                "alias",
                                "integration_id",
                                "chat_ids",
                                "sign_secret"
                              ],
                              "x-apifox-ignore-properties": []
                            }
                          },
                          "x-apifox-orders": [
                            "type",
                            "settings"
                          ],
                          "x-apifox-ignore-properties": []
                        },
                        "title": "Webhook notifications"
                      }
                    },
                    "x-apifox-orders": [
                      "advance_in_time",
                      "by",
                      "webhooks"
                    ],
                    "title": "On-call rotation notifications",
                    "x-apifox-ignore-properties": []
                  },
                  "schedule_id": {
                    "type": "integer"
                  },
                  "schedule_name": {
                    "type": "string"
                  },
                  "team_id": {
                    "type": "integer",
                    "title": "Team ID"
                  },
                  "description": {
                    "type": "string",
                    "title": "Remarks"
                  }
                },
                "required": [
                  "schedule_id",
                  "description",
                  "layers"
                ],
                "x-apifox-orders": [
                  "01HFDNP5C4YT01HF9J856BQECX",
                  "01HFDNP6P8BVJTXHDPNN5RXJ1N",
                  "schedule_id",
                  "schedule_name",
                  "team_id",
                  "description"
                ],
                "x-apifox-refs": {
                  "01HFDNP5C4YT01HF9J856BQECX": {
                    "$ref": "#/components/schemas/Layers"
                  },
                  "01HFDNP6P8BVJTXHDPNN5RXJ1N": {
                    "$ref": "#/components/schemas/Notify"
                  }
                },
                "x-apifox-ignore-properties": [
                  "layers",
                  "notify"
                ]
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "enum": [
                            "InvalidParameter",
                            "InvalidContentType",
                            "Unauthorized",
                            "AccessDenied",
                            "MethodNotAllowed",
                            "RequestTooFrequently",
                            "RequestVerifyRequired",
                            "DangerousOperation",
                            "RequestLocked",
                            "RouteNotFound",
                            "BalanceNotEnough",
                            "UndonedOrderExist",
                            "ResourceNotFound",
                            "InternalError",
                            "ReferenceExist"
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "InvalidParameter": "Parameter error (status=400)",
                              "InvalidContentType": "Content-type error (status=400)",
                              "Unauthorized": "Authentication failed (status=401)",
                              "AccessDenied": "Authorization failed (status=403)",
                              "MethodNotAllowed": "（status=405）",
                              "RequestTooFrequently": "Too many requests (status=429)",
                              "RequestVerifyRequired": "Sensitive operation, requires multi-factor authentication (status=428)",
                              "DangerousOperation": "Dangerous operation, requires multi-factor authentication (status=428)",
                              "RequestLocked": "Too many failed sensitive operations, request locked (status=423)",
                              "RouteNotFound": "Request Method+Path not matched (status=404)",
                              "BalanceNotEnough": "Insufficient account balance, please recharge (status=402)",
                              "UndonedOrderExist": "Unfinished order exists, wait for retry or contact customer service (status=409)",
                              "ResourceNotFound": "Account has not purchased resources, please place order in billing center (status=400)",
                              "InternalError": "Internal or unknown error (status=500)",
                              "ReferenceExist": "Associated resources exist, deletion not allowed (status=400)"
                            }
                          }
                        },
                        "message": {
                          "type": "string",
                          "title": "Error description"
                        }
                      },
                      "x-apifox-orders": [
                        "01HFDNRBXZD6KXT7V4J64ZM0RP"
                      ],
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-refs": {
                        "01HFDNRBXZD6KXT7V4J64ZM0RP": {
                          "$ref": "#/components/schemas/DutyError"
                        }
                      },
                      "x-apifox-ignore-properties": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "required": [
                    "error"
                  ],
                  "x-apifox-refs": {},
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success example",
                    "value": {
                      "error": {
                        "code": "0",
                        "message": ""
                      }
                    }
                  }
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Schedule Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-125480762-run"
      }
    },
    "/schedule/enable": {
      "post": {
        "summary": "Enable Schedule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Schedule Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schedule_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Schedule ID"
                  }
                },
                "required": [
                  "schedule_ids"
                ],
                "x-apifox-orders": [
                  "schedule_ids"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "enum": [
                            "InvalidParameter",
                            "InvalidContentType",
                            "Unauthorized",
                            "AccessDenied",
                            "MethodNotAllowed",
                            "RequestTooFrequently",
                            "RequestVerifyRequired",
                            "DangerousOperation",
                            "RequestLocked",
                            "RouteNotFound",
                            "BalanceNotEnough",
                            "UndonedOrderExist",
                            "ResourceNotFound",
                            "InternalError",
                            "ReferenceExist"
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "InvalidParameter": "Parameter error (status=400)",
                              "InvalidContentType": "Content-type error (status=400)",
                              "Unauthorized": "Authentication failed (status=401)",
                              "AccessDenied": "Authorization failed (status=403)",
                              "MethodNotAllowed": "（status=405）",
                              "RequestTooFrequently": "Too many requests (status=429)",
                              "RequestVerifyRequired": "Sensitive operation, requires multi-factor authentication (status=428)",
                              "DangerousOperation": "Dangerous operation, requires multi-factor authentication (status=428)",
                              "RequestLocked": "Too many failed sensitive operations, request locked (status=423)",
                              "RouteNotFound": "Request Method+Path not matched (status=404)",
                              "BalanceNotEnough": "Insufficient account balance, please recharge (status=402)",
                              "UndonedOrderExist": "Unfinished order exists, wait for retry or contact customer service (status=409)",
                              "ResourceNotFound": "Account has not purchased resources, please place order in billing center (status=400)",
                              "InternalError": "Internal or unknown error (status=500)",
                              "ReferenceExist": "Associated resources exist, deletion not allowed (status=400)"
                            }
                          }
                        },
                        "message": {
                          "type": "string",
                          "title": "Error description"
                        }
                      },
                      "x-apifox-orders": [
                        "01HFDP91Z18K9RWZNQ76KJCH1T"
                      ],
                      "x-apifox-refs": {
                        "01HFDP91Z18K9RWZNQ76KJCH1T": {
                          "$ref": "#/components/schemas/DutyError"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Schedule Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-125492117-run"
      }
    },
    "/schedule/disable": {
      "post": {
        "summary": "Disable Schedule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Schedule Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schedule_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Schedule ID"
                  }
                },
                "required": [
                  "schedule_ids"
                ],
                "x-apifox-orders": [
                  "schedule_ids"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "schedule_id": 257580790645249
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "enum": [
                            "InvalidParameter",
                            "InvalidContentType",
                            "Unauthorized",
                            "AccessDenied",
                            "MethodNotAllowed",
                            "RequestTooFrequently",
                            "RequestVerifyRequired",
                            "DangerousOperation",
                            "RequestLocked",
                            "RouteNotFound",
                            "BalanceNotEnough",
                            "UndonedOrderExist",
                            "ResourceNotFound",
                            "InternalError",
                            "ReferenceExist"
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "InvalidParameter": "Parameter error (status=400)",
                              "InvalidContentType": "Content-type error (status=400)",
                              "Unauthorized": "Authentication failed (status=401)",
                              "AccessDenied": "Authorization failed (status=403)",
                              "MethodNotAllowed": "（status=405）",
                              "RequestTooFrequently": "Too many requests (status=429)",
                              "RequestVerifyRequired": "Sensitive operation, requires multi-factor authentication (status=428)",
                              "DangerousOperation": "Dangerous operation, requires multi-factor authentication (status=428)",
                              "RequestLocked": "Too many failed sensitive operations, request locked (status=423)",
                              "RouteNotFound": "Request Method+Path not matched (status=404)",
                              "BalanceNotEnough": "Insufficient account balance, please recharge (status=402)",
                              "UndonedOrderExist": "Unfinished order exists, wait for retry or contact customer service (status=409)",
                              "ResourceNotFound": "Account has not purchased resources, please place order in billing center (status=400)",
                              "InternalError": "Internal or unknown error (status=500)",
                              "ReferenceExist": "Associated resources exist, deletion not allowed (status=400)"
                            }
                          }
                        },
                        "message": {
                          "type": "string",
                          "title": "Error description"
                        }
                      },
                      "x-apifox-orders": [
                        "01HFDPCHF4X2NK6YVMDFHP89D1"
                      ],
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-refs": {
                        "01HFDPCHF4X2NK6YVMDFHP89D1": {
                          "$ref": "#/components/schemas/DutyError"
                        }
                      },
                      "x-apifox-ignore-properties": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "required": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Schedule Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-125582016-run"
      }
    },
    "/schedule/create": {
      "post": {
        "summary": "Create Schedule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Schedule Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "layers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "layer_name": {
                          "type": "string",
                          "title": "Rule name"
                        },
                        "mode": {
                          "type": "integer",
                          "title": "Mode (Normal/Temporary)",
                          "enum": [
                            0,
                            1
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "0": "Normal mode",
                              "1": "Temporary mode"
                            }
                          },
                          "description": "Rules with mode=1 are placed after those with mode=0"
                        },
                        "groups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "group_name": {
                                "type": "string",
                                "title": "Group name"
                              },
                              "members": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "role_id": {
                                      "type": "integer",
                                      "title": "Role ID"
                                    },
                                    "person_ids": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      },
                                      "title": "Member ID"
                                    }
                                  },
                                  "x-apifox-orders": [
                                    "role_id",
                                    "person_ids"
                                  ],
                                  "x-apifox-ignore-properties": []
                                }
                              }
                            },
                            "x-apifox-orders": [
                              "group_name",
                              "members"
                            ],
                            "x-apifox-ignore-properties": []
                          },
                          "title": "On-call group"
                        },
                        "rotation_duration": {
                          "type": "integer",
                          "title": "On-call cycle",
                          "description": "Unit: seconds, minimum granularity 1800"
                        },
                        "fair_rotation": {
                          "type": "boolean",
                          "title": "Fair rotation switch"
                        },
                        "handoff_time": {
                          "type": "integer",
                          "title": "Handover time",
                          "description": "Handover time in seconds from Monday 00:00 for weekly rotation cycle"
                        },
                        "layer_start": {
                          "type": "integer",
                          "title": "Start time",
                          "description": "Minimum granularity half hour"
                        },
                        "layer_end": {
                          "type": "integer",
                          "title": "End time",
                          "description": "Minimum granularity half hour"
                        },
                        "restrict_mode": {
                          "type": "integer",
                          "title": "Cycle restriction mode",
                          "enum": [
                            0,
                            1,
                            2
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "0": "No restriction",
                              "1": "Daily restriction",
                              "2": "Weekly restriction"
                            }
                          },
                          "description": "0 No restriction, 1 Daily granularity, 2 Weekly granularity"
                        },
                        "restrict_periods": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "restrict_start": {
                                "type": "integer",
                                "title": "Restriction start time",
                                "description": "Only effective for daily and weekly restriction modes. For daily mode, seconds from 00:00 of the day to restriction start time. For weekly mode, seconds from Monday 00:00 to restriction start time"
                              },
                              "restrict_end": {
                                "type": "integer",
                                "title": "Restriction end time",
                                "description": "Only effective for daily and weekly restriction modes. For daily mode, seconds from 00:00 of the day to restriction end time. For weekly mode, seconds from Monday 00:00 to restriction end time"
                              }
                            },
                            "x-apifox-orders": [
                              "restrict_start",
                              "restrict_end"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "layer_name",
                        "mode",
                        "groups",
                        "rotation_duration",
                        "fair_rotation",
                        "handoff_time",
                        "layer_start",
                        "layer_end",
                        "restrict_mode",
                        "restrict_periods"
                      ],
                      "required": [
                        "mode",
                        "layer_start"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "title": "Rules"
                  },
                  "notify": {
                    "type": "object",
                    "properties": {
                      "advance_in_time": {
                        "type": "integer",
                        "title": "Advance notice time",
                        "description": "Unit: seconds"
                      },
                      "by": {
                        "type": "object",
                        "properties": {
                          "follow_preference": {
                            "type": "boolean",
                            "title": "Personal preference settings"
                          },
                          "personal_channels": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "email",
                                "sms",
                                "feishu_app:xxxx",
                                "dingtalk_app:xxxx",
                                "wecom_app:xxxx"
                              ],
                              "x-apifox": {
                                "enumDescriptions": {
                                  "email": "Email",
                                  "sms": "SMS",
                                  "feishu_app:xxxx": "Feishu/Lark app",
                                  "dingtalk_app:xxxx": "Dingtalk app",
                                  "wecom_app:xxxx": "WeCom app"
                                }
                              }
                            },
                            "title": "Personal custom settings"
                          }
                        },
                        "x-apifox-orders": [
                          "follow_preference",
                          "personal_channels"
                        ],
                        "title": "Personal notifications",
                        "x-apifox-ignore-properties": []
                      },
                      "webhooks": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "title": "Category",
                              "enum": [
                                "feishu",
                                "dingtalk",
                                "feishu_app",
                                "dingtalk_app",
                                "slack_app"
                              ],
                              "x-apifox": {
                                "enumDescriptions": {
                                  "feishu": "",
                                  "dingtalk": "",
                                  "feishu_app": "",
                                  "dingtalk_app": "",
                                  "slack_app": ""
                                }
                              }
                            },
                            "settings": {
                              "type": "object",
                              "properties": {
                                "token": {
                                  "type": "string",
                                  "title": "Token"
                                },
                                "alias": {
                                  "type": "string",
                                  "title": "Alias"
                                },
                                "integration_id": {
                                  "type": "integer",
                                  "title": "Integration ID"
                                },
                                "chat_ids": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "Notification IDs"
                                },
                                "sign_secret": {
                                  "type": "string",
                                  "title": "Signature Secret"
                                }
                              },
                              "x-apifox-orders": [
                                "token",
                                "alias",
                                "integration_id",
                                "chat_ids",
                                "sign_secret"
                              ],
                              "x-apifox-ignore-properties": []
                            }
                          },
                          "x-apifox-orders": [
                            "type",
                            "settings"
                          ],
                          "x-apifox-ignore-properties": []
                        },
                        "title": "Webhook notifications"
                      }
                    },
                    "x-apifox-orders": [
                      "advance_in_time",
                      "by",
                      "webhooks"
                    ],
                    "title": "On-call rotation notifications",
                    "x-apifox-ignore-properties": []
                  },
                  "schedule_name": {
                    "type": "string"
                  },
                  "team_id": {
                    "type": "integer",
                    "title": "Team ID"
                  },
                  "status": {
                    "type": "integer",
                    "title": "Enable status",
                    "description": "0 Enabled"
                  },
                  "description": {
                    "type": "string",
                    "title": "Remarks"
                  }
                },
                "required": [
                  "schedule_name",
                  "status",
                  "description",
                  "layers"
                ],
                "x-apifox-orders": [
                  "01HFDNCWY63N427RNVZC9PVPK6",
                  "01HFDNDCVYM2R61FGG61S52565",
                  "schedule_name",
                  "team_id",
                  "status",
                  "description"
                ],
                "x-apifox-refs": {
                  "01HFDNCWY63N427RNVZC9PVPK6": {
                    "$ref": "#/components/schemas/Layers"
                  },
                  "01HFDNDCVYM2R61FGG61S52565": {
                    "$ref": "#/components/schemas/Notify"
                  }
                },
                "x-apifox-ignore-properties": [
                  "layers",
                  "notify"
                ]
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "schedule_id": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "schedule_id"
                      ],
                      "x-apifox-orders": [
                        "schedule_id"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "enum": [
                            "InvalidParameter",
                            "InvalidContentType",
                            "Unauthorized",
                            "AccessDenied",
                            "MethodNotAllowed",
                            "RequestTooFrequently",
                            "RequestVerifyRequired",
                            "DangerousOperation",
                            "RequestLocked",
                            "RouteNotFound",
                            "BalanceNotEnough",
                            "UndonedOrderExist",
                            "ResourceNotFound",
                            "InternalError",
                            "ReferenceExist"
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "InvalidParameter": "Parameter error (status=400)",
                              "InvalidContentType": "Content-type error (status=400)",
                              "Unauthorized": "Authentication failed (status=401)",
                              "AccessDenied": "Authorization failed (status=403)",
                              "MethodNotAllowed": "（status=405）",
                              "RequestTooFrequently": "Too many requests (status=429)",
                              "RequestVerifyRequired": "Sensitive operation, requires multi-factor authentication (status=428)",
                              "DangerousOperation": "Dangerous operation, requires multi-factor authentication (status=428)",
                              "RequestLocked": "Too many failed sensitive operations, request locked (status=423)",
                              "RouteNotFound": "Request Method+Path not matched (status=404)",
                              "BalanceNotEnough": "Insufficient account balance, please recharge (status=402)",
                              "UndonedOrderExist": "Unfinished order exists, wait for retry or contact customer service (status=409)",
                              "ResourceNotFound": "Account has not purchased resources, please place order in billing center (status=400)",
                              "InternalError": "Internal or unknown error (status=500)",
                              "ReferenceExist": "Associated resources exist, deletion not allowed (status=400)"
                            }
                          }
                        },
                        "message": {
                          "type": "string",
                          "title": "Error description"
                        }
                      },
                      "x-apifox-orders": [
                        "01HFDN564BWKRT322EWEXBBKFY"
                      ],
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-refs": {
                        "01HFDN564BWKRT322EWEXBBKFY": {
                          "$ref": "#/components/schemas/DutyError"
                        }
                      },
                      "x-apifox-ignore-properties": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "x-apifox-orders": [
                    "data",
                    "error"
                  ],
                  "x-apifox-refs": {},
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success example",
                    "value": {
                      "data": {
                        "schedule_id": 0
                      },
                      "error": {
                        "code": "",
                        "message": ""
                      }
                    }
                  }
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Schedule Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-125481278-run"
      }
    },
    "/schedule/delete": {
      "post": {
        "summary": "Delete Schedule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Schedule Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schedule_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "schedule_ids"
                ],
                "x-apifox-orders": [
                  "schedule_ids"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "scheudle_ids": [
                  1
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "refs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Reference"
                          },
                          "title": "Associated Resource List"
                        }
                      },
                      "x-apifox-orders": [
                        "refs"
                      ],
                      "required": [
                        "refs"
                      ],
                      "description": "Only exists when code=ReferenceExist",
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Schedule Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-125492299-run"
      }
    },
    "/schedule/info": {
      "post": {
        "summary": "View Schedule Details",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Schedule Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schedule_id": {
                    "type": "integer",
                    "title": "Schedule ID"
                  },
                  "start": {
                    "type": "integer",
                    "title": "Start time",
                    "description": "Time automatically aligned to the previous half hour"
                  },
                  "end": {
                    "type": "integer",
                    "title": "End time",
                    "description": "Time automatically aligned to the previous half hour, interval with start should not exceed 30 days"
                  }
                },
                "required": [
                  "schedule_id",
                  "start",
                  "end"
                ],
                "x-apifox-orders": [
                  "schedule_id",
                  "start",
                  "end"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "schedule_id": 123,
                "start": 1111111111,
                "end": 11111111111
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "schedule_id": {
                          "type": "integer"
                        },
                        "schedule_name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "team_id": {
                          "type": "integer"
                        },
                        "layers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "layer_name": {
                                "type": "string",
                                "title": "Rule name"
                              },
                              "mode": {
                                "type": "integer",
                                "title": "Mode (Normal/Temporary)",
                                "enum": [
                                  0,
                                  1
                                ],
                                "x-apifox": {
                                  "enumDescriptions": {
                                    "0": "Normal mode",
                                    "1": "Temporary mode"
                                  }
                                },
                                "description": "Rules with mode=1 are placed after those with mode=0"
                              },
                              "groups": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "group_name": {
                                      "type": "string",
                                      "title": "Group name"
                                    },
                                    "members": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "role_id": {
                                            "type": "integer",
                                            "title": "Role ID"
                                          },
                                          "person_ids": {
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            },
                                            "title": "Member ID"
                                          }
                                        },
                                        "x-apifox-orders": [
                                          "role_id",
                                          "person_ids"
                                        ],
                                        "x-apifox-ignore-properties": []
                                      }
                                    }
                                  },
                                  "x-apifox-orders": [
                                    "group_name",
                                    "members"
                                  ],
                                  "x-apifox-ignore-properties": []
                                },
                                "title": "On-call group"
                              },
                              "rotation_duration": {
                                "type": "integer",
                                "title": "On-call cycle",
                                "description": "Unit: seconds, minimum granularity 1800"
                              },
                              "fair_rotation": {
                                "type": "boolean",
                                "title": "Fair rotation switch"
                              },
                              "handoff_time": {
                                "type": "integer",
                                "title": "Handover time",
                                "description": "Handover time in seconds from Monday 00:00 for weekly rotation cycle"
                              },
                              "layer_start": {
                                "type": "integer",
                                "title": "Start time",
                                "description": "Minimum granularity half hour"
                              },
                              "layer_end": {
                                "type": "integer",
                                "title": "End time",
                                "description": "Minimum granularity half hour"
                              },
                              "restrict_mode": {
                                "type": "integer",
                                "title": "Cycle restriction mode",
                                "enum": [
                                  0,
                                  1,
                                  2
                                ],
                                "x-apifox": {
                                  "enumDescriptions": {
                                    "0": "No restriction",
                                    "1": "Daily restriction",
                                    "2": "Weekly restriction"
                                  }
                                },
                                "description": "0 No restriction, 1 Daily granularity, 2 Weekly granularity"
                              },
                              "restrict_periods": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "restrict_start": {
                                      "type": "integer",
                                      "title": "Restriction start time",
                                      "description": "Only effective for daily and weekly restriction modes. For daily mode, seconds from 00:00 of the day to restriction start time. For weekly mode, seconds from Monday 00:00 to restriction start time"
                                    },
                                    "restrict_end": {
                                      "type": "integer",
                                      "title": "Restriction end time",
                                      "description": "Only effective for daily and weekly restriction modes. For daily mode, seconds from 00:00 of the day to restriction end time. For weekly mode, seconds from Monday 00:00 to restriction end time"
                                    }
                                  },
                                  "x-apifox-orders": [
                                    "restrict_start",
                                    "restrict_end"
                                  ],
                                  "x-apifox-ignore-properties": []
                                }
                              }
                            },
                            "x-apifox-orders": [
                              "layer_name",
                              "mode",
                              "groups",
                              "rotation_duration",
                              "fair_rotation",
                              "handoff_time",
                              "layer_start",
                              "layer_end",
                              "restrict_mode",
                              "restrict_periods"
                            ],
                            "required": [
                              "mode",
                              "layer_start"
                            ],
                            "x-apifox-ignore-properties": []
                          },
                          "title": "Rules"
                        },
                        "layer_schedules": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "layer_name": {
                                "type": "string",
                                "title": "Rule name"
                              },
                              "mode": {
                                "type": "integer",
                                "title": "Mode (Normal/Temporary)"
                              },
                              "schedules": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "start": {
                                      "type": "integer",
                                      "title": "Start time"
                                    },
                                    "end": {
                                      "type": "integer",
                                      "title": "End time"
                                    },
                                    "hash": {
                                      "type": "string",
                                      "title": "Hash"
                                    },
                                    "group": {
                                      "type": "object",
                                      "properties": {
                                        "group_name": {
                                          "type": "string",
                                          "title": "Team name"
                                        },
                                        "members": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "role_id": {
                                                "type": "integer",
                                                "title": "Role ID"
                                              },
                                              "person_ids": {
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                },
                                                "title": "Responder ID"
                                              }
                                            },
                                            "x-apifox-orders": [
                                              "role_id",
                                              "person_ids"
                                            ],
                                            "x-apifox-ignore-properties": []
                                          }
                                        }
                                      },
                                      "required": [
                                        "group_name",
                                        "members"
                                      ],
                                      "x-apifox-orders": [
                                        "group_name",
                                        "members"
                                      ],
                                      "title": "On-call team",
                                      "x-apifox-ignore-properties": []
                                    }
                                  },
                                  "x-apifox-orders": [
                                    "start",
                                    "end",
                                    "hash",
                                    "group"
                                  ],
                                  "x-apifox-ignore-properties": []
                                },
                                "title": "Schedule"
                              }
                            },
                            "x-apifox-orders": [
                              "layer_name",
                              "mode",
                              "schedules"
                            ],
                            "x-apifox-ignore-properties": []
                          },
                          "title": "Rule calculation"
                        },
                        "final_schedule": {
                          "type": "object",
                          "properties": {
                            "layer_name": {
                              "type": "string",
                              "description": "Rule name"
                            },
                            "mode": {
                              "type": "integer"
                            },
                            "schedules": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "start": {
                                    "type": "integer",
                                    "description": "Start time"
                                  },
                                  "end": {
                                    "type": "integer",
                                    "description": "End time"
                                  },
                                  "hash": {
                                    "type": "string",
                                    "description": "Hash"
                                  },
                                  "group": {
                                    "type": "object",
                                    "properties": {
                                      "group_name": {
                                        "type": "string",
                                        "description": "Team name"
                                      },
                                      "members": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "role_id": {
                                              "type": "integer",
                                              "description": "Role ID"
                                            },
                                            "person_ids": {
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              },
                                              "description": "Responder ID"
                                            }
                                          },
                                          "x-apifox-orders": [
                                            "role_id",
                                            "person_ids"
                                          ],
                                          "x-apifox-ignore-properties": []
                                        }
                                      }
                                    },
                                    "required": [
                                      "group_name",
                                      "members"
                                    ],
                                    "x-apifox-orders": [
                                      "group_name",
                                      "members"
                                    ],
                                    "description": "On-call team",
                                    "x-apifox-ignore-properties": []
                                  }
                                },
                                "x-apifox-orders": [
                                  "start",
                                  "end",
                                  "hash",
                                  "group"
                                ],
                                "x-apifox-ignore-properties": []
                              }
                            }
                          },
                          "required": [
                            "layer_name",
                            "mode",
                            "schedules"
                          ],
                          "x-apifox-orders": [
                            "layer_name",
                            "mode",
                            "schedules"
                          ],
                          "description": "Final schedule",
                          "x-apifox-ignore-properties": []
                        },
                        "cur_oncall": {
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "title": "Start time"
                            },
                            "end": {
                              "type": "integer",
                              "title": "End time"
                            },
                            "group": {
                              "type": "object",
                              "properties": {
                                "group_name": {
                                  "type": "string",
                                  "title": "Group name"
                                },
                                "members": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "role_id": {
                                        "type": "integer",
                                        "title": "Role ID"
                                      },
                                      "person_ids": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        },
                                        "title": "Member ID"
                                      }
                                    },
                                    "x-apifox-orders": [
                                      "role_id",
                                      "person_ids"
                                    ],
                                    "x-apifox-ignore-properties": []
                                  },
                                  "title": "On-call members"
                                }
                              },
                              "x-apifox-orders": [
                                "group_name",
                                "members"
                              ],
                              "title": "On-call group",
                              "x-apifox-ignore-properties": []
                            }
                          },
                          "x-apifox-orders": [
                            "start",
                            "end",
                            "group"
                          ],
                          "title": "Current on-call information",
                          "x-apifox-ignore-properties": []
                        },
                        "next_oncall": {
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "title": "Start time"
                            },
                            "end": {
                              "type": "integer",
                              "title": "End time"
                            },
                            "group": {
                              "type": "object",
                              "properties": {
                                "group_name": {
                                  "type": "string",
                                  "title": "Group name"
                                },
                                "members": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "role_id": {
                                        "type": "integer",
                                        "title": "Role ID"
                                      },
                                      "person_ids": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        },
                                        "title": "Member ID"
                                      }
                                    },
                                    "x-apifox-orders": [
                                      "role_id",
                                      "person_ids"
                                    ],
                                    "x-apifox-ignore-properties": []
                                  },
                                  "title": "On-call members"
                                }
                              },
                              "x-apifox-orders": [
                                "group_name",
                                "members"
                              ],
                              "title": "On-call group",
                              "x-apifox-ignore-properties": []
                            }
                          },
                          "x-apifox-orders": [
                            "start",
                            "end",
                            "group"
                          ],
                          "title": "Next shift information",
                          "x-apifox-ignore-properties": []
                        }
                      },
                      "x-apifox-orders": [
                        "schedule_id",
                        "schedule_name",
                        "description",
                        "status",
                        "team_id",
                        "01HFDPMXAG4NN2RQ3A39G385DX",
                        "01HFDPN57KYJZNPCNF5VH4GQ15",
                        "01HFDPNE8EKYQK624E8P6J49HW",
                        "cur_oncall",
                        "next_oncall"
                      ],
                      "x-apifox-refs": {
                        "01HFDPMXAG4NN2RQ3A39G385DX": {
                          "$ref": "#/components/schemas/Layers"
                        },
                        "01HFDPN57KYJZNPCNF5VH4GQ15": {
                          "$ref": "#/components/schemas/LayerSchedules"
                        },
                        "01HFDPNE8EKYQK624E8P6J49HW": {
                          "$ref": "#/components/schemas/FinalSchedule"
                        }
                      },
                      "required": [
                        "layers",
                        "layer_schedules",
                        "final_schedule"
                      ],
                      "x-apifox-ignore-properties": [
                        "layers",
                        "layer_schedules",
                        "final_schedule"
                      ]
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "enum": [
                            "InvalidParameter",
                            "InvalidContentType",
                            "Unauthorized",
                            "AccessDenied",
                            "MethodNotAllowed",
                            "RequestTooFrequently",
                            "RequestVerifyRequired",
                            "DangerousOperation",
                            "RequestLocked",
                            "RouteNotFound",
                            "BalanceNotEnough",
                            "UndonedOrderExist",
                            "ResourceNotFound",
                            "InternalError",
                            "ReferenceExist"
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "InvalidParameter": "Parameter error (status=400)",
                              "InvalidContentType": "Content-type error (status=400)",
                              "Unauthorized": "Authentication failed (status=401)",
                              "AccessDenied": "Authorization failed (status=403)",
                              "MethodNotAllowed": "（status=405）",
                              "RequestTooFrequently": "Too many requests (status=429)",
                              "RequestVerifyRequired": "Sensitive operation, requires multi-factor authentication (status=428)",
                              "DangerousOperation": "Dangerous operation, requires multi-factor authentication (status=428)",
                              "RequestLocked": "Too many failed sensitive operations, request locked (status=423)",
                              "RouteNotFound": "Request Method+Path not matched (status=404)",
                              "BalanceNotEnough": "Insufficient account balance, please recharge (status=402)",
                              "UndonedOrderExist": "Unfinished order exists, wait for retry or contact customer service (status=409)",
                              "ResourceNotFound": "Account has not purchased resources, please place order in billing center (status=400)",
                              "InternalError": "Internal or unknown error (status=500)",
                              "ReferenceExist": "Associated resources exist, deletion not allowed (status=400)"
                            }
                          }
                        },
                        "message": {
                          "type": "string",
                          "title": "Error description"
                        }
                      },
                      "x-apifox-orders": [
                        "01HFDPPM2V3Q6AXFNWHTMQBR42"
                      ],
                      "x-apifox-refs": {
                        "01HFDPPM2V3Q6AXFNWHTMQBR42": {
                          "$ref": "#/components/schemas/DutyError"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": [
                        "code",
                        "message"
                      ]
                    },
                    "request_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "request_id",
                    "data"
                  ],
                  "x-apifox-orders": [
                    "data",
                    "error",
                    "request_id"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success example",
                    "value": {
                      "request_id": "0a63016e66ab47532d066bea90a892b0",
                      "data": {
                        "cur_oncall": {
                          "start": 1722500940,
                          "end": 1722787200,
                          "group": {
                            "name": "A",
                            "group_name": "A",
                            "members": [
                              {
                                "role_id": 0,
                                "person_ids": [
                                  2715149662131
                                ]
                              }
                            ]
                          },
                          "update_at": 1720159704,
                          "weight": 0,
                          "index": 0
                        },
                        "next_oncall": {
                          "start": 1722500940,
                          "end": 1722787200,
                          "group": {
                            "name": "A",
                            "group_name": "A",
                            "members": [
                              {
                                "role_id": 0,
                                "person_ids": [
                                  2715149662131
                                ]
                              }
                            ]
                          },
                          "update_at": 1720159704,
                          "weight": 0,
                          "index": 0
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Schedule Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-125492455-run"
      }
    },
    "/schedule/infos": {
      "post": {
        "summary": "Get Schedule List by IDs",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Schedule Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schedule_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Schedule ID list",
                    "description": "\"schedule_ids\":[2862209469733,2721315060917]}"
                  }
                },
                "required": [
                  "schedule_ids"
                ],
                "x-apifox-orders": [
                  "schedule_ids"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "schedule_id": 123,
                "start": 1111111111,
                "end": 11111111111
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "enum": [
                            "InvalidParameter",
                            "InvalidContentType",
                            "Unauthorized",
                            "AccessDenied",
                            "MethodNotAllowed",
                            "RequestTooFrequently",
                            "RequestVerifyRequired",
                            "DangerousOperation",
                            "RequestLocked",
                            "RouteNotFound",
                            "BalanceNotEnough",
                            "UndonedOrderExist",
                            "ResourceNotFound",
                            "InternalError",
                            "ReferenceExist"
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "InvalidParameter": "Parameter error (status=400)",
                              "InvalidContentType": "Content-type error (status=400)",
                              "Unauthorized": "Authentication failed (status=401)",
                              "AccessDenied": "Authorization failed (status=403)",
                              "MethodNotAllowed": "（status=405）",
                              "RequestTooFrequently": "Too many requests (status=429)",
                              "RequestVerifyRequired": "Sensitive operation, requires multi-factor authentication (status=428)",
                              "DangerousOperation": "Dangerous operation, requires multi-factor authentication (status=428)",
                              "RequestLocked": "Too many failed sensitive operations, request locked (status=423)",
                              "RouteNotFound": "Request Method+Path not matched (status=404)",
                              "BalanceNotEnough": "Insufficient account balance, please recharge (status=402)",
                              "UndonedOrderExist": "Unfinished order exists, wait for retry or contact customer service (status=409)",
                              "ResourceNotFound": "Account has not purchased resources, please place order in billing center (status=400)",
                              "InternalError": "Internal or unknown error (status=500)",
                              "ReferenceExist": "Associated resources exist, deletion not allowed (status=400)"
                            }
                          }
                        },
                        "message": {
                          "type": "string",
                          "title": "Error description"
                        }
                      },
                      "x-apifox-orders": [
                        "01HFDPPM2V3Q6AXFNWHTMQBR42"
                      ],
                      "x-apifox-refs": {
                        "01HFDPPM2V3Q6AXFNWHTMQBR42": {
                          "$ref": "#/components/schemas/DutyError"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": [
                        "code",
                        "message"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "schedule_id": {
                                "type": "integer",
                                "title": "ID"
                              },
                              "schedule_name": {
                                "type": "string",
                                "title": "Name"
                              },
                              "team_id": {
                                "type": "integer",
                                "title": "Team ID"
                              },
                              "description": {
                                "type": "string",
                                "title": "Remarks"
                              },
                              "status": {
                                "type": "integer",
                                "title": "Status",
                                "description": "0 Enabled, 1 Disabled"
                              }
                            },
                            "x-apifox-orders": [
                              "schedule_id",
                              "schedule_name",
                              "team_id",
                              "description",
                              "status"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success example",
                    "value": {
                      "request_id": "0a63016e664c41337a598ff893017bb0",
                      "data": {
                        "items": [
                          {
                            "id": 2721315060917,
                            "name": "test001",
                            "account_id": 2451002751131,
                            "desc": "",
                            "group_id": 2477033058131,
                            "disabled": 0,
                            "create_at": 1706182604,
                            "create_by": 2715149662131,
                            "update_at": 1714484234,
                            "update_by": 2476909022131,
                            "layers": null,
                            "schedule_layers": null,
                            "final_schedule": {
                              "name": "",
                              "mode": 0,
                              "schedules": null
                            },
                            "notify": {
                              "advance_in_time": 0,
                              "by": {
                                "follow_preference": false,
                                "personal_channels": null
                              },
                              "webhooks": null
                            },
                            "schedule_id": 2721315060917,
                            "schedule_name": "test001",
                            "team_id": 2477033058131,
                            "description": "",
                            "layer_schedules": null,
                            "status": 0,
                            "cur_oncall": null,
                            "next_oncall": null
                          },
                          {
                            "id": 2862209469733,
                            "name": "test-Unisplendour Cloud",
                            "account_id": 2451002751131,
                            "desc": "",
                            "group_id": 2477033058131,
                            "disabled": 0,
                            "create_at": 1708934448,
                            "create_by": 2476909022131,
                            "update_at": 1714105918,
                            "update_by": 2476909022131,
                            "layers": null,
                            "schedule_layers": null,
                            "final_schedule": {
                              "name": "",
                              "mode": 0,
                              "schedules": null
                            },
                            "notify": {
                              "advance_in_time": 0,
                              "by": {
                                "follow_preference": true,
                                "personal_channels": null
                              },
                              "webhooks": null
                            },
                            "schedule_id": 2862209469733,
                            "schedule_name": "test-Unisplendour Cloud",
                            "team_id": 2477033058131,
                            "description": "",
                            "layer_schedules": null,
                            "status": 0,
                            "cur_oncall": null,
                            "next_oncall": null
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Schedule Management",
        "x-apifox-status": "developing",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-176228962-run"
      }
    },
    "/schedule/list": {
      "post": {
        "summary": "View Schedule List",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Schedule Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string",
                    "title": "Search match"
                  },
                  "p": {
                    "type": "integer",
                    "title": "Page number, starts from 1"
                  },
                  "limit": {
                    "type": "integer",
                    "title": "Items per page, default 10"
                  },
                  "is_my_team": {
                    "type": "boolean",
                    "title": "My teams only"
                  },
                  "start": {
                    "type": "integer",
                    "title": "Start time"
                  },
                  "end": {
                    "type": "integer",
                    "title": "End time"
                  }
                },
                "x-apifox-orders": [
                  "query",
                  "p",
                  "limit",
                  "is_my_team",
                  "start",
                  "end"
                ],
                "x-apifox-refs": {},
                "x-apifox-ignore-properties": []
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "schedule_id": {
                                "type": "integer"
                              },
                              "schedule_name": {
                                "type": "string"
                              },
                              "desc": {
                                "type": "string"
                              },
                              "group_id": {
                                "type": "integer"
                              },
                              "endabled": {
                                "type": "boolean"
                              },
                              "create_at": {
                                "type": "integer"
                              },
                              "create_by": {
                                "type": "integer"
                              },
                              "update_at": {
                                "type": "integer"
                              },
                              "update_by": {
                                "type": "integer"
                              },
                              "final_schedule": {
                                "type": "object",
                                "properties": {
                                  "layer_name": {
                                    "type": "string",
                                    "description": "Rule name"
                                  },
                                  "mode": {
                                    "type": "integer"
                                  },
                                  "schedules": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "start": {
                                          "type": "integer",
                                          "description": "Start time"
                                        },
                                        "end": {
                                          "type": "integer",
                                          "description": "End time"
                                        },
                                        "hash": {
                                          "type": "string",
                                          "description": "Hash"
                                        },
                                        "group": {
                                          "type": "object",
                                          "properties": {
                                            "group_name": {
                                              "type": "string",
                                              "description": "Team name"
                                            },
                                            "members": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "role_id": {
                                                    "type": "integer",
                                                    "description": "Role ID"
                                                  },
                                                  "person_ids": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "integer"
                                                    },
                                                    "description": "Responder ID"
                                                  }
                                                },
                                                "x-apifox-orders": [
                                                  "role_id",
                                                  "person_ids"
                                                ],
                                                "x-apifox-ignore-properties": []
                                              }
                                            }
                                          },
                                          "required": [
                                            "group_name",
                                            "members"
                                          ],
                                          "x-apifox-orders": [
                                            "group_name",
                                            "members"
                                          ],
                                          "description": "On-call team",
                                          "x-apifox-ignore-properties": []
                                        }
                                      },
                                      "x-apifox-orders": [
                                        "start",
                                        "end",
                                        "hash",
                                        "group"
                                      ],
                                      "x-apifox-ignore-properties": []
                                    }
                                  }
                                },
                                "required": [
                                  "layer_name",
                                  "mode",
                                  "schedules"
                                ],
                                "x-apifox-orders": [
                                  "layer_name",
                                  "mode",
                                  "schedules"
                                ],
                                "description": "Final schedule",
                                "x-apifox-ignore-properties": []
                              }
                            },
                            "x-apifox-orders": [
                              "schedule_id",
                              "schedule_name",
                              "desc",
                              "group_id",
                              "endabled",
                              "create_at",
                              "create_by",
                              "update_at",
                              "update_by",
                              "01HGW982N25ZQGG6GNSW55W3E6"
                            ],
                            "x-apifox-refs": {
                              "01HGW982N25ZQGG6GNSW55W3E6": {
                                "$ref": "#/components/schemas/FinalSchedule"
                              }
                            },
                            "required": [
                              "final_schedule"
                            ],
                            "x-apifox-ignore-properties": [
                              "final_schedule"
                            ]
                          }
                        },
                        "total": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "items",
                        "total"
                      ],
                      "x-apifox-orders": [
                        "items",
                        "total"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "enum": [
                            "InvalidParameter",
                            "InvalidContentType",
                            "Unauthorized",
                            "AccessDenied",
                            "MethodNotAllowed",
                            "RequestTooFrequently",
                            "RequestVerifyRequired",
                            "DangerousOperation",
                            "RequestLocked",
                            "RouteNotFound",
                            "BalanceNotEnough",
                            "UndonedOrderExist",
                            "ResourceNotFound",
                            "InternalError",
                            "ReferenceExist"
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "InvalidParameter": "Parameter error (status=400)",
                              "InvalidContentType": "Content-type error (status=400)",
                              "Unauthorized": "Authentication failed (status=401)",
                              "AccessDenied": "Authorization failed (status=403)",
                              "MethodNotAllowed": "（status=405）",
                              "RequestTooFrequently": "Too many requests (status=429)",
                              "RequestVerifyRequired": "Sensitive operation, requires multi-factor authentication (status=428)",
                              "DangerousOperation": "Dangerous operation, requires multi-factor authentication (status=428)",
                              "RequestLocked": "Too many failed sensitive operations, request locked (status=423)",
                              "RouteNotFound": "Request Method+Path not matched (status=404)",
                              "BalanceNotEnough": "Insufficient account balance, please recharge (status=402)",
                              "UndonedOrderExist": "Unfinished order exists, wait for retry or contact customer service (status=409)",
                              "ResourceNotFound": "Account has not purchased resources, please place order in billing center (status=400)",
                              "InternalError": "Internal or unknown error (status=500)",
                              "ReferenceExist": "Associated resources exist, deletion not allowed (status=400)"
                            }
                          }
                        },
                        "message": {
                          "type": "string",
                          "title": "Error description"
                        }
                      },
                      "x-apifox-orders": [
                        "01HFDPV9QQRK19S31BM2FGJP7T"
                      ],
                      "x-apifox-refs": {
                        "01HFDPV9QQRK19S31BM2FGJP7T": {
                          "$ref": "#/components/schemas/DutyError"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "01HFBRPCKCSAMPHYJK6SVYVECX",
                    "error"
                  ],
                  "x-apifox-orders": [
                    "01HFBRPCKCSAMPHYJK6SVYVECX",
                    "data",
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Schedule Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-125492499-run"
      }
    },
    "/schedule/self": {
      "post": {
        "summary": "Personal On-call Schedule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Schedule Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start": {
                    "type": "integer",
                    "title": "Start time",
                    "description": "Time automatically aligned to the previous half hour"
                  },
                  "end": {
                    "type": "integer",
                    "title": "End time",
                    "description": "Time automatically aligned to the previous half hour, interval with start should not exceed 30 days"
                  }
                },
                "required": [
                  "end",
                  "start"
                ],
                "x-apifox-orders": [
                  "start",
                  "end"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "start": 11111111,
                "end": 11111111
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "schedule_id": {
                                "type": "integer"
                              },
                              "schedule_name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "team_id": {
                                "type": "integer"
                              },
                              "enabled": {
                                "type": "boolean"
                              },
                              "layers": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "layer_name": {
                                      "type": "string",
                                      "title": "Rule name"
                                    },
                                    "mode": {
                                      "type": "integer",
                                      "title": "Mode (Normal/Temporary)",
                                      "enum": [
                                        0,
                                        1
                                      ],
                                      "x-apifox": {
                                        "enumDescriptions": {
                                          "0": "Normal mode",
                                          "1": "Temporary mode"
                                        }
                                      },
                                      "description": "Rules with mode=1 are placed after those with mode=0"
                                    },
                                    "groups": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "group_name": {
                                            "type": "string",
                                            "title": "Group name"
                                          },
                                          "members": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "role_id": {
                                                  "type": "integer",
                                                  "title": "Role ID"
                                                },
                                                "person_ids": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "integer"
                                                  },
                                                  "title": "Member ID"
                                                }
                                              },
                                              "x-apifox-orders": [
                                                "role_id",
                                                "person_ids"
                                              ],
                                              "x-apifox-ignore-properties": []
                                            }
                                          }
                                        },
                                        "x-apifox-orders": [
                                          "group_name",
                                          "members"
                                        ],
                                        "x-apifox-ignore-properties": []
                                      },
                                      "title": "On-call group"
                                    },
                                    "rotation_duration": {
                                      "type": "integer",
                                      "title": "On-call cycle",
                                      "description": "Unit: seconds, minimum granularity 1800"
                                    },
                                    "fair_rotation": {
                                      "type": "boolean",
                                      "title": "Fair rotation switch"
                                    },
                                    "handoff_time": {
                                      "type": "integer",
                                      "title": "Handover time",
                                      "description": "Handover time in seconds from Monday 00:00 for weekly rotation cycle"
                                    },
                                    "layer_start": {
                                      "type": "integer",
                                      "title": "Start time",
                                      "description": "Minimum granularity half hour"
                                    },
                                    "layer_end": {
                                      "type": "integer",
                                      "title": "End time",
                                      "description": "Minimum granularity half hour"
                                    },
                                    "restrict_mode": {
                                      "type": "integer",
                                      "title": "Cycle restriction mode",
                                      "enum": [
                                        0,
                                        1,
                                        2
                                      ],
                                      "x-apifox": {
                                        "enumDescriptions": {
                                          "0": "No restriction",
                                          "1": "Daily restriction",
                                          "2": "Weekly restriction"
                                        }
                                      },
                                      "description": "0 No restriction, 1 Daily granularity, 2 Weekly granularity"
                                    },
                                    "restrict_periods": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "restrict_start": {
                                            "type": "integer",
                                            "title": "Restriction start time",
                                            "description": "Only effective for daily and weekly restriction modes. For daily mode, seconds from 00:00 of the day to restriction start time. For weekly mode, seconds from Monday 00:00 to restriction start time"
                                          },
                                          "restrict_end": {
                                            "type": "integer",
                                            "title": "Restriction end time",
                                            "description": "Only effective for daily and weekly restriction modes. For daily mode, seconds from 00:00 of the day to restriction end time. For weekly mode, seconds from Monday 00:00 to restriction end time"
                                          }
                                        },
                                        "x-apifox-orders": [
                                          "restrict_start",
                                          "restrict_end"
                                        ],
                                        "x-apifox-ignore-properties": []
                                      }
                                    }
                                  },
                                  "x-apifox-orders": [
                                    "layer_name",
                                    "mode",
                                    "groups",
                                    "rotation_duration",
                                    "fair_rotation",
                                    "handoff_time",
                                    "layer_start",
                                    "layer_end",
                                    "restrict_mode",
                                    "restrict_periods"
                                  ],
                                  "required": [
                                    "mode",
                                    "layer_start"
                                  ],
                                  "x-apifox-ignore-properties": []
                                },
                                "title": "Rules"
                              },
                              "layer_schedules": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "layer_name": {
                                      "type": "string",
                                      "title": "Rule name"
                                    },
                                    "mode": {
                                      "type": "integer",
                                      "title": "Mode (Normal/Temporary)"
                                    },
                                    "schedules": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "start": {
                                            "type": "integer",
                                            "title": "Start time"
                                          },
                                          "end": {
                                            "type": "integer",
                                            "title": "End time"
                                          },
                                          "hash": {
                                            "type": "string",
                                            "title": "Hash"
                                          },
                                          "group": {
                                            "type": "object",
                                            "properties": {
                                              "group_name": {
                                                "type": "string",
                                                "title": "Team name"
                                              },
                                              "members": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "role_id": {
                                                      "type": "integer",
                                                      "title": "Role ID"
                                                    },
                                                    "person_ids": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "integer"
                                                      },
                                                      "title": "Responder ID"
                                                    }
                                                  },
                                                  "x-apifox-orders": [
                                                    "role_id",
                                                    "person_ids"
                                                  ],
                                                  "x-apifox-ignore-properties": []
                                                }
                                              }
                                            },
                                            "required": [
                                              "group_name",
                                              "members"
                                            ],
                                            "x-apifox-orders": [
                                              "group_name",
                                              "members"
                                            ],
                                            "title": "On-call team",
                                            "x-apifox-ignore-properties": []
                                          }
                                        },
                                        "x-apifox-orders": [
                                          "start",
                                          "end",
                                          "hash",
                                          "group"
                                        ],
                                        "x-apifox-ignore-properties": []
                                      },
                                      "title": "Schedule"
                                    }
                                  },
                                  "x-apifox-orders": [
                                    "layer_name",
                                    "mode",
                                    "schedules"
                                  ],
                                  "x-apifox-ignore-properties": []
                                },
                                "title": "Rule calculation"
                              },
                              "final_schedule": {
                                "type": "object",
                                "properties": {
                                  "layer_name": {
                                    "type": "string",
                                    "description": "Rule name"
                                  },
                                  "mode": {
                                    "type": "integer"
                                  },
                                  "schedules": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "start": {
                                          "type": "integer",
                                          "description": "Start time"
                                        },
                                        "end": {
                                          "type": "integer",
                                          "description": "End time"
                                        },
                                        "hash": {
                                          "type": "string",
                                          "description": "Hash"
                                        },
                                        "group": {
                                          "type": "object",
                                          "properties": {
                                            "group_name": {
                                              "type": "string",
                                              "description": "Team name"
                                            },
                                            "members": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "role_id": {
                                                    "type": "integer",
                                                    "description": "Role ID"
                                                  },
                                                  "person_ids": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "integer"
                                                    },
                                                    "description": "Responder ID"
                                                  }
                                                },
                                                "x-apifox-orders": [
                                                  "role_id",
                                                  "person_ids"
                                                ],
                                                "x-apifox-ignore-properties": []
                                              }
                                            }
                                          },
                                          "required": [
                                            "group_name",
                                            "members"
                                          ],
                                          "x-apifox-orders": [
                                            "group_name",
                                            "members"
                                          ],
                                          "description": "On-call team",
                                          "x-apifox-ignore-properties": []
                                        }
                                      },
                                      "x-apifox-orders": [
                                        "start",
                                        "end",
                                        "hash",
                                        "group"
                                      ],
                                      "x-apifox-ignore-properties": []
                                    }
                                  }
                                },
                                "required": [
                                  "layer_name",
                                  "mode",
                                  "schedules"
                                ],
                                "x-apifox-orders": [
                                  "layer_name",
                                  "mode",
                                  "schedules"
                                ],
                                "description": "Final schedule",
                                "x-apifox-ignore-properties": []
                              }
                            },
                            "x-apifox-orders": [
                              "schedule_id",
                              "schedule_name",
                              "description",
                              "team_id",
                              "enabled",
                              "01HFDPYVW8ERN92FCZNCDS407M",
                              "01HFDPZ1KVMFXFYRXWYH0B3816",
                              "01HFDPZ9D8XJ0QXK6RDVSV1WHP"
                            ],
                            "x-apifox-refs": {
                              "01HFDPYVW8ERN92FCZNCDS407M": {
                                "$ref": "#/components/schemas/Layers"
                              },
                              "01HFDPZ1KVMFXFYRXWYH0B3816": {
                                "$ref": "#/components/schemas/LayerSchedules"
                              },
                              "01HFDPZ9D8XJ0QXK6RDVSV1WHP": {
                                "$ref": "#/components/schemas/FinalSchedule"
                              }
                            },
                            "required": [
                              "layers",
                              "layer_schedules",
                              "final_schedule"
                            ],
                            "x-apifox-ignore-properties": [
                              "layers",
                              "layer_schedules",
                              "final_schedule"
                            ]
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "enum": [
                            "InvalidParameter",
                            "InvalidContentType",
                            "Unauthorized",
                            "AccessDenied",
                            "MethodNotAllowed",
                            "RequestTooFrequently",
                            "RequestVerifyRequired",
                            "DangerousOperation",
                            "RequestLocked",
                            "RouteNotFound",
                            "BalanceNotEnough",
                            "UndonedOrderExist",
                            "ResourceNotFound",
                            "InternalError",
                            "ReferenceExist"
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "InvalidParameter": "Parameter error (status=400)",
                              "InvalidContentType": "Content-type error (status=400)",
                              "Unauthorized": "Authentication failed (status=401)",
                              "AccessDenied": "Authorization failed (status=403)",
                              "MethodNotAllowed": "（status=405）",
                              "RequestTooFrequently": "Too many requests (status=429)",
                              "RequestVerifyRequired": "Sensitive operation, requires multi-factor authentication (status=428)",
                              "DangerousOperation": "Dangerous operation, requires multi-factor authentication (status=428)",
                              "RequestLocked": "Too many failed sensitive operations, request locked (status=423)",
                              "RouteNotFound": "Request Method+Path not matched (status=404)",
                              "BalanceNotEnough": "Insufficient account balance, please recharge (status=402)",
                              "UndonedOrderExist": "Unfinished order exists, wait for retry or contact customer service (status=409)",
                              "ResourceNotFound": "Account has not purchased resources, please place order in billing center (status=400)",
                              "InternalError": "Internal or unknown error (status=500)",
                              "ReferenceExist": "Associated resources exist, deletion not allowed (status=400)"
                            }
                          }
                        },
                        "message": {
                          "type": "string",
                          "title": "Error description"
                        }
                      },
                      "x-apifox-orders": [
                        "01HFDQ0J0VY8QAX00QGEN0M6Q2"
                      ],
                      "x-apifox-refs": {
                        "01HFDQ0J0VY8QAX00QGEN0M6Q2": {
                          "$ref": "#/components/schemas/DutyError"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "x-apifox-orders": [
                    "data",
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Schedule Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-125492614-run"
      }
    },
    "/oncall/roles": {
      "get": {
        "summary": "Role Information",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Schedule Management"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "account_id": {
                            "type": "integer"
                          },
                          "create_at": {
                            "type": "integer"
                          },
                          "create_by": {
                            "type": "integer"
                          },
                          "update_at": {
                            "type": "integer"
                          },
                          "update_by": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "account_id",
                          "create_at",
                          "create_by",
                          "update_at",
                          "update_by"
                        ],
                        "x-apifox-orders": [
                          "id",
                          "name",
                          "account_id",
                          "create_at",
                          "create_by",
                          "update_at",
                          "update_by"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "x-apifox-orders": [
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success example",
                    "value": {
                      "data": [
                        {
                          "id": 0,
                          "name": "Primary responder",
                          "account_id": 182138731581973,
                          "create_at": 0,
                          "create_by": 0,
                          "update_at": 0,
                          "update_by": 0
                        },
                        {
                          "id": 1,
                          "name": "Backup responder",
                          "account_id": 182138731581973,
                          "create_at": 0,
                          "create_by": 0,
                          "update_at": 0,
                          "update_by": 0
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Schedule Management",
        "x-apifox-status": "developing",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-191055309-run"
      }
    },
    "/person/infos": {
      "post": {
        "summary": "Members",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Information Retrieval"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "person_ids": {
                    "title": "Member ID list",
                    "description": "Member can be account or member",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "x-apifox-orders": [
                  "person_ids"
                ],
                "x-apifox-refs": {},
                "required": [
                  "person_ids"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "x-apifox-refs": {
                        "01GB264DR49NB6VFFQ074R359P": {
                          "$ref": "#/components/schemas/DutyError"
                        }
                      },
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "enum": [
                            "InvalidParameter",
                            "InvalidContentType",
                            "Unauthorized",
                            "AccessDenied",
                            "MethodNotAllowed",
                            "RequestTooFrequently",
                            "RequestVerifyRequired",
                            "DangerousOperation",
                            "RequestLocked",
                            "RouteNotFound",
                            "BalanceNotEnough",
                            "UndonedOrderExist",
                            "ResourceNotFound",
                            "InternalError",
                            "ReferenceExist"
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "InvalidParameter": "Parameter error (status=400)",
                              "InvalidContentType": "Content-type error (status=400)",
                              "Unauthorized": "Authentication failed (status=401)",
                              "AccessDenied": "Authorization failed (status=403)",
                              "MethodNotAllowed": "（status=405）",
                              "RequestTooFrequently": "Too many requests (status=429)",
                              "RequestVerifyRequired": "Sensitive operation, requires multi-factor authentication (status=428)",
                              "DangerousOperation": "Dangerous operation, requires multi-factor authentication (status=428)",
                              "RequestLocked": "Too many failed sensitive operations, request locked (status=423)",
                              "RouteNotFound": "Request Method+Path not matched (status=404)",
                              "BalanceNotEnough": "Insufficient account balance, please recharge (status=402)",
                              "UndonedOrderExist": "Unfinished order exists, wait for retry or contact customer service (status=409)",
                              "ResourceNotFound": "Account has not purchased resources, please place order in billing center (status=400)",
                              "InternalError": "Internal or unknown error (status=500)",
                              "ReferenceExist": "Associated resources exist, deletion not allowed (status=400)"
                            }
                          }
                        },
                        "message": {
                          "type": "string",
                          "title": "Error description"
                        }
                      },
                      "x-apifox-orders": [
                        "01GB264DR49NB6VFFQ074R359P"
                      ],
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": [
                        "code",
                        "message"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "person_id": {
                                "title": "id",
                                "type": "integer"
                              },
                              "person_name": {
                                "type": "string",
                                "title": "name"
                              },
                              "avatar": {
                                "type": "string",
                                "title": "Avatar"
                              },
                              "as": {
                                "type": "string",
                                "title": "Identity",
                                "enum": [
                                  "member",
                                  "account"
                                ],
                                "x-apifox": {
                                  "enumDescriptions": {
                                    "member": "Member",
                                    "account": "Owner"
                                  }
                                }
                              }
                            },
                            "x-apifox-orders": [
                              "person_id",
                              "person_name",
                              "avatar",
                              "as"
                            ],
                            "required": [
                              "person_id",
                              "person_name",
                              "avatar",
                              "as"
                            ],
                            "x-apifox-ignore-properties": []
                          },
                          "title": "List"
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "required": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Information Retrieval",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655713-run"
      }
    },
    "/team/infos": {
      "post": {
        "summary": "Teams",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Information Retrieval"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "team_ids": {
                    "title": "Team ID list",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "x-apifox-orders": [
                  "team_ids"
                ],
                "x-apifox-refs": {},
                "required": [
                  "team_ids"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "x-apifox-refs": {
                        "01GB264DR49NB6VFFQ074R359P": {
                          "$ref": "#/components/schemas/DutyError"
                        }
                      },
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "enum": [
                            "InvalidParameter",
                            "InvalidContentType",
                            "Unauthorized",
                            "AccessDenied",
                            "MethodNotAllowed",
                            "RequestTooFrequently",
                            "RequestVerifyRequired",
                            "DangerousOperation",
                            "RequestLocked",
                            "RouteNotFound",
                            "BalanceNotEnough",
                            "UndonedOrderExist",
                            "ResourceNotFound",
                            "InternalError",
                            "ReferenceExist"
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "InvalidParameter": "Parameter error (status=400)",
                              "InvalidContentType": "Content-type error (status=400)",
                              "Unauthorized": "Authentication failed (status=401)",
                              "AccessDenied": "Authorization failed (status=403)",
                              "MethodNotAllowed": "（status=405）",
                              "RequestTooFrequently": "Too many requests (status=429)",
                              "RequestVerifyRequired": "Sensitive operation, requires multi-factor authentication (status=428)",
                              "DangerousOperation": "Dangerous operation, requires multi-factor authentication (status=428)",
                              "RequestLocked": "Too many failed sensitive operations, request locked (status=423)",
                              "RouteNotFound": "Request Method+Path not matched (status=404)",
                              "BalanceNotEnough": "Insufficient account balance, please recharge (status=402)",
                              "UndonedOrderExist": "Unfinished order exists, wait for retry or contact customer service (status=409)",
                              "ResourceNotFound": "Account has not purchased resources, please place order in billing center (status=400)",
                              "InternalError": "Internal or unknown error (status=500)",
                              "ReferenceExist": "Associated resources exist, deletion not allowed (status=400)"
                            }
                          }
                        },
                        "message": {
                          "type": "string",
                          "title": "Error description"
                        }
                      },
                      "x-apifox-orders": [
                        "01GB264DR49NB6VFFQ074R359P"
                      ],
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": [
                        "code",
                        "message"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "team_id": {
                                "title": "id",
                                "type": "integer"
                              },
                              "team_name": {
                                "type": "string",
                                "title": "name"
                              },
                              "person_ids": {
                                "type": "array",
                                "items": {
                                  "type": "integer"
                                },
                                "title": "Member list"
                              }
                            },
                            "x-apifox-orders": [
                              "team_id",
                              "team_name",
                              "person_ids"
                            ],
                            "required": [
                              "team_id",
                              "team_name",
                              "person_ids"
                            ],
                            "x-apifox-ignore-properties": []
                          },
                          "title": "List"
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "required": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Information Retrieval",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655714-run"
      }
    },
    "/preference/info": {
      "post": {
        "summary": "View Preference Settings",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Preference Settings"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Preference",
                      "title": "Response data"
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Preference Settings",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655715-run"
      }
    },
    "/preference/update": {
      "post": {
        "summary": "Modify Preference Settings",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Preference Settings"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "trigger_notify": {
                    "$ref": "#/components/schemas/SeverityToBy"
                  },
                  "schedule_shift_notify": {
                    "type": "object",
                    "properties": {
                      "personal_channels": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "email",
                            "voice",
                            "sms",
                            "feishu_app:{data_source_id}",
                            "dingtalk_app:{data_source_id}",
                            "wecom_app:{data_source_id}"
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "email": "Email",
                              "voice": "Voice",
                              "sms": "SMS",
                              "feishu_app:{data_source_id}": "Feishu/Lark app",
                              "dingtalk_app:{data_source_id}": "Dingtalk app",
                              "wecom_app:{data_source_id}": "WeCom app"
                            }
                          }
                        },
                        "title": "Notification channels"
                      }
                    },
                    "x-apifox-orders": [
                      "personal_channels"
                    ],
                    "required": [
                      "personal_channels"
                    ],
                    "title": "Shift change notification method",
                    "x-apifox-ignore-properties": []
                  }
                },
                "x-apifox-orders": [
                  "trigger_notify",
                  "schedule_shift_notify"
                ],
                "required": [
                  "trigger_notify"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "title": "Error description",
                  "description": "Non-empty indicates request error",
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Preference Settings",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655716-run"
      }
    },
    "/channel/escalate/rule/enable": {
      "post": {
        "summary": "Enable Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Escalation Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel ID",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "rule ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id"
                ],
                "required": [
                  "channel_id",
                  "rule_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Escalation Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655724-run"
      }
    },
    "/channel/escalate/rule/disable": {
      "post": {
        "summary": "Disable Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Escalation Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel ID",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "rule ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id"
                ],
                "required": [
                  "channel_id",
                  "rule_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Escalation Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655725-run"
      }
    },
    "/channel/escalate/rule/delete": {
      "post": {
        "summary": "Delete Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Escalation Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel ID",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "rule ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id"
                ],
                "required": [
                  "channel_id",
                  "rule_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Escalation Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655726-run"
      }
    },
    "/channel/escalate/rule/list": {
      "post": {
        "summary": "Rule List",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Channel/Escalation Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel ID",
                    "type": "integer"
                  }
                },
                "x-apifox-orders": [
                  "channel_id"
                ],
                "required": [
                  "channel_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-orders": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/EscalateRule"
                          }
                        }
                      },
                      "required": [
                        "items"
                      ],
                      "x-apifox-orders": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Escalation Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655727-run"
      }
    },
    "/channel/escalate/rule/info": {
      "post": {
        "summary": "Rule Details",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Escalation Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "Channel ID",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "Rule ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id"
                ],
                "required": [
                  "channel_id",
                  "rule_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-orders": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "data": {
                      "$ref": "#/components/schemas/EscalateRule"
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Escalation Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-143747348-run"
      }
    },
    "/channel/escalate/rule/create": {
      "post": {
        "summary": "Create Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Escalation Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "x-apifox-overrides": {},
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "Channel",
                    "type": "integer"
                  },
                  "rule_name": {
                    "type": "string",
                    "title": "Rule name"
                  },
                  "template_id": {
                    "type": "string",
                    "title": "Template ID",
                    "description": "Default is system preset template"
                  },
                  "description": {
                    "type": "string",
                    "title": "Rule description"
                  },
                  "layers": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EscalateLayer",
                      "x-apifox-overrides": {}
                    },
                    "title": "Assignment level"
                  },
                  "aggr_window": {
                    "title": "Aggregation window in seconds, range [0,3600]",
                    "type": "integer"
                  },
                  "time_filters": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TimeFilter",
                      "x-apifox-overrides": {}
                    },
                    "title": "Time conditions"
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": {
                        "description": "Inner conditions",
                        "$ref": "#/components/schemas/Filter"
                      }
                    },
                    "title": "Matching conditions"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "channel_id",
                  "rule_name",
                  "template_id",
                  "description",
                  "layers",
                  "aggr_window",
                  "time_filters",
                  "filters"
                ],
                "required": [
                  "template_id",
                  "channel_id",
                  "rule_name",
                  "layers",
                  "aggr_window"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "rule_id": {
                          "type": "string",
                          "title": "ID"
                        },
                        "rule_name": {
                          "type": "string",
                          "title": "Name"
                        }
                      },
                      "x-apifox-orders": [
                        "rule_id",
                        "rule_name"
                      ],
                      "required": [
                        "rule_id",
                        "rule_name"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Escalation Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655728-run"
      }
    },
    "/channel/escalate/rule/update": {
      "post": {
        "summary": "Update Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Escalation Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "x-apifox-overrides": {},
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "Channel",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "Rule ID",
                    "description": "Required when updating"
                  },
                  "rule_name": {
                    "type": "string",
                    "title": "Rule name"
                  },
                  "template_id": {
                    "type": "string",
                    "title": "Template ID",
                    "description": "Default is system preset template"
                  },
                  "description": {
                    "type": "string",
                    "title": "Rule description"
                  },
                  "layers": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EscalateLayer",
                      "x-apifox-overrides": {}
                    },
                    "title": "Notification level"
                  },
                  "aggr_window": {
                    "title": "Aggregation window in seconds, range [0,3600]",
                    "type": "integer"
                  },
                  "time_filters": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TimeFilter",
                      "x-apifox-overrides": {}
                    },
                    "title": "Time filter conditions"
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": {
                        "description": "Inner conditions",
                        "$ref": "#/components/schemas/Filter"
                      }
                    },
                    "title": "Matching conditions"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id",
                  "rule_name",
                  "template_id",
                  "description",
                  "layers",
                  "aggr_window",
                  "time_filters",
                  "filters"
                ],
                "required": [
                  "channel_id",
                  "template_id",
                  "description",
                  "time_filters",
                  "filters",
                  "rule_id",
                  "layers",
                  "rule_name",
                  "aggr_window"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Escalation Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655729-run"
      }
    },
    "/channel/subscribe/rule/enable": {
      "post": {
        "summary": "Enable Rule",
        "deprecated": true,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Subscription Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel ID",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "rule ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id"
                ],
                "required": [
                  "channel_id",
                  "rule_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Subscription Rules",
        "x-apifox-status": "deprecated",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655730-run"
      }
    },
    "/channel/subscribe/rule/disable": {
      "post": {
        "summary": "Disable Rule",
        "deprecated": true,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Subscription Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel ID",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "rule ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id"
                ],
                "required": [
                  "channel_id",
                  "rule_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Subscription Rules",
        "x-apifox-status": "deprecated",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655731-run"
      }
    },
    "/channel/subscribe/rule/delete": {
      "post": {
        "summary": "Delete Rule",
        "deprecated": true,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Subscription Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel ID",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "rule ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id"
                ],
                "required": [
                  "channel_id",
                  "rule_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Subscription Rules",
        "x-apifox-status": "deprecated",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655732-run"
      }
    },
    "/channel/subscribe/rule/list": {
      "post": {
        "summary": "Rule List",
        "deprecated": true,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Channel/Subscription Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "type": "integer",
                    "title": "channel ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id"
                ],
                "required": [
                  "channel_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-orders": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SubscribeRule"
                          }
                        }
                      },
                      "required": [
                        "items"
                      ],
                      "x-apifox-orders": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Subscription Rules",
        "x-apifox-status": "deprecated",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655733-run"
      }
    },
    "/channel/subscribe/rule/create": {
      "post": {
        "summary": "Create Rule",
        "deprecated": true,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Subscription Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "x-apifox-overrides": {},
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "Channel",
                    "type": "integer"
                  },
                  "rule_name": {
                    "type": "string",
                    "title": "Rule name"
                  },
                  "description": {
                    "type": "string",
                    "title": "Rule description"
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": {
                        "description": "Inner conditions",
                        "$ref": "#/components/schemas/Filter"
                      }
                    },
                    "title": "Matching conditions"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "channel_id",
                  "rule_name",
                  "description",
                  "filters"
                ],
                "required": [
                  "channel_id",
                  "description",
                  "filters",
                  "rule_name"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "rule_id": {
                          "type": "string",
                          "title": "ID"
                        },
                        "rule_name": {
                          "type": "string",
                          "title": "Name"
                        }
                      },
                      "x-apifox-orders": [
                        "rule_id",
                        "rule_name"
                      ],
                      "required": [
                        "rule_id",
                        "rule_name"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Subscription Rules",
        "x-apifox-status": "deprecated",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655734-run"
      }
    },
    "/channel/subscribe/rule/update": {
      "post": {
        "summary": "Update Rule",
        "deprecated": true,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Subscription Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "x-apifox-overrides": {},
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "Channel",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "Rule ID",
                    "description": "Required when updating"
                  },
                  "rule_name": {
                    "type": "string",
                    "title": "Rule name"
                  },
                  "description": {
                    "type": "string",
                    "title": "Rule description"
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": {
                        "description": "Inner conditions",
                        "$ref": "#/components/schemas/Filter"
                      }
                    },
                    "title": "Matching conditions"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id",
                  "rule_name",
                  "description",
                  "filters"
                ],
                "required": [
                  "channel_id",
                  "description",
                  "filters",
                  "rule_id",
                  "rule_name"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "rule_id": {
                          "type": "string",
                          "title": "ID"
                        },
                        "rule_name": {
                          "type": "string",
                          "title": "Name"
                        }
                      },
                      "x-apifox-orders": [
                        "rule_id",
                        "rule_name"
                      ],
                      "required": [
                        "rule_id",
                        "rule_name"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Subscription Rules",
        "x-apifox-status": "deprecated",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655735-run"
      }
    },
    "/channel/unsubscribe/rule/enable": {
      "post": {
        "summary": "Enable Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Drop Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel ID",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "rule ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id"
                ],
                "required": [
                  "channel_id",
                  "rule_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Drop Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655736-run"
      }
    },
    "/channel/unsubscribe/rule/disable": {
      "post": {
        "summary": "Disable Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Drop Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel ID",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "rule ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id"
                ],
                "required": [
                  "channel_id",
                  "rule_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Drop Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655737-run"
      }
    },
    "/channel/unsubscribe/rule/delete": {
      "post": {
        "summary": "Delete Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Drop Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel ID",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "rule ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id"
                ],
                "required": [
                  "channel_id",
                  "rule_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Drop Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655738-run"
      }
    },
    "/channel/unsubscribe/rule/list": {
      "post": {
        "summary": "Rule List",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Channel/Drop Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "type": "integer",
                    "title": "channel ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id"
                ],
                "required": [
                  "channel_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-orders": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/UnsubscribeRule"
                          }
                        }
                      },
                      "required": [
                        "items"
                      ],
                      "x-apifox-orders": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Drop Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655739-run"
      }
    },
    "/channel/unsubscribe/rule/create": {
      "post": {
        "summary": "Create Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Drop Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "x-apifox-overrides": {},
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "Channel",
                    "type": "integer"
                  },
                  "rule_name": {
                    "type": "string",
                    "title": "Rule name"
                  },
                  "description": {
                    "type": "string",
                    "title": "Rule description"
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": {
                        "description": "Inner conditions",
                        "$ref": "#/components/schemas/Filter"
                      }
                    },
                    "title": "Matching conditions"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "channel_id",
                  "rule_name",
                  "description",
                  "filters"
                ],
                "required": [
                  "channel_id",
                  "description",
                  "filters",
                  "rule_name"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "rule_id": {
                          "type": "string",
                          "title": "ID"
                        },
                        "rule_name": {
                          "type": "string",
                          "title": "Name"
                        }
                      },
                      "x-apifox-orders": [
                        "rule_id",
                        "rule_name"
                      ],
                      "required": [
                        "rule_id",
                        "rule_name"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Drop Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655740-run"
      }
    },
    "/channel/unsubscribe/rule/update": {
      "post": {
        "summary": "Update Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Drop Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "x-apifox-overrides": {},
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "Channel",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "Rule ID",
                    "description": "Required when updating"
                  },
                  "rule_name": {
                    "type": "string",
                    "title": "Rule name"
                  },
                  "description": {
                    "type": "string",
                    "title": "Rule description"
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": {
                        "description": "Inner conditions",
                        "$ref": "#/components/schemas/Filter"
                      }
                    },
                    "title": "Matching conditions"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id",
                  "rule_name",
                  "description",
                  "filters"
                ],
                "required": [
                  "channel_id",
                  "description",
                  "filters",
                  "rule_id",
                  "rule_name"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "rule_id": {
                          "type": "string",
                          "title": "ID"
                        },
                        "rule_name": {
                          "type": "string",
                          "title": "Name"
                        }
                      },
                      "x-apifox-orders": [
                        "rule_id",
                        "rule_name"
                      ],
                      "required": [
                        "rule_id",
                        "rule_name"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Drop Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655741-run"
      }
    },
    "/channel/silence/rule/enable": {
      "post": {
        "summary": "Enable Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Silence Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel ID",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "rule ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id"
                ],
                "required": [
                  "channel_id",
                  "rule_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Silence Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655742-run"
      }
    },
    "/channel/silence/rule/disable": {
      "post": {
        "summary": "Disable Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Silence Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel ID",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "rule ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id"
                ],
                "required": [
                  "channel_id",
                  "rule_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Silence Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655743-run"
      }
    },
    "/channel/silence/rule/delete": {
      "post": {
        "summary": "Delete Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Silence Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel ID",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "rule ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id"
                ],
                "required": [
                  "channel_id",
                  "rule_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Silence Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655744-run"
      }
    },
    "/channel/silence/rule/list": {
      "post": {
        "summary": "Rule List",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Channel/Silence Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "type": "integer",
                    "title": "channel ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id"
                ],
                "required": [
                  "channel_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-orders": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SilenceRule"
                          }
                        }
                      },
                      "required": [
                        "items"
                      ],
                      "x-apifox-orders": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Silence Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655745-run"
      }
    },
    "/channel/silence/rule/create": {
      "post": {
        "summary": "Create Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Silence Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "x-apifox-overrides": {},
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "Channel",
                    "type": "integer"
                  },
                  "rule_name": {
                    "type": "string",
                    "title": "Rule name"
                  },
                  "description": {
                    "type": "string",
                    "title": "Rule description"
                  },
                  "filters": {
                    "title": "Matching conditions",
                    "$ref": "#/components/schemas/OrFilters"
                  },
                  "time_filter": {
                    "type": "object",
                    "properties": {
                      "start_time": {
                        "type": "integer",
                        "title": "",
                        "description": "Start timestamp"
                      },
                      "end_time": {
                        "type": "integer",
                        "title": "",
                        "description": "End timestamp"
                      }
                    },
                    "x-apifox-orders": [
                      "start_time",
                      "end_time"
                    ],
                    "required": [
                      "start_time",
                      "end_time"
                    ],
                    "title": "One-time",
                    "description": "Only one of time_filters or time_filter should be provided",
                    "x-apifox-ignore-properties": []
                  },
                  "time_filters": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TimeFilter",
                      "x-apifox-overrides": {}
                    },
                    "description": "Only one of time_filters or time_filter should be provided",
                    "title": "Recurring"
                  },
                  "is_directly_discard": {
                    "type": "boolean",
                    "title": "Whether to directly discard matching alerts"
                  },
                  "from_incident_id": {
                    "type": "string",
                    "title": "Quick silence associated incident ID",
                    "description": "For quick silence, only one-time silence is allowed and the rule will be automatically deleted after expiration"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "channel_id",
                  "rule_name",
                  "description",
                  "filters",
                  "time_filter",
                  "time_filters",
                  "is_directly_discard",
                  "from_incident_id"
                ],
                "required": [
                  "channel_id",
                  "description",
                  "filters",
                  "rule_name"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "rule_id": {
                          "type": "string",
                          "title": "ID"
                        },
                        "rule_name": {
                          "type": "string",
                          "title": "Name"
                        }
                      },
                      "x-apifox-orders": [
                        "rule_id",
                        "rule_name"
                      ],
                      "required": [
                        "rule_id",
                        "rule_name"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Silence Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655746-run"
      }
    },
    "/channel/silence/rule/update": {
      "post": {
        "summary": "Update Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Silence Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "x-apifox-overrides": {},
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "Channel",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "rule ID"
                  },
                  "rule_name": {
                    "type": "string",
                    "title": "Rule name"
                  },
                  "description": {
                    "type": "string",
                    "title": "Rule description"
                  },
                  "filters": {
                    "title": "Matching conditions",
                    "$ref": "#/components/schemas/OrFilters"
                  },
                  "time_filter": {
                    "type": "object",
                    "properties": {
                      "start_time": {
                        "type": "integer",
                        "title": "",
                        "description": "Start timestamp"
                      },
                      "end_time": {
                        "type": "integer",
                        "title": "",
                        "description": "End timestamp"
                      }
                    },
                    "x-apifox-orders": [
                      "start_time",
                      "end_time"
                    ],
                    "required": [
                      "start_time",
                      "end_time"
                    ],
                    "title": "One-time",
                    "description": "Only one of time_filters or time_filter should be provided",
                    "x-apifox-ignore-properties": []
                  },
                  "time_filters": {
                    "type": "array",
                    "items": {
                      "x-apifox-overrides": {},
                      "type": "object",
                      "x-apifox-refs": {
                        "01J9R861KHRHRP8BYREKPXPQ81": {
                          "$ref": "#/components/schemas/TimeFilter",
                          "x-apifox-overrides": {}
                        }
                      },
                      "properties": {
                        "start": {
                          "title": "Start time, less than end",
                          "type": "string",
                          "description": "Precision to minute, like 10:00"
                        },
                        "end": {
                          "title": "End time",
                          "type": "string",
                          "description": "Precision to minute, like 23:59"
                        },
                        "repeat": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "description": "0=Sunday, 1,2,3,4,5,6",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              5,
                              6
                            ],
                            "x-apifox": {
                              "enumDescriptions": {
                                "0": "Sunday",
                                "1": "Monday",
                                "2": "Tuesday",
                                "3": "Wednesday",
                                "4": "Thursday",
                                "5": "Friday",
                                "6": "Saturday"
                              }
                            }
                          },
                          "title": "Week mode, weekday list",
                          "description": "Mutually exclusive with calendar mode parameters, only one can exist"
                        },
                        "cal_id": {
                          "type": "string",
                          "title": "Calendar mode, calendar ID",
                          "description": "Mutually exclusive with week mode parameters, only one can exist"
                        },
                        "is_off": {
                          "type": "boolean",
                          "title": "Calendar mode, whether it's a rest day",
                          "description": "true for rest day"
                        }
                      },
                      "required": [
                        "01J9R861KH46GG92QNFGCWF7DC",
                        "start",
                        "end"
                      ],
                      "x-apifox-orders": [
                        "01J9R861KHRHRP8BYREKPXPQ81",
                        "01J9R861KH46GG92QNFGCWF7DC"
                      ],
                      "x-apifox-ignore-properties": [
                        "start",
                        "end",
                        "repeat",
                        "cal_id",
                        "is_off"
                      ]
                    },
                    "description": "Only one of time_filters or time_filter should be provided",
                    "title": "Recurring"
                  },
                  "is_directly_discard": {
                    "type": "boolean",
                    "title": "Whether to directly discard matching alerts"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id",
                  "rule_name",
                  "description",
                  "filters",
                  "time_filter",
                  "time_filters",
                  "is_directly_discard"
                ],
                "required": [
                  "channel_id",
                  "filters",
                  "rule_id",
                  "rule_name",
                  "description"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "rule_id": {
                          "type": "string",
                          "title": "ID"
                        },
                        "rule_name": {
                          "type": "string",
                          "title": "Name"
                        }
                      },
                      "x-apifox-orders": [
                        "rule_id",
                        "rule_name"
                      ],
                      "required": [
                        "rule_id",
                        "rule_name"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Silence Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655747-run"
      }
    },
    "/channel/inhibit/rule/enable": {
      "post": {
        "summary": "Enable Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Inhibit Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel ID",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "rule ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id"
                ],
                "required": [
                  "channel_id",
                  "rule_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Inhibit Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655748-run"
      }
    },
    "/channel/inhibit/rule/disable": {
      "post": {
        "summary": "Disable Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Inhibit Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel ID",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "rule ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id"
                ],
                "required": [
                  "channel_id",
                  "rule_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Inhibit Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655749-run"
      }
    },
    "/channel/inhibit/rule/delete": {
      "post": {
        "summary": "Delete Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Inhibit Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel ID",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "rule ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id"
                ],
                "required": [
                  "channel_id",
                  "rule_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Inhibit Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655750-run"
      }
    },
    "/channel/inhibit/rule/list": {
      "post": {
        "summary": "Rule List",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Channel/Inhibit Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "type": "integer",
                    "title": "channel ID"
                  }
                },
                "x-apifox-orders": [
                  "channel_id"
                ],
                "required": [
                  "channel_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-orders": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/InhibitRule"
                          }
                        }
                      },
                      "required": [
                        "items"
                      ],
                      "x-apifox-orders": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Inhibit Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655751-run"
      }
    },
    "/channel/inhibit/rule/create": {
      "post": {
        "summary": "Create Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Inhibit Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "x-apifox-overrides": {},
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "Channel",
                    "type": "integer"
                  },
                  "rule_name": {
                    "type": "string",
                    "title": "Rule name"
                  },
                  "description": {
                    "type": "string",
                    "title": "Rule description"
                  },
                  "priority": {
                    "type": "integer",
                    "title": "Priority"
                  },
                  "source_filters": {
                    "title": "Matching conditions",
                    "$ref": "#/components/schemas/OrFilters"
                  },
                  "target_filters": {
                    "title": "Matching conditions",
                    "$ref": "#/components/schemas/OrFilters"
                  },
                  "equals": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Equal items",
                    "description": "Items starting with labels. are label items, others are attribute items"
                  },
                  "is_directly_discard": {
                    "type": "boolean",
                    "title": "Whether to directly discard matching alerts"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "channel_id",
                  "rule_name",
                  "description",
                  "priority",
                  "source_filters",
                  "target_filters",
                  "equals",
                  "is_directly_discard"
                ],
                "required": [
                  "channel_id",
                  "description",
                  "source_filters",
                  "target_filters",
                  "equals",
                  "rule_name"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "rule_id": {
                          "type": "string",
                          "title": "ID"
                        },
                        "rule_name": {
                          "type": "string",
                          "title": "Name"
                        }
                      },
                      "x-apifox-orders": [
                        "rule_id",
                        "rule_name"
                      ],
                      "required": [
                        "rule_id",
                        "rule_name"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Inhibit Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655752-run"
      }
    },
    "/channel/inhibit/rule/update": {
      "post": {
        "summary": "Update Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel/Inhibit Rules"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "x-apifox-overrides": {},
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "Channel",
                    "type": "integer"
                  },
                  "rule_id": {
                    "type": "string",
                    "title": "Rule ID",
                    "description": "Required when updating"
                  },
                  "rule_name": {
                    "type": "string",
                    "title": "Rule name",
                    "description": "Default is Rule 1, Rule 2"
                  },
                  "description": {
                    "type": "string",
                    "title": "Rule description"
                  },
                  "source_filters": {
                    "title": "Matching conditions",
                    "$ref": "#/components/schemas/OrFilters"
                  },
                  "target_filters": {
                    "title": "Matching conditions",
                    "$ref": "#/components/schemas/OrFilters"
                  },
                  "equals": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "labels.{x}",
                        "status",
                        "severity",
                        "title"
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "labels.{x}": "x can be any label",
                          "status": "Status",
                          "severity": "Severity",
                          "title": "Title"
                        }
                      }
                    },
                    "title": "Equal items",
                    "description": "Items starting with labels. are label items, others are attribute items"
                  },
                  "is_directly_discard": {
                    "type": "boolean",
                    "title": "Whether to directly discard matching alerts"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "channel_id",
                  "rule_id",
                  "rule_name",
                  "description",
                  "source_filters",
                  "target_filters",
                  "equals",
                  "is_directly_discard"
                ],
                "required": [
                  "channel_id",
                  "description",
                  "source_filters",
                  "target_filters",
                  "equals",
                  "rule_id",
                  "rule_name"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "rule_id": {
                          "type": "string",
                          "title": "ID"
                        },
                        "rule_name": {
                          "type": "string",
                          "title": "Name"
                        }
                      },
                      "x-apifox-orders": [
                        "rule_id",
                        "rule_name"
                      ],
                      "required": [
                        "rule_id",
                        "rule_name"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel/Inhibit Rules",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655753-run"
      }
    },
    "/channel/list": {
      "post": {
        "summary": "Channel List",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Channel"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "p": {
                    "type": "integer",
                    "title": "Page number, starts from 1"
                  },
                  "limit": {
                    "type": "integer",
                    "title": "Items per page"
                  },
                  "asc": {
                    "title": "Ascending order",
                    "type": "boolean"
                  },
                  "orderby": {
                    "type": "string",
                    "enum": [
                      "created_at",
                      "ranking"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "created_at": "Created time",
                        "ranking": "Personal sort preference"
                      }
                    },
                    "title": "Sort by"
                  },
                  "query": {
                    "type": "string",
                    "title": "Search keyword",
                    "description": "Search scope: channel name and description"
                  },
                  "team_id": {
                    "type": "integer",
                    "title": "Team ID",
                    "description": "Filter channels managed by this team"
                  },
                  "is_my_managed": {
                    "type": "boolean",
                    "title": "My managed",
                    "description": "Filter channels where I am the creator or a member of the management team"
                  },
                  "is_my_starred": {
                    "type": "boolean",
                    "title": "My favorites",
                    "description": "Filter channels in my personal favorites"
                  },
                  "is_my_team": {
                    "type": "boolean",
                    "title": "My team's channels",
                    "description": "Filter channels belonging to my teams"
                  },
                  "channel_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Channel ID list",
                    "description": "Search by specified IDs"
                  },
                  "is_brief": {
                    "type": "boolean",
                    "title": "Only return name and ID information",
                    "description": "When this parameter is specified, the system will ignore p and limit parameters and return information for all channels"
                  }
                },
                "x-apifox-orders": [
                  "01GBYHTREV3VHYTMKSW2RSN804",
                  "orderby",
                  "query",
                  "team_id",
                  "is_my_managed",
                  "is_my_starred",
                  "is_my_team",
                  "channel_ids",
                  "is_brief"
                ],
                "x-apifox-refs": {
                  "01GBYHTREV3VHYTMKSW2RSN804": {
                    "$ref": "#/components/schemas/PageQuery"
                  }
                },
                "required": [
                  "is_brief"
                ],
                "x-apifox-ignore-properties": [
                  "p",
                  "limit",
                  "asc"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-orders": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Channel",
                            "x-apifox-overrides": {}
                          },
                          "title": "Channel entry"
                        },
                        "has_next_page": {
                          "type": "boolean",
                          "title": "Has next page"
                        },
                        "total": {
                          "type": "integer",
                          "title": "Total entries"
                        }
                      },
                      "required": [
                        "items",
                        "has_next_page",
                        "total"
                      ],
                      "x-apifox-orders": [
                        "items",
                        "has_next_page",
                        "total"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655717-run"
      }
    },
    "/channel/info": {
      "post": {
        "summary": "Channel Details",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Channel"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel id",
                    "type": "integer"
                  }
                },
                "x-apifox-orders": [
                  "channel_id"
                ],
                "required": [
                  "channel_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Channel",
                      "x-apifox-overrides": {}
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655718-run"
      }
    },
    "/channel/create": {
      "post": {
        "summary": "Create Channel",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_name": {
                    "type": "string",
                    "title": "Name"
                  },
                  "description": {
                    "type": "string",
                    "title": "Description"
                  },
                  "team_id": {
                    "title": "Team ID",
                    "type": "integer",
                    "description": "If not provided, only creator and owner account can manage channel configuration"
                  },
                  "escalate_rule": {
                    "type": "object",
                    "properties": {
                      "aggr_window": {
                        "type": "integer",
                        "title": "Aggregation window in seconds, range [0,720]"
                      },
                      "template_id": {
                        "type": "string",
                        "title": "Template ID"
                      },
                      "target": {
                        "title": "Assignment target",
                        "$ref": "#/components/schemas/EscalateTarget"
                      }
                    },
                    "x-apifox-orders": [
                      "aggr_window",
                      "template_id",
                      "target"
                    ],
                    "title": "Default escalation rule",
                    "required": [
                      "template_id",
                      "target"
                    ],
                    "x-apifox-ignore-properties": []
                  },
                  "plugin_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Alert event integration type ID list"
                  },
                  "auto_resolve_timeout": {
                    "type": "integer",
                    "title": "Auto-recovery timeout in seconds",
                    "description": "No auto-recovery if not provided",
                    "maximum": 86400,
                    "minimum": 0
                  },
                  "is_private": {
                    "type": "boolean",
                    "title": "Private access",
                    "description": "Public by default if not provided"
                  },
                  "group": {
                    "$ref": "#/components/schemas/Group",
                    "title": "Alert grouping configuration"
                  },
                  "flapping": {
                    "$ref": "#/components/schemas/Flapping",
                    "title": "Incident convergence configuration"
                  }
                },
                "x-apifox-orders": [
                  "channel_name",
                  "description",
                  "team_id",
                  "escalate_rule",
                  "plugin_ids",
                  "auto_resolve_timeout",
                  "is_private",
                  "group",
                  "flapping"
                ],
                "required": [
                  "channel_name"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "channel_id": {
                          "type": "string",
                          "title": "ID"
                        },
                        "channel_name": {
                          "type": "string",
                          "title": "Name"
                        }
                      },
                      "x-apifox-orders": [
                        "channel_id",
                        "channel_name"
                      ],
                      "required": [
                        "channel_id",
                        "channel_name"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655719-run"
      }
    },
    "/channel/update": {
      "post": {
        "summary": "Update Channel",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Channel"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "Channel ID",
                    "type": "integer"
                  },
                  "channel_name": {
                    "type": "string",
                    "title": "Channel name",
                    "description": "Not updated if not provided"
                  },
                  "description": {
                    "type": "string",
                    "title": "Channel description",
                    "description": "Not updated if not provided"
                  },
                  "team_id": {
                    "title": "Team ID",
                    "type": "integer",
                    "description": "Not updated if not provided"
                  },
                  "auto_resolve_timeout": {
                    "type": "integer",
                    "title": "Auto-recovery duration in seconds",
                    "description": "Not updated if not provided",
                    "maximum": 86400,
                    "minimum": 0
                  },
                  "is_private": {
                    "type": "boolean",
                    "title": "Private access",
                    "description": "Not updated if not provided"
                  },
                  "group": {
                    "$ref": "#/components/schemas/Group",
                    "title": "Alert grouping configuration"
                  },
                  "flapping": {
                    "$ref": "#/components/schemas/Flapping",
                    "title": "Incident convergence configuration"
                  }
                },
                "x-apifox-orders": [
                  "channel_id",
                  "channel_name",
                  "description",
                  "team_id",
                  "auto_resolve_timeout",
                  "is_private",
                  "group",
                  "flapping"
                ],
                "required": [
                  "channel_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655720-run"
      }
    },
    "/channel/enable": {
      "post": {
        "summary": "Enable Channel",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Channel"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel ID",
                    "type": "integer"
                  }
                },
                "x-apifox-orders": [
                  "channel_id"
                ],
                "required": [
                  "channel_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655721-run"
      }
    },
    "/channel/disable": {
      "post": {
        "summary": "Disable Channel",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Channel"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel id",
                    "type": "integer"
                  }
                },
                "x-apifox-orders": [
                  "channel_id"
                ],
                "required": [
                  "channel_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655722-run"
      }
    },
    "/channel/delete": {
      "post": {
        "summary": "Delete Channel",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Channel"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "title": "channel id",
                    "type": "integer"
                  }
                },
                "x-apifox-orders": [
                  "channel_id"
                ],
                "required": [
                  "channel_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "refs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Reference"
                          },
                          "title": "Associated Resource List"
                        }
                      },
                      "x-apifox-orders": [
                        "refs"
                      ],
                      "required": [
                        "refs"
                      ],
                      "description": "Only exists when code=ReferenceExist",
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655723-run"
      }
    },
    "/channel/reorder": {
      "post": {
        "summary": "Sort Channels",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "drag_channel_id": {
                    "type": "integer",
                    "description": "Dragged channel ID"
                  },
                  "target_channel_id": {
                    "type": "integer",
                    "description": "Displaced channel ID"
                  }
                },
                "x-apifox-orders": [
                  "drag_channel_id",
                  "target_channel_id"
                ],
                "required": [
                  "drag_channel_id",
                  "target_channel_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-164136289-run"
      }
    },
    "/channel/star": {
      "post": {
        "summary": "Favorite Channel",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "type": "integer",
                    "description": "Channel ID to favorite"
                  }
                },
                "x-apifox-orders": [
                  "channel_id"
                ],
                "required": [
                  "channel_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-164137342-run"
      }
    },
    "/channel/unstar": {
      "post": {
        "summary": "Unfavorite Channel",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "type": "integer",
                    "description": "Channel ID to unfavorite"
                  }
                },
                "x-apifox-orders": [
                  "channel_id"
                ],
                "required": [
                  "channel_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-164137386-run"
      }
    },
    "/channel/escalate/webhook/robot/list": {
      "post": {
        "summary": "Bot List",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Channel"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "list": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "settings": {
                                "type": "object",
                                "properties": {
                                  "alias": {
                                    "type": "string"
                                  },
                                  "token": {
                                    "type": "string"
                                  },
                                  "verify_token": {
                                    "type": "string"
                                  },
                                  "disable_at": {
                                    "type": "boolean"
                                  },
                                  "reply_event_types": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "alias",
                                  "token"
                                ],
                                "x-apifox-orders": [
                                  "alias",
                                  "token",
                                  "verify_token",
                                  "disable_at",
                                  "reply_event_types"
                                ],
                                "x-apifox-ignore-properties": []
                              }
                            },
                            "required": [
                              "type",
                              "settings"
                            ],
                            "x-apifox-orders": [
                              "type",
                              "settings"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        }
                      },
                      "required": [
                        "list"
                      ],
                      "x-apifox-orders": [
                        "list"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "required": [
                    "request_id",
                    "data"
                  ],
                  "x-apifox-orders": [
                    "request_id",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success example",
                    "value": {
                      "request_id": "95c5e15c19bb09e2466d719381f03f1b",
                      "data": {
                        "list": [
                          {
                            "type": "feishu",
                            "settings": {
                              "alias": "test",
                              "token": "https://open.feishu.cn/open-apis/bot/hook/5fbc33aa-ffce-462d-8ce0-c5a49899de23"
                            }
                          },
                          {
                            "type": "feishu",
                            "settings": {
                              "token": "https://open.feishu.cn/open-apis/bot/v2/hook/5fbc33aa-ffce-462d-8ce0-c5a49899de23"
                            }
                          },
                          {
                            "type": "zoom",
                            "settings": {
                              "token": "https://integrations.zoom.us/chat/webhooks/incomingwebhook/EsGEVfs0SOK1xwrLvwoREw",
                              "verify_token": "il9v290ORSanFhidfOXZlQ"
                            }
                          },
                          {
                            "type": "dingtalk",
                            "settings": {
                              "disable_at": false,
                              "token": "https://oapi.dingtalk.com/robot/send?access_token=0b5159646cf666653b315a17d1a0273871c21c6c27ef9d8e0e31d8fc776a2d31"
                            }
                          },
                          {
                            "type": "feishu",
                            "settings": {
                              "alias": "test",
                              "token": "https://open.feishu.cn/open-apis/bot/v2/hook/5fbc33aa-ffce-462d-8ce0-c5a49899de23"
                            }
                          },
                          {
                            "type": "wecom",
                            "settings": {
                              "alias": "test",
                              "disable_at": false,
                              "token": "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=948af796-72dd-4d0b-9e7b-7e648980cbdb"
                            }
                          },
                          {
                            "type": "feishu",
                            "settings": {
                              "token": "https://open.larksuite.com/open-apis/bot/v2/hook/a9d72917-4f55-4cb4-8830-59dbfaf18150"
                            }
                          },
                          {
                            "type": "wecom",
                            "settings": {
                              "reply_event_types": [],
                              "token": "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=948af796-72dd-4d0b-9e7b-7e648980cbdb"
                            }
                          },
                          {
                            "type": "feishu",
                            "settings": {
                              "reply_event_types": [
                                "i_new"
                              ],
                              "token": "97b67d24-51c9-4dd9-9ddf-7df5728a60cf"
                            }
                          },
                          {
                            "type": "wecom",
                            "settings": {
                              "alias": "Wahaha",
                              "token": "bbb025a0-e2e8-4b79-939d-82c91a275b96"
                            }
                          },
                          {
                            "type": "dingtalk",
                            "settings": {
                              "token": "b9a1b24b987fb00fcf3cef61815516aca333f128dbf7a91b70a9315e2ce2d255"
                            }
                          },
                          {
                            "type": "dingtalk",
                            "settings": {
                              "alias": "Wahaha",
                              "disable_at": true,
                              "reply_event_types": [
                                "i_new",
                                "i_snooze"
                              ],
                              "token": "https://oapi.dingtalk.com/robot/send?access_token=afefdc81c4f0753977dc5174090d75ca1b28d76e58d89fc31b3eff776f1d7911"
                            }
                          },
                          {
                            "type": "wecom",
                            "settings": {
                              "alias": "wahaha",
                              "disable_at": true,
                              "reply_event_types": [
                                "i_new",
                                "i_snooze"
                              ],
                              "token": "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=90dbb66b-af39-4235-956c-636a9c1ed9c0"
                            }
                          },
                          {
                            "type": "dingtalk",
                            "settings": {
                              "alias": "test",
                              "token": "https://oapi.dingtalk.com/robot/send?access_token=dd0a9054dd32ce0c39b0e41c734dbaa365a4f745e78ea0c120095a33cf1bc2a2"
                            }
                          },
                          {
                            "type": "wecom",
                            "settings": {
                              "alias": "Nightingale Bot",
                              "token": "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=7854e5aa-2091-4e92-a3b9-9d821051f66e"
                            }
                          },
                          {
                            "type": "wecom",
                            "settings": {
                              "alias": "1",
                              "token": "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=bbb025a0-e2e8-4b79-939d-82c91a275b96"
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Channel",
        "x-apifox-status": "developing",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-200102106-run"
      }
    },
    "/template/list": {
      "post": {
        "summary": "Template List",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Template Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string",
                    "title": "Search keyword",
                    "description": "Search scope: channel_name"
                  },
                  "team_id": {
                    "type": "integer",
                    "title": "Team ID"
                  },
                  "creator_id": {
                    "type": "integer",
                    "title": "Creator ID",
                    "description": "Note: If not provided means no filtering, 0 means query system presets"
                  },
                  "is_my_team": {
                    "type": "boolean",
                    "title": "My team's",
                    "description": "Filter templates belonging to my teams"
                  }
                },
                "x-apifox-orders": [
                  "01GBYHWPZGY94HSKE0VY6WJXRP",
                  "query",
                  "team_id",
                  "creator_id",
                  "is_my_team"
                ],
                "x-apifox-refs": {
                  "01GBYHWPZGY94HSKE0VY6WJXRP": {
                    "type": "object",
                    "properties": {},
                    "x-apifox-orders": []
                  }
                },
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-orders": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "has_next_page": {
                          "type": "boolean",
                          "description": "Has next page"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Template",
                            "x-apifox-overrides": {}
                          }
                        }
                      },
                      "required": [
                        "items",
                        "has_next_page"
                      ],
                      "x-apifox-orders": [
                        "has_next_page",
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Template Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655754-run"
      }
    },
    "/template/info": {
      "post": {
        "summary": "Template Details",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Template Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template_id": {
                    "type": "string",
                    "title": "channel id"
                  }
                },
                "x-apifox-orders": [
                  "template_id"
                ],
                "required": [
                  "template_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "x-apifox-ignore-properties": []
                    },
                    "data": {
                      "$ref": "#/components/schemas/Template",
                      "x-apifox-overrides": {}
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Template Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655755-run"
      }
    },
    "/template/enable": {
      "post": {
        "summary": "Enable Template",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Template Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template_id": {
                    "title": "channel ID",
                    "type": "string"
                  }
                },
                "x-apifox-orders": [
                  "template_id"
                ],
                "required": [
                  "template_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Template Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655756-run"
      }
    },
    "/template/disable": {
      "post": {
        "summary": "Disable Template",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Template Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template_id": {
                    "title": "channel id",
                    "type": "string"
                  }
                },
                "x-apifox-orders": [
                  "template_id"
                ],
                "required": [
                  "template_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Template Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655757-run"
      }
    },
    "/template/delete": {
      "post": {
        "summary": "Delete Template",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Template Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template_id": {
                    "type": "string",
                    "title": "channel id"
                  }
                },
                "x-apifox-orders": [
                  "template_id"
                ],
                "required": [
                  "template_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "refs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Reference"
                          },
                          "title": "Associated Resource List"
                        }
                      },
                      "x-apifox-orders": [
                        "refs"
                      ],
                      "required": [
                        "refs"
                      ],
                      "description": "Only exists when code=ReferenceExist",
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Template Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655758-run"
      }
    },
    "/template/preview": {
      "post": {
        "summary": "Preview Template",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Template Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "Content before preview"
                  },
                  "type": {
                    "type": "string",
                    "description": "Channel type",
                    "enum": [
                      "dingtalk_app",
                      "feishu_app",
                      "wecom_app",
                      "slack_app",
                      "teams_app",
                      "feishu",
                      "dingtalk",
                      "wecom",
                      "telegram",
                      "zoom",
                      "email",
                      "sms"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "dingtalk_app": "Dingtalk app",
                        "feishu_app": "Feishu/Lark app",
                        "wecom_app": "WeCom app",
                        "slack_app": "Slack app",
                        "teams_app": "Teams app",
                        "feishu": "Feishu/Lark bot",
                        "dingtalk": "Dingtalk bot",
                        "wecom": "WeCom bot",
                        "telegram": "Telegram bot",
                        "zoom": "Zoom bot",
                        "email": "Email",
                        "sms": "SMS"
                      }
                    }
                  },
                  "incident_id": {
                    "type": "string",
                    "description": "Preview incident ID, system mock data will be used if not provided"
                  }
                },
                "x-apifox-orders": [
                  "content",
                  "type",
                  "incident_id"
                ],
                "required": [
                  "content",
                  "type"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "x-apifox-ignore-properties": []
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string",
                          "title": "Rendered content"
                        },
                        "success": {
                          "type": "boolean",
                          "title": "Content is correct"
                        },
                        "message": {
                          "type": "string",
                          "title": "If failed, failure description will be returned here",
                          "description": "Only returned when success=false"
                        }
                      },
                      "x-apifox-orders": [
                        "content",
                        "success",
                        "message"
                      ],
                      "required": [
                        "content",
                        "success",
                        "message"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "required": [
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Template Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655759-run"
      }
    },
    "/template/create": {
      "post": {
        "summary": "Create Template",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Template Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "x-apifox-overrides": {},
                "type": "object",
                "properties": {
                  "team_id": {
                    "title": "Team ID",
                    "type": "integer"
                  },
                  "template_name": {
                    "type": "string",
                    "title": "Name"
                  },
                  "description": {
                    "type": "string",
                    "title": "Description"
                  },
                  "email": {
                    "type": "string",
                    "title": "Email"
                  },
                  "sms": {
                    "type": "string",
                    "title": "SMS"
                  },
                  "dingtalk": {
                    "type": "string",
                    "title": "Dingtalk bot"
                  },
                  "wecom": {
                    "type": "string",
                    "title": "WeCom bot"
                  },
                  "feishu": {
                    "type": "string",
                    "title": "Feishu/Lark bot"
                  },
                  "feishu_app": {
                    "type": "string",
                    "title": "Feishu/Lark app"
                  },
                  "dingtalk_app": {
                    "type": "string",
                    "title": "Dingtalk app"
                  },
                  "wecom_app": {
                    "type": "string",
                    "title": "WeCom app"
                  },
                  "teams_app": {
                    "type": "string",
                    "title": "Teams app"
                  },
                  "slack_app": {
                    "type": "string",
                    "title": "Slack app"
                  },
                  "zoom": {
                    "type": "string",
                    "title": "Zoom bot"
                  },
                  "telegram": {
                    "type": "string",
                    "title": "Telegram bot"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "team_id",
                  "template_name",
                  "description",
                  "email",
                  "sms",
                  "dingtalk",
                  "wecom",
                  "feishu",
                  "feishu_app",
                  "dingtalk_app",
                  "wecom_app",
                  "teams_app",
                  "slack_app",
                  "zoom",
                  "telegram"
                ],
                "required": [
                  "template_name",
                  "email",
                  "dingtalk",
                  "feishu_app",
                  "feishu",
                  "wecom",
                  "dingtalk_app",
                  "wecom_app",
                  "sms",
                  "telegram",
                  "zoom",
                  "slack_app",
                  "teams_app"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "x-apifox-ignore-properties": []
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "template_id": {
                          "type": "string",
                          "title": "ID"
                        },
                        "template_name": {
                          "type": "string",
                          "title": "Name"
                        }
                      },
                      "x-apifox-orders": [
                        "template_id",
                        "template_name"
                      ],
                      "required": [
                        "template_id",
                        "template_name"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Template Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655760-run"
      }
    },
    "/template/update": {
      "post": {
        "summary": "Update Template",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Template Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "x-apifox-overrides": {},
                "type": "object",
                "properties": {
                  "template_id": {
                    "type": "string",
                    "title": "Template ID"
                  },
                  "team_id": {
                    "title": "Team ID",
                    "type": "integer"
                  },
                  "template_name": {
                    "type": "string",
                    "title": "Name"
                  },
                  "description": {
                    "type": "string",
                    "title": "Description"
                  },
                  "email": {
                    "type": "string",
                    "title": "Email"
                  },
                  "sms": {
                    "type": "string",
                    "title": "SMS"
                  },
                  "dingtalk": {
                    "type": "string",
                    "title": "Dingtalk bot"
                  },
                  "wecom": {
                    "type": "string",
                    "title": "WeCom bot"
                  },
                  "feishu": {
                    "type": "string",
                    "title": "Feishu/Lark bot"
                  },
                  "feishu_app": {
                    "type": "string",
                    "title": "Feishu/Lark app"
                  },
                  "dingtalk_app": {
                    "type": "string",
                    "title": "Dingtalk app"
                  },
                  "wecom_app": {
                    "type": "string",
                    "title": "WeCom app"
                  },
                  "teams_app": {
                    "type": "string",
                    "title": "Teams app"
                  },
                  "slack_app": {
                    "type": "string",
                    "title": "Slack app"
                  },
                  "zoom": {
                    "type": "string",
                    "title": "Zoom bot"
                  },
                  "telegram": {
                    "type": "string",
                    "title": "Telegram bot"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "template_id",
                  "team_id",
                  "template_name",
                  "description",
                  "email",
                  "sms",
                  "dingtalk",
                  "wecom",
                  "feishu",
                  "feishu_app",
                  "dingtalk_app",
                  "wecom_app",
                  "teams_app",
                  "slack_app",
                  "zoom",
                  "telegram"
                ],
                "required": [
                  "template_name",
                  "email",
                  "dingtalk",
                  "feishu_app",
                  "feishu",
                  "wecom",
                  "dingtalk_app",
                  "wecom_app",
                  "sms",
                  "telegram",
                  "zoom",
                  "slack_app",
                  "teams_app",
                  "template_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Template Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655761-run"
      }
    },
    "/incident/card-view/delete": {
      "post": {
        "summary": "Delete View",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management/Group View"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "view_id": {
                    "type": "string",
                    "title": "rule ID"
                  }
                },
                "x-apifox-orders": [
                  "view_id"
                ],
                "required": [
                  "view_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management/Group View",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655784-run"
      }
    },
    "/incident/card-view/list": {
      "post": {
        "summary": "View List",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Incident Management/Group View"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "x-apifox-orders": [],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-orders": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CardView",
                            "x-apifox-overrides": {}
                          }
                        }
                      },
                      "required": [
                        "items"
                      ],
                      "x-apifox-orders": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management/Group View",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655785-run"
      }
    },
    "/incident/card-view/create": {
      "post": {
        "summary": "Create View",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management/Group View"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "x-apifox-overrides": {},
                "type": "object",
                "properties": {
                  "view_name": {
                    "type": "string",
                    "title": "Rule name"
                  },
                  "equals": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Items starting with label. are label items, others are attribute items",
                      "enum": [
                        "title",
                        "incident_severity",
                        "incident_status",
                        "labels.{x}"
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "title": "Title",
                          "incident_severity": "Severity",
                          "incident_status": "Incident status",
                          "labels.{x}": "Label"
                        }
                      }
                    },
                    "title": "Equal items"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "view_name",
                  "equals"
                ],
                "required": [
                  "equals"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "view_id": {
                          "type": "string",
                          "title": "ID"
                        }
                      },
                      "x-apifox-orders": [
                        "view_id"
                      ],
                      "required": [
                        "view_id"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management/Group View",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655786-run"
      }
    },
    "/incident/card-view/update": {
      "post": {
        "summary": "Update View",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management/Group View"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "x-apifox-overrides": {},
                "type": "object",
                "properties": {
                  "view_id": {
                    "type": "string",
                    "title": "Rule ID",
                    "description": "Required when updating"
                  },
                  "view_name": {
                    "type": "string",
                    "title": "Rule name"
                  },
                  "equals": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Items starting with label. are label items, others are attribute items",
                      "enum": [
                        "title",
                        "incident_severity",
                        "incident_status",
                        "labels.{x}"
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "title": "Title",
                          "incident_severity": "Severity",
                          "incident_status": "Incident status",
                          "labels.{x}": "Label"
                        }
                      }
                    },
                    "title": "Equal items"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "view_id",
                  "view_name",
                  "equals"
                ],
                "required": [
                  "view_id",
                  "equals",
                  "view_name"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "rule_id": {
                          "type": "string",
                          "title": "ID"
                        }
                      },
                      "x-apifox-orders": [
                        "rule_id"
                      ],
                      "required": [
                        "rule_id"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management/Group View",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655787-run"
      }
    },
    "/incident/info": {
      "post": {
        "summary": "Incident Details",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_id": {
                    "type": "string"
                  }
                },
                "x-apifox-orders": [
                  "incident_id"
                ],
                "required": [
                  "incident_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "title": "Data object",
                      "$ref": "#/components/schemas/Incident",
                      "x-apifox-overrides": {}
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655762-run"
      }
    },
    "/incident/comment": {
      "post": {
        "summary": "Comment on Incident",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "comment": {
                    "type": "string"
                  }
                },
                "x-apifox-orders": [
                  "incident_ids",
                  "comment"
                ],
                "required": [
                  "incident_ids",
                  "comment"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655763-run"
      }
    },
    "/incident/title/reset": {
      "post": {
        "summary": "Update Title",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_id": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  }
                },
                "x-apifox-orders": [
                  "incident_id",
                  "title"
                ],
                "required": [
                  "incident_id",
                  "title"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655764-run"
      }
    },
    "/incident/description/reset": {
      "post": {
        "summary": "Update Description",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_id": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "x-apifox-orders": [
                  "incident_id",
                  "description"
                ],
                "required": [
                  "incident_id",
                  "description"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655765-run"
      }
    },
    "/incident/impact/reset": {
      "post": {
        "summary": "Update Impact",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_id": {
                    "type": "string"
                  },
                  "impact": {
                    "type": "string"
                  }
                },
                "x-apifox-orders": [
                  "incident_id",
                  "impact"
                ],
                "required": [
                  "incident_id",
                  "impact"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655766-run"
      }
    },
    "/incident/root-cause/reset": {
      "post": {
        "summary": "Update Root Cause",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_id": {
                    "type": "string"
                  },
                  "root_cause": {
                    "type": "string"
                  }
                },
                "x-apifox-orders": [
                  "incident_id",
                  "root_cause"
                ],
                "required": [
                  "incident_id",
                  "root_cause"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655767-run"
      }
    },
    "/incident/field/reset": {
      "post": {
        "summary": "Update Custom Field",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_id": {
                    "type": "string",
                    "title": "Incident ID"
                  },
                  "field_name": {
                    "type": "string",
                    "title": "Field name"
                  },
                  "field_value": {
                    "type": "string"
                  }
                },
                "x-apifox-orders": [
                  "incident_id",
                  "field_name",
                  "field_value"
                ],
                "required": [
                  "incident_id",
                  "field_name"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-111062343-run"
      }
    },
    "/incident/custom-action/do": {
      "post": {
        "summary": "Trigger Custom Action",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_id": {
                    "type": "string",
                    "title": "Incident ID"
                  },
                  "integration_id": {
                    "type": "integer",
                    "title": "Custom Action Integration ID"
                  }
                },
                "x-apifox-orders": [
                  "incident_id",
                  "integration_id"
                ],
                "required": [
                  "incident_id",
                  "integration_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "title": "Error description from the called party"
                        }
                      },
                      "x-apifox-orders": [
                        "message"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-125787279-run"
      }
    },
    "/incident/resolution/reset": {
      "post": {
        "summary": "Update Resolution",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_id": {
                    "type": "string"
                  },
                  "resolution": {
                    "type": "string"
                  }
                },
                "x-apifox-orders": [
                  "incident_id",
                  "resolution"
                ],
                "required": [
                  "incident_id",
                  "resolution"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655768-run"
      }
    },
    "/incident/list-by-ids": {
      "post": {
        "summary": "Incident List - Query by ID",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Incident ID list"
                  }
                },
                "x-apifox-orders": [
                  "incident_ids"
                ],
                "x-apifox-refs": {},
                "required": [
                  "incident_ids"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "title": "Data object",
                            "$ref": "#/components/schemas/Incident",
                            "x-apifox-overrides": {}
                          },
                          "title": "Incident entry"
                        },
                        "has_next_page": {
                          "type": "boolean",
                          "title": "Has next page"
                        },
                        "total": {
                          "type": "integer",
                          "title": "Total entries"
                        }
                      },
                      "x-apifox-orders": [
                        "items",
                        "has_next_page",
                        "total"
                      ],
                      "required": [
                        "has_next_page",
                        "total"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655769-run"
      }
    },
    "/incident/list-by-card": {
      "post": {
        "summary": "Incident List - Card View",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "view_id": {
                    "type": "integer",
                    "title": "View ID"
                  },
                  "asc": {
                    "title": "Ascending order",
                    "type": "boolean"
                  },
                  "progress": {
                    "type": "string",
                    "title": "Processing status",
                    "description": "All (progress not provided), Open (progress=Triggered,Processing), Triggered (progress=Triggered), Processing (progress=Processing), Closed (progress=Closed)"
                  },
                  "title": {
                    "type": "string",
                    "title": "Title"
                  },
                  "channel_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Channel ID list",
                    "description": "0 represents global incident"
                  },
                  "responder_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Responder ID list",
                    "description": "Responders may include assigned but unacknowledged members"
                  },
                  "acker_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Acknowledger ID list"
                  },
                  "creator_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Creator ID list",
                    "description": "0 represents system aggregated incident"
                  },
                  "incident_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Incident ID list"
                  },
                  "start_time": {
                    "type": "integer",
                    "title": "Search range start point",
                    "description": "Unit: seconds, end_time-start_time cannot exceed 1 month"
                  },
                  "end_time": {
                    "type": "integer",
                    "title": "Search range end point",
                    "description": "Unit: seconds, end_time-start_time cannot exceed 1 month"
                  },
                  "range_by": {
                    "type": "string",
                    "title": "Search time field",
                    "description": "Default is last_time, supports updated_at last_time start_time. But if by_intersection=true, range_by can only be last_time or end_time"
                  },
                  "incident_severity": {
                    "type": "string",
                    "title": "Severity",
                    "description": "Critical,Info,Warning can have multiple values, comma separated",
                    "enum": [
                      "Critical",
                      "Warning",
                      "Info"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "Critical": "",
                        "Warning": "",
                        "Info": ""
                      }
                    }
                  },
                  "is_related": {
                    "type": "boolean",
                    "title": "Related to me",
                    "description": "Login user is creator, assignee, closer or responder"
                  },
                  "is_snoozed": {
                    "type": "boolean",
                    "title": "Is snoozed",
                    "description": "Only check current status, not related to query time range"
                  },
                  "is_my_team": {
                    "type": "boolean",
                    "title": "My team's",
                    "description": "When set to true, only count incidents in channels belonging to my teams"
                  },
                  "labels": {
                    "type": "object",
                    "properties": {
                      "$key": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "title": "Label key with optional values, match if any value matches"
                      }
                    },
                    "x-apifox-orders": [
                      "$key"
                    ],
                    "required": [
                      "$key"
                    ],
                    "description": "Supports exact match, regex match and wildcard match. String with '/' prefix and suffix will be treated as regex. Example: specifying ('datacenter' IN ['bj01','sh-*','']) AND ('host' IN '/api-server-\\d+/') will match alerts from data centers 'bj01' and 'sh-01','sh-02' with hostname matching regex 'api-server-\\d+'",
                    "title": "Label filters",
                    "x-apifox-ignore-properties": []
                  }
                },
                "x-apifox-orders": [
                  "view_id",
                  "asc",
                  "progress",
                  "title",
                  "channel_ids",
                  "responder_ids",
                  "acker_ids",
                  "creator_ids",
                  "incident_ids",
                  "start_time",
                  "end_time",
                  "range_by",
                  "incident_severity",
                  "is_related",
                  "is_snoozed",
                  "is_my_team",
                  "labels"
                ],
                "x-apifox-refs": {},
                "required": [
                  "start_time",
                  "end_time",
                  "view_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "title": "Card name"
                              },
                              "total": {
                                "type": "integer",
                                "title": "Alert count"
                              },
                              "incident_severity": {
                                "type": "string",
                                "title": "Highest severity"
                              },
                              "incident_ids": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "title": "Incident ID list"
                              }
                            },
                            "x-apifox-orders": [
                              "title",
                              "total",
                              "incident_severity",
                              "incident_ids"
                            ],
                            "required": [
                              "title",
                              "incident_ids",
                              "incident_severity",
                              "total"
                            ],
                            "x-apifox-ignore-properties": []
                          },
                          "description": "<span style=\"color: red;\">Note: Only returns 100 items when matches exceed 100</span>"
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "required": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655770-run"
      }
    },
    "/incident/alert/list": {
      "post": {
        "summary": "Associated Alert List",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_id": {
                    "type": "string",
                    "title": "Alert ID"
                  },
                  "include_events": {
                    "type": "boolean"
                  }
                },
                "x-apifox-orders": [
                  "incident_id",
                  "include_events"
                ],
                "x-apifox-refs": {},
                "required": [
                  "incident_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Alert",
                            "x-apifox-overrides": {}
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "required": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655771-run"
      }
    },
    "/incident/ack": {
      "post": {
        "summary": "Acknowledge Incident",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "x-apifox-orders": [
                  "incident_ids"
                ],
                "required": [
                  "incident_ids"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655772-run"
      }
    },
    "/incident/unack": {
      "post": {
        "summary": "Unacknowledge Incident",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "x-apifox-orders": [
                  "incident_ids"
                ],
                "required": [
                  "incident_ids"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655773-run"
      }
    },
    "/incident/resolve": {
      "post": {
        "summary": "Close Incident",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Incident ID list",
                    "maxItems": 100
                  },
                  "root_cause": {
                    "type": "string",
                    "title": "Root cause"
                  },
                  "resolution": {
                    "type": "string",
                    "title": "Resolution"
                  }
                },
                "x-apifox-orders": [
                  "incident_ids",
                  "root_cause",
                  "resolution"
                ],
                "required": [
                  "incident_ids"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655774-run"
      }
    },
    "/incident/snooze": {
      "post": {
        "summary": "Silence Incident",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Incident ID list"
                  },
                  "minutes": {
                    "type": "integer",
                    "title": "Silence duration in minutes, 1-1440"
                  }
                },
                "x-apifox-orders": [
                  "incident_ids",
                  "minutes"
                ],
                "required": [
                  "incident_ids",
                  "minutes"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655775-run"
      }
    },
    "/incident/reopen": {
      "post": {
        "summary": "Reopen Incident",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Incident ID list"
                  },
                  "reason": {
                    "type": "string",
                    "title": "Root cause"
                  }
                },
                "x-apifox-orders": [
                  "incident_ids",
                  "reason"
                ],
                "required": [
                  "incident_ids",
                  "reason"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655776-run"
      }
    },
    "/incident/wake": {
      "post": {
        "summary": "Unsilence Incident",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Incident ID list"
                  }
                },
                "x-apifox-orders": [
                  "incident_ids"
                ],
                "required": [
                  "incident_ids"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655777-run"
      }
    },
    "/incident/merge": {
      "post": {
        "summary": "Merge Incidents",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "source_incident_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Selected incidents"
                  },
                  "target_incident_id": {
                    "type": "string",
                    "title": "Target incident"
                  },
                  "title": {
                    "type": "string",
                    "title": "New title"
                  },
                  "comment": {
                    "type": "string",
                    "title": "Comment"
                  }
                },
                "x-apifox-orders": [
                  "source_incident_ids",
                  "target_incident_id",
                  "title",
                  "comment"
                ],
                "required": [
                  "source_incident_ids",
                  "target_incident_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655778-run"
      }
    },
    "/incident/severity/reset": {
      "post": {
        "summary": "Update Severity",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_id": {
                    "type": "string"
                  },
                  "incident_severity": {
                    "type": "string"
                  }
                },
                "x-apifox-orders": [
                  "incident_id",
                  "incident_severity"
                ],
                "required": [
                  "incident_id",
                  "incident_severity"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655779-run"
      }
    },
    "/incident/assign": {
      "post": {
        "summary": "Assign Incident",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_id": {
                    "type": "string",
                    "title": "Incident ID"
                  },
                  "assigned_to": {
                    "$ref": "#/components/schemas/Assignment"
                  }
                },
                "x-apifox-orders": [
                  "incident_id",
                  "assigned_to"
                ],
                "required": [
                  "incident_id",
                  "assigned_to"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655780-run"
      }
    },
    "/incident/responder/add": {
      "post": {
        "summary": "Add Responders",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_id": {
                    "type": "string",
                    "title": "Incident ID"
                  },
                  "person_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "New responder list"
                  },
                  "notify": {
                    "type": "object",
                    "properties": {
                      "follow_preference": {
                        "type": "boolean",
                        "title": "Follow personal preferences"
                      },
                      "personal_channels": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "email",
                            "sms",
                            "voice",
                            "feishu_app:xxxx",
                            "dingtalk_app:xxxx",
                            "wecom_app:xxxx"
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "email": "Email",
                              "sms": "SMS",
                              "voice": "Voice",
                              "feishu_app:xxxx": "Feishu/Lark app",
                              "dingtalk_app:xxxx": "Dingtalk app",
                              "wecom_app:xxxx": "WeCom app"
                            }
                          }
                        },
                        "title": "Personal notification channels"
                      },
                      "template_id": {
                        "type": "string",
                        "title": "Template ID, defaults to 'Default Template'"
                      }
                    },
                    "x-apifox-orders": [
                      "follow_preference",
                      "personal_channels",
                      "template_id"
                    ],
                    "required": [
                      "personal_channels"
                    ],
                    "title": "Notification methods",
                    "x-apifox-ignore-properties": []
                  }
                },
                "x-apifox-orders": [
                  "incident_id",
                  "person_ids",
                  "notify"
                ],
                "required": [
                  "incident_id",
                  "person_ids"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-136553717-run"
      }
    },
    "/incident/create": {
      "post": {
        "summary": "Create Incident",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "title": "Incident title"
                  },
                  "description": {
                    "type": "string",
                    "title": "Incident description"
                  },
                  "incident_severity": {
                    "type": "string",
                    "title": "Severity"
                  },
                  "channel_id": {
                    "type": "integer",
                    "title": "Channel ID",
                    "description": "If not provided, will be global incident requiring offline notification"
                  },
                  "assigned_to": {
                    "$ref": "#/components/schemas/Assignment"
                  }
                },
                "x-apifox-orders": [
                  "title",
                  "description",
                  "incident_severity",
                  "channel_id",
                  "assigned_to"
                ],
                "required": [
                  "title",
                  "incident_severity"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "incident_id": {
                          "type": "string",
                          "title": "Incident ID"
                        },
                        "title": {
                          "type": "string",
                          "title": "Incident title"
                        }
                      },
                      "title": "",
                      "x-apifox-orders": [
                        "incident_id",
                        "title"
                      ],
                      "required": [
                        "incident_id",
                        "title"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655781-run"
      }
    },
    "/incident/list": {
      "post": {
        "summary": "Incident List",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "search_after_ctx": {
                    "type": "string",
                    "title": "Cursor pagination, defaults to first page if not set. Choose one between this and p parameter",
                    "description": "For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)"
                  },
                  "p": {
                    "type": "integer",
                    "title": "Traditional pagination, starts from page 1 if not set, default value is 1. Choose one between this and search_after_ctx parameter",
                    "description": "When using traditional pagination, <span style=\"color: red;\">p*limit must not exceed 10000</span> when p parameter is set, otherwise returns parameter error. For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)",
                    "default": 1
                  },
                  "limit": {
                    "type": "integer",
                    "title": "Items per page",
                    "description": "<span style=\"color: red;\">When p parameter is set, (p-1)*limit must not exceed 10000</span>, otherwise returns parameter error. For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)",
                    "maximum": 100,
                    "minimum": 0,
                    "default": 20
                  },
                  "asc": {
                    "title": "Ascending order",
                    "type": "boolean",
                    "description": "Default sort by incident creation time, start_time"
                  },
                  "progress": {
                    "type": "string",
                    "title": "Processing status",
                    "description": "Triggered,Processing,Closed. All (progress not provided), Open (progress=Triggered,Processing), Triggered (progress=Triggered), Processing (progress=Processing), Closed (progress=Closed)"
                  },
                  "title": {
                    "type": "string",
                    "title": "Incident title",
                    "description": "Exact match by default"
                  },
                  "channel_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Channel ID list",
                    "description": "0 represents global incident"
                  },
                  "responder_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Responder ID list",
                    "description": "Responders may include assigned but unacknowledged members"
                  },
                  "acker_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Acknowledger ID list"
                  },
                  "creator_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Creator ID list",
                    "description": "0 represents system aggregated incident, non-zero represents manually created incident"
                  },
                  "incident_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Incident ID list"
                  },
                  "start_time": {
                    "type": "integer",
                    "title": "Search range start point",
                    "description": "Unit: seconds, end_time-start_time cannot exceed 1 month"
                  },
                  "end_time": {
                    "type": "integer",
                    "title": "Search range end point",
                    "description": "Unit: seconds, end_time-start_time cannot exceed 1 month"
                  },
                  "incident_severity": {
                    "type": "string",
                    "title": "Severity",
                    "description": "Critical,Info,Warning can have multiple values, comma separated",
                    "enum": [
                      "Critical",
                      "Warning",
                      "Info"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "Critical": "",
                        "Warning": "",
                        "Info": ""
                      }
                    }
                  },
                  "is_related": {
                    "type": "boolean",
                    "title": "Related to me",
                    "description": "Login user is creator, assignee, closer or responder"
                  },
                  "is_snoozed": {
                    "type": "boolean",
                    "title": "Is snoozed",
                    "description": "Only check current status, not related to query time range"
                  },
                  "is_my_team": {
                    "type": "boolean",
                    "title": "My team's",
                    "description": "When set to true, only count incidents in channels belonging to my teams"
                  },
                  "is_my_channel": {
                    "type": "boolean",
                    "title": "My channels",
                    "description": "When set to true, only count incidents in my channels (channels belonging to my teams and channels I created personally)"
                  },
                  "labels": {
                    "title": "Label list",
                    "$ref": "#/components/schemas/Labels",
                    "x-apifox-overrides": {}
                  },
                  "fields": {
                    "type": "object",
                    "properties": {
                      "{x}": {
                        "type": "string"
                      }
                    },
                    "x-apifox-orders": [
                      "{x}"
                    ],
                    "title": "Custom field filters",
                    "description": "Only supports exact match",
                    "required": [
                      "{x}"
                    ],
                    "x-apifox-ignore-properties": []
                  }
                },
                "x-apifox-orders": [
                  "01HK4HCH7XX87QJAJQDQ61WFME",
                  "asc",
                  "progress",
                  "title",
                  "channel_ids",
                  "responder_ids",
                  "acker_ids",
                  "creator_ids",
                  "incident_ids",
                  "start_time",
                  "end_time",
                  "incident_severity",
                  "is_related",
                  "is_snoozed",
                  "is_my_team",
                  "is_my_channel",
                  "labels",
                  "fields"
                ],
                "x-apifox-refs": {
                  "01HK4HCH7XX87QJAJQDQ61WFME": {
                    "$ref": "#/components/schemas/MixedPagination"
                  }
                },
                "required": [
                  "start_time",
                  "end_time"
                ],
                "x-apifox-ignore-properties": [
                  "search_after_ctx",
                  "p",
                  "limit"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "title": "Data object",
                            "$ref": "#/components/schemas/Incident",
                            "x-apifox-overrides": {}
                          },
                          "title": "Incident entry"
                        },
                        "search_after_ctx": {
                          "type": "string",
                          "title": "Cursor pagination, presence indicates next page exists",
                          "description": "For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)"
                        },
                        "total": {
                          "type": "integer",
                          "title": "Total matching entries",
                          "description": "Please note, <span style=\"color: red;\">total is only accurate when less than 1000, do not use this value to calculate pagination end.</span> When total entries exceed 1000, system will only return total=1000, indicating 1000+ matches found. Please use has_next_page to determine if more data exists. For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)"
                        },
                        "has_next_page": {
                          "type": "boolean",
                          "title": "Whether more unretreived data exists"
                        }
                      },
                      "x-apifox-orders": [
                        "items",
                        "01HK4JPZ6FDD9PD7BKFVWNH255"
                      ],
                      "x-apifox-refs": {
                        "01HK4JPZ6FDD9PD7BKFVWNH255": {
                          "$ref": "#/components/schemas/MixedPageout"
                        }
                      },
                      "x-apifox-ignore-properties": [
                        "search_after_ctx",
                        "total",
                        "has_next_page"
                      ]
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655782-run"
      }
    },
    "/incident/past/list": {
      "post": {
        "summary": "Historical Incident List",
        "deprecated": false,
        "description": "Query similar historical incidents to the input incident, only counts similar incidents in the same channel within 30 days before the incident. Note this API is only available for Pro version.",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "title": "Items per page",
                    "maximum": 100,
                    "minimum": 0,
                    "default": 20
                  },
                  "incident_id": {
                    "type": "string",
                    "title": "Incident ID being queried"
                  }
                },
                "x-apifox-orders": [
                  "limit",
                  "incident_id"
                ],
                "x-apifox-refs": {},
                "required": [
                  "incident_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "score": {
                                "type": "number",
                                "title": "Similarity degree",
                                "minimum": 0.9,
                                "maximum": 1
                              },
                              "incident_id": {
                                "type": "string",
                                "title": "Incident ID"
                              },
                              "start_time": {
                                "type": "integer",
                                "title": "Start timestamp in seconds",
                                "description": "Unit: seconds"
                              },
                              "end_time": {
                                "title": "End timestamp in seconds",
                                "type": "integer",
                                "description": "When incident auto-recovers, this value is non-zero; when manually closing incident, this value may be 0"
                              },
                              "last_time": {
                                "type": "integer",
                                "title": "Start timestamp of last alert in seconds"
                              },
                              "ack_time": {
                                "type": "integer",
                                "title": "First acknowledgment timestamp in seconds",
                                "description": "If multiple people acknowledge the alert, this field is the first acknowledgment time. If acknowledgment is cancelled, this value resets to 0"
                              },
                              "close_time": {
                                "type": "integer",
                                "title": "Manual closure timestamp in seconds",
                                "description": "When incident auto-recovers, the incident will also auto-close"
                              },
                              "snoozed_before": {
                                "type": "integer",
                                "title": "Snooze timestamp in seconds",
                                "description": "Resets to 0 when unclose or unacknowledge"
                              },
                              "incident_status": {
                                "type": "string",
                                "title": "Incident status",
                                "description": "Enum values: Info, Warning, Critical, Ok",
                                "enum": [
                                  "Info",
                                  "Warning",
                                  "Critical",
                                  "Ok"
                                ],
                                "x-apifox": {
                                  "enumDescriptions": {
                                    "Info": "Info",
                                    "Warning": "Warning",
                                    "Critical": "Critical",
                                    "Ok": "Recovered"
                                  }
                                }
                              },
                              "incident_severity": {
                                "type": "string",
                                "title": "Severity",
                                "description": "Enum values: Info, Warning, Critical",
                                "enum": [
                                  "Info",
                                  "Warning",
                                  "Critical"
                                ],
                                "x-apifox": {
                                  "enumDescriptions": {
                                    "Info": "Info",
                                    "Warning": "Warning",
                                    "Critical": "Critical"
                                  }
                                }
                              },
                              "progress": {
                                "type": "string",
                                "title": "Processing progress",
                                "description": "Enum values: Triggered, Processing, Closed",
                                "enum": [
                                  "Triggered",
                                  "Processing",
                                  "Closed"
                                ],
                                "x-apifox": {
                                  "enumDescriptions": {
                                    "Triggered": "Triggered",
                                    "Processing": "Processing",
                                    "Closed": "Closed"
                                  }
                                }
                              },
                              "creator_id": {
                                "title": "Creator ID",
                                "type": "integer"
                              },
                              "closer_id": {
                                "type": "integer",
                                "title": "Closer ID"
                              },
                              "assigned_to": {
                                "title": "Assignment information",
                                "description": "Last manual or automatic assignment information, updated when escalation or reassignment occurs",
                                "anyOf": [
                                  {
                                    "$ref": "#/components/schemas/Assignment"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "responders": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/Responder"
                                },
                                "title": "Responder ID list",
                                "description": "This value has no absolute relationship with assigned_to, may be updated when someone directly acknowledges or closes the incident"
                              },
                              "alert_cnt": {
                                "title": "Associated alert count",
                                "type": "integer"
                              },
                              "title": {
                                "type": "string",
                                "title": "Title"
                              },
                              "description": {
                                "type": "string",
                                "title": "Description"
                              },
                              "impact": {
                                "type": "string",
                                "title": "Impact"
                              },
                              "root_cause": {
                                "type": "string",
                                "title": "Root cause"
                              },
                              "resolution": {
                                "type": "string",
                                "title": "Resolution"
                              },
                              "num": {
                                "type": "string",
                                "title": "Short identifier",
                                "description": "May be duplicate"
                              },
                              "labels": {
                                "anyOf": [
                                  {
                                    "title": "Label list",
                                    "$ref": "#/components/schemas/Labels",
                                    "x-apifox-overrides": {}
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "channel_id": {
                                "type": "integer",
                                "title": "Channel ID",
                                "description": "0 represents global incident"
                              },
                              "channel_name": {
                                "type": "string",
                                "title": "Channel name"
                              },
                              "data_source_id": {
                                "type": "integer",
                                "title": "Integration source",
                                "description": "Integration source of the first alert aggregated into the incident"
                              },
                              "data_source_type": {
                                "type": "string",
                                "title": "Integration type",
                                "description": "Integration type of the first alert aggregated into the incident"
                              },
                              "dedup_key": {
                                "type": "string",
                                "title": "Incident deduplication key",
                                "description": "alert_key of the first alert aggregated into the incident"
                              },
                              "group_method": {
                                "type": "string",
                                "enum": [
                                  "i",
                                  "p",
                                  "n"
                                ],
                                "x-apifox": {
                                  "enumDescriptions": {
                                    "i": "intelligent, intelligent grouping",
                                    "p": "pattern, rule-based grouping",
                                    "n": "none, no grouping"
                                  }
                                },
                                "title": "Grouping method"
                              },
                              "ever_muted": {
                                "type": "boolean",
                                "title": "Whether has been inhibited",
                                "description": "Whether has been silenced, converged, or inhibited"
                              },
                              "frequency": {
                                "type": "string",
                                "title": "Trigger frequency",
                                "description": "If rare, means only occurred once in 30 days. If frequent, means occurred at least 20 times in 30 days"
                              }
                            },
                            "x-apifox-orders": [
                              "score",
                              "01J6VXRBK7MTJY01NFT4ME18CD"
                            ],
                            "required": [
                              "score",
                              "incident_id",
                              "start_time",
                              "end_time",
                              "last_time",
                              "snoozed_before",
                              "incident_status",
                              "incident_severity",
                              "progress",
                              "creator_id",
                              "title"
                            ],
                            "x-apifox-refs": {
                              "01J6VXRBK7MTJY01NFT4ME18CD": {
                                "title": "Data object",
                                "$ref": "#/components/schemas/Incident",
                                "x-apifox-overrides": {}
                              }
                            },
                            "x-apifox-ignore-properties": [
                              "incident_id",
                              "start_time",
                              "end_time",
                              "last_time",
                              "ack_time",
                              "close_time",
                              "snoozed_before",
                              "incident_status",
                              "incident_severity",
                              "progress",
                              "creator_id",
                              "closer_id",
                              "assigned_to",
                              "responders",
                              "alert_cnt",
                              "title",
                              "description",
                              "impact",
                              "root_cause",
                              "resolution",
                              "num",
                              "labels",
                              "channel_id",
                              "channel_name",
                              "data_source_id",
                              "data_source_type",
                              "dedup_key",
                              "group_method",
                              "ever_muted",
                              "frequency"
                            ]
                          },
                          "title": "Incident entry"
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "x-apifox-refs": {},
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-211537159-run"
      }
    },
    "/incident/feed": {
      "post": {
        "summary": "Incident Timeline",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Incident Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incident_id": {
                    "type": "string",
                    "title": "Alert ID"
                  },
                  "types": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "title": "Record type",
                      "enum": [
                        "i_comm",
                        "i_notify",
                        "i_new",
                        "i_assign",
                        "i_a_rspd",
                        "i_ack",
                        "i_unack",
                        "i_snooze",
                        "i_wake",
                        "i_rslv",
                        "i_reopen",
                        "i_merge",
                        "i_m_silence",
                        "i_m_inhibat",
                        "i_m_flapping",
                        "i_storm",
                        "i_r_rc",
                        "i_r_desc",
                        "i_r_rsltn",
                        "i_r_resp",
                        "i_r_impact",
                        "i_r_title",
                        "i_r_severity",
                        "i_r_field",
                        "i_custom"
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "i_comm": "Incident.Comment",
                          "i_notify": "Incident.Notification",
                          "i_new": "Incident.Trigger",
                          "i_assign": "Incident.Assignment",
                          "i_a_rspd": "Incident.AddResponders",
                          "i_ack": "Incident.StartProcessing",
                          "i_unack": "Incident.CancelProcessing",
                          "i_snooze": "Incident.Snooze",
                          "i_wake": "Incident.Unsnooze",
                          "i_rslv": "Incident.Resolve",
                          "i_reopen": "Incident.Reopen",
                          "i_merge": "Incident.Merge",
                          "i_m_silence": "Incident.TriggerSilence",
                          "i_m_inhibat": "Incident.TriggerInhibit",
                          "i_m_flapping": "Incident.TriggerConvergence",
                          "i_storm": "Incident.TriggerStorm",
                          "i_r_rc": "Incident.UpdateRootCause",
                          "i_r_desc": "Incident.UpdateDescription",
                          "i_r_rsltn": "Incident.UpdateResolution",
                          "i_r_resp": "Incident.UpdateResponders",
                          "i_r_impact": "Incident.UpdateImpact",
                          "i_r_title": "Incident.UpdateTitle",
                          "i_r_severity": "Incident.UpdateSeverity",
                          "i_r_field": "Incident.UpdateCustomField",
                          "i_custom": "Incident.TriggerCustomAction"
                        }
                      }
                    },
                    "title": "Type list"
                  },
                  "p": {
                    "type": "integer",
                    "title": "Page number, starts from 1"
                  },
                  "limit": {
                    "type": "integer",
                    "title": "Items per page"
                  },
                  "asc": {
                    "title": "Ascending order",
                    "type": "boolean"
                  }
                },
                "x-apifox-orders": [
                  "incident_id",
                  "types",
                  "01H4JY2JFZT90V32860K2P01Q4"
                ],
                "x-apifox-refs": {
                  "01H4JY2JFZT90V32860K2P01Q4": {
                    "$ref": "#/components/schemas/PageQuery"
                  }
                },
                "required": [
                  "incident_id"
                ],
                "x-apifox-ignore-properties": [
                  "p",
                  "limit",
                  "asc"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/IncidentAction",
                            "x-apifox-overrides": {}
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "required": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Incident Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655783-run"
      }
    },
    "/alert/card-view/delete": {
      "post": {
        "summary": "Delete View",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Alert Management/Group View"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "view_id": {
                    "type": "string",
                    "title": "rule ID"
                  }
                },
                "x-apifox-orders": [
                  "view_id"
                ],
                "required": [
                  "view_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Alert Management/Group View",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655796-run"
      }
    },
    "/alert/card-view/list": {
      "post": {
        "summary": "View List",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Alert Management/Group View"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "x-apifox-orders": [],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-orders": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CardView",
                            "x-apifox-overrides": {}
                          }
                        }
                      },
                      "required": [
                        "items"
                      ],
                      "x-apifox-orders": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Alert Management/Group View",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655797-run"
      }
    },
    "/alert/card-view/create": {
      "post": {
        "summary": "Create View",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Alert Management/Group View"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "x-apifox-overrides": {},
                "type": "object",
                "properties": {
                  "view_name": {
                    "type": "string",
                    "title": "Rule name"
                  },
                  "equals": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Items starting with label. are label items, others are attribute items, supports integration data_source_id, alert_severity, title, alert_status"
                    },
                    "title": "Equal items"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "view_name",
                  "equals"
                ],
                "required": [
                  "equals"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "view_id": {
                          "type": "string",
                          "title": "ID"
                        }
                      },
                      "x-apifox-orders": [
                        "view_id"
                      ],
                      "required": [
                        "view_id"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Alert Management/Group View",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655798-run"
      }
    },
    "/alert/card-view/update": {
      "post": {
        "summary": "Update View",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Alert Management/Group View"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "x-apifox-overrides": {},
                "type": "object",
                "properties": {
                  "view_id": {
                    "type": "string",
                    "title": "Rule ID",
                    "description": "Required when updating"
                  },
                  "view_name": {
                    "type": "string",
                    "title": "Rule name"
                  },
                  "equals": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Items starting with label. are label items, others are attribute items, supports integration data_source_id, alert_severity, title, alert_status"
                    },
                    "title": "Equal items"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "view_id",
                  "view_name",
                  "equals"
                ],
                "required": [
                  "view_id",
                  "view_name",
                  "equals"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "rule_id": {
                          "type": "string",
                          "title": "ID"
                        }
                      },
                      "x-apifox-orders": [
                        "rule_id"
                      ],
                      "required": [
                        "rule_id"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Alert Management/Group View",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655799-run"
      }
    },
    "/alert/info": {
      "post": {
        "summary": "Alert Details",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Alert Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alert_id": {
                    "type": "string",
                    "title": "Alert ID"
                  }
                },
                "x-apifox-orders": [
                  "alert_id"
                ],
                "required": [
                  "alert_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Alert",
                      "x-apifox-overrides": {}
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Alert Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655788-run"
      }
    },
    "/alert/close": {
      "post": {
        "summary": "Close Alert",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Alert Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alert_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "x-apifox-orders": [
                  "alert_ids"
                ],
                "required": [
                  "alert_ids"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Alert Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655789-run"
      }
    },
    "/alert/list-by-card": {
      "post": {
        "summary": "Alert List - Card View",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Alert Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "view_id": {
                    "type": "string",
                    "title": "View ID"
                  },
                  "progress": {
                    "type": "string",
                    "title": "Processing status",
                    "description": "Triggered,Closed\nAll (progress not provided)\nOpen (progress=Triggered)\nClosed (progress=Closed)"
                  },
                  "title": {
                    "type": "string",
                    "title": "Title filter",
                    "description": "Supports exact match, regex match and wildcard match. String with '/' prefix and suffix will be treated as regex. Example: specifying ('datacenter' IN ['bj01','sh-*','']) AND ('host' IN '/api-server-\\d+/') will match alerts from data centers 'bj01' and 'sh-01','sh-02' with hostname matching regex 'api-server-\\d+'"
                  },
                  "channel_id": {
                    "type": "integer",
                    "title": "channel ID"
                  },
                  "data_source_id": {
                    "type": "integer",
                    "title": "Integration ID"
                  },
                  "start_time": {
                    "type": "integer",
                    "title": "Start timestamp",
                    "description": "This time is query's start_time, not related to alert's start_time. Actual search condition is: alert.start_time<=query.end_time and alert.last_time>=query.start_time"
                  },
                  "end_time": {
                    "type": "integer",
                    "title": "End time",
                    "description": "This time is query's end_time, not related to alert's end_time. Actual search condition is: alert.start_time<=query.end_time and alert.last_time>=query.start_time"
                  },
                  "alert_severity": {
                    "type": "string",
                    "title": "Severity",
                    "description": "Critical, Info, Warning supports multiple values, comma separated"
                  },
                  "is_my_channel": {
                    "type": "boolean",
                    "title": "My channels only",
                    "description": "Only filter alerts from channels related to me"
                  },
                  "ever_muted": {
                    "type": "boolean",
                    "description": "Not provided means query all, true means only return silenced or inhibited alerts, false means only return alerts never inhibited",
                    "title": "Whether has been silenced/inhibited"
                  },
                  "labels": {
                    "title": "Label list",
                    "$ref": "#/components/schemas/Labels",
                    "x-apifox-overrides": {}
                  }
                },
                "x-apifox-orders": [
                  "view_id",
                  "progress",
                  "title",
                  "channel_id",
                  "data_source_id",
                  "start_time",
                  "end_time",
                  "alert_severity",
                  "is_my_channel",
                  "ever_muted",
                  "labels"
                ],
                "x-apifox-refs": {},
                "required": [
                  "start_time",
                  "end_time",
                  "labels",
                  "view_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "title": "Card name"
                              },
                              "total": {
                                "type": "integer",
                                "title": "Alert count"
                              },
                              "alert_severity": {
                                "type": "string",
                                "title": "Highest severity"
                              },
                              "alert_ids": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "title": "Alert ID"
                              }
                            },
                            "x-apifox-orders": [
                              "title",
                              "total",
                              "alert_severity",
                              "alert_ids"
                            ],
                            "required": [
                              "title",
                              "alert_ids",
                              "alert_severity",
                              "total"
                            ],
                            "x-apifox-ignore-properties": []
                          },
                          "description": "<span style=\"color: red;\">Note: Only returns 100 items when matches exceed 100</span>"
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "required": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Alert Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655790-run"
      }
    },
    "/alert/list": {
      "post": {
        "summary": "Alert List",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Alert Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "search_after_ctx": {
                    "type": "string",
                    "title": "Cursor pagination, defaults to first page if not set. Choose one between this and p parameter",
                    "description": "For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)"
                  },
                  "p": {
                    "type": "integer",
                    "title": "Traditional pagination, starts from page 1 if not set, default value is 1. Choose one between this and search_after_ctx parameter",
                    "description": "When using traditional pagination, <span style=\"color: red;\">p*limit must not exceed 10000</span> when p parameter is set, otherwise returns parameter error. For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)",
                    "default": 1
                  },
                  "limit": {
                    "type": "integer",
                    "title": "Items per page",
                    "description": "<span style=\"color: red;\">When p parameter is set, (p-1)*limit must not exceed 10000</span>, otherwise returns parameter error. For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)",
                    "maximum": 100,
                    "minimum": 0,
                    "default": 20
                  },
                  "asc": {
                    "title": "Ascending order",
                    "type": "boolean",
                    "description": "Default sort by created_at in descending order"
                  },
                  "orderby": {
                    "type": "string",
                    "title": "Sort field",
                    "description": "Supports created_at updated_at, default is created_at"
                  },
                  "title": {
                    "type": "string",
                    "title": "Title filter",
                    "description": "Supports exact match, regex match and wildcard match. String with '/' prefix and suffix will be treated as regex. Example: specifying ('datacenter' IN ['bj01','sh-*','']) AND ('host' IN '/api-server-\\d+/') will match alerts from data centers 'bj01' and 'sh-01','sh-02' with hostname matching regex 'api-server-\\d+'"
                  },
                  "progress": {
                    "type": "string",
                    "title": "Processing status",
                    "description": "Triggered,Closed\nAll (progress not provided)\nOpen (progress=Triggered)\nClosed (progress=Closed)"
                  },
                  "alert_severity": {
                    "type": "string",
                    "title": "Severity",
                    "description": "Critical, Info, Warning supports multiple values, comma separated"
                  },
                  "labels": {
                    "title": "Label list",
                    "$ref": "#/components/schemas/Labels",
                    "x-apifox-overrides": {}
                  },
                  "channel_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Channel list"
                  },
                  "data_source_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Integration source list"
                  },
                  "alert_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Alert ID list"
                  },
                  "ever_muted": {
                    "type": "boolean",
                    "title": "Whether has been silenced/inhibited",
                    "description": "Not provided means query all, true means only return silenced or inhibited alerts, false means only return alerts never inhibited"
                  },
                  "start_time": {
                    "type": "integer",
                    "title": "Start timestamp",
                    "description": "This time is query's start_time, not related to alert's start_time. Actual search condition is: alert.start_time<=query.end_time and alert.last_time>=query.start_time"
                  },
                  "end_time": {
                    "type": "integer",
                    "title": "End time",
                    "description": "This time is query's end_time, not related to alert's end_time. Actual search condition is: alert.start_time<=query.end_time and alert.last_time>=query.start_time"
                  }
                },
                "x-apifox-orders": [
                  "01H4JXSEHEEY9RF5ETJ4KMR0WY",
                  "asc",
                  "orderby",
                  "title",
                  "progress",
                  "alert_severity",
                  "labels",
                  "channel_ids",
                  "data_source_ids",
                  "alert_ids",
                  "ever_muted",
                  "start_time",
                  "end_time"
                ],
                "x-apifox-refs": {
                  "01H4JXSEHEEY9RF5ETJ4KMR0WY": {
                    "$ref": "#/components/schemas/MixedPagination"
                  }
                },
                "required": [
                  "start_time",
                  "end_time",
                  "alert_ids"
                ],
                "x-apifox-ignore-properties": [
                  "search_after_ctx",
                  "p",
                  "limit"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Alert",
                            "x-apifox-overrides": {}
                          },
                          "title": "Alert entry"
                        },
                        "search_after_ctx": {
                          "type": "string",
                          "title": "Cursor pagination, presence indicates next page exists",
                          "description": "For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)"
                        },
                        "total": {
                          "type": "integer",
                          "title": "Total matching entries",
                          "description": "Please note, <span style=\"color: red;\">total is only accurate when less than 1000, do not use this value to calculate pagination end.</span> When total entries exceed 1000, system will only return total=1000, indicating 1000+ matches found. Please use has_next_page to determine if more data exists. For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)"
                        },
                        "has_next_page": {
                          "type": "boolean",
                          "title": "Whether more unretreived data exists"
                        }
                      },
                      "x-apifox-orders": [
                        "items",
                        "01HK4S75CFMEEWAZ8FVSM4DSJE"
                      ],
                      "x-apifox-refs": {
                        "01HK4S75CFMEEWAZ8FVSM4DSJE": {
                          "$ref": "#/components/schemas/MixedPageout"
                        }
                      },
                      "x-apifox-ignore-properties": [
                        "search_after_ctx",
                        "total",
                        "has_next_page"
                      ]
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Alert Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655791-run"
      }
    },
    "/alert/list-by-ids": {
      "post": {
        "summary": "Alert List - Query by ID",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Alert Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alert_ids": {
                    "title": "Alert ID list",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "x-apifox-orders": [
                  "alert_ids"
                ],
                "x-apifox-refs": {},
                "required": [
                  "alert_ids"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Alert",
                            "x-apifox-overrides": {}
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "required": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Alert Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655792-run"
      }
    },
    "/alert/event/list": {
      "post": {
        "summary": "Associated Event List",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Alert Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alert_id": {
                    "type": "string",
                    "title": "Alert ID"
                  }
                },
                "x-apifox-orders": [
                  "alert_id"
                ],
                "x-apifox-refs": {},
                "required": [
                  "alert_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/AlertEvent",
                            "x-apifox-overrides": {}
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "required": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Alert Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655793-run"
      }
    },
    "/alert/feed": {
      "post": {
        "summary": "Timeline",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Alert Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alert_id": {
                    "title": "Alert ID",
                    "type": "string"
                  },
                  "p": {
                    "type": "integer",
                    "title": "Page number, starts from 1"
                  },
                  "limit": {
                    "type": "integer",
                    "title": "Items per page"
                  },
                  "asc": {
                    "title": "Ascending order",
                    "type": "boolean"
                  },
                  "types": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "a_new",
                        "a_update",
                        "a_close",
                        "a_comm",
                        "a_merge",
                        "a_m_silence",
                        "a_m_inhibit"
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "a_new": "Alert.Trigger",
                          "a_update": "Alert.Update",
                          "a_close": "Alert.Close",
                          "a_comm": "Alert.Comment",
                          "a_merge": "Alert.Merge",
                          "a_m_silence": "Alert.Silence",
                          "a_m_inhibit": "Alert.Inhibit"
                        }
                      }
                    },
                    "title": "Record type"
                  }
                },
                "x-apifox-orders": [
                  "alert_id",
                  "01H4JY12M5TS0WEZ1FK4EVSW8G",
                  "types"
                ],
                "x-apifox-refs": {
                  "01H4JY12M5TS0WEZ1FK4EVSW8G": {
                    "$ref": "#/components/schemas/PageQuery"
                  }
                },
                "x-apifox-ignore-properties": [
                  "p",
                  "limit",
                  "asc"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/AlertAction"
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "required": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Alert Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655794-run"
      }
    },
    "/alert/merge": {
      "post": {
        "summary": "Merge into Incident",
        "deprecated": false,
        "description": "This interface only handles merging into an existing incident. For creating new incidents, please use the 'Create Incident' interface in Incident Management",
        "tags": [
          "Flashduty/Open API/Alert Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alert_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Alert list"
                  },
                  "incident_id": {
                    "type": "string",
                    "title": "Incident ID"
                  },
                  "comment": {
                    "type": "string",
                    "title": "Comment"
                  },
                  "title": {
                    "type": "string",
                    "title": "New title"
                  }
                },
                "x-apifox-orders": [
                  "alert_ids",
                  "incident_id",
                  "comment",
                  "title"
                ],
                "required": [
                  "alert_ids",
                  "incident_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "x-apifox-overrides": {},
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-refs": {},
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Alert Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655795-run"
      }
    },
    "/change/list": {
      "post": {
        "summary": "Change List",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Change Management"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "p": {
                    "type": "integer",
                    "title": "Page number, starts from 1"
                  },
                  "limit": {
                    "type": "integer",
                    "title": "Items per page"
                  },
                  "asc": {
                    "title": "Ascending order",
                    "type": "boolean"
                  },
                  "start_time": {
                    "type": "integer",
                    "title": "Start timestamp"
                  },
                  "end_time": {
                    "type": "integer",
                    "title": "End time"
                  },
                  "filters": {
                    "title": "Matching conditions",
                    "$ref": "#/components/schemas/OrFilters"
                  },
                  "include_events": {
                    "type": "boolean",
                    "title": "Whether to return events simultaneously"
                  }
                },
                "x-apifox-orders": [
                  "01GBYHXVBN2F8GQR8A3GSHFWN9",
                  "start_time",
                  "end_time",
                  "filters",
                  "include_events"
                ],
                "x-apifox-refs": {
                  "01GBYHXVBN2F8GQR8A3GSHFWN9": {
                    "$ref": "#/components/schemas/PageQuery"
                  }
                },
                "required": [
                  "start_time",
                  "end_time"
                ],
                "x-apifox-ignore-properties": [
                  "p",
                  "limit",
                  "asc"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Change"
                          },
                          "title": "Change entry"
                        },
                        "has_next_page": {
                          "type": "boolean",
                          "title": "Has next page"
                        },
                        "total": {
                          "type": "integer",
                          "title": "Total entries"
                        }
                      },
                      "x-apifox-orders": [
                        "items",
                        "has_next_page",
                        "total"
                      ],
                      "required": [
                        "items",
                        "has_next_page",
                        "total"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Change Management",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655800-run"
      }
    },
    "/report/oncall/person": {
      "post": {
        "summary": "Personal Metrics",
        "deprecated": false,
        "description": "Maximum time span supported is 6 months",
        "tags": [
          "Flashduty/Open API/Insights"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "person_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Member list",
                    "maxItems": 20,
                    "minItems": 1
                  },
                  "start_time": {
                    "type": "integer",
                    "title": "Start timestamp"
                  },
                  "end_time": {
                    "type": "integer",
                    "title": "End timestamp"
                  },
                  "incident_severities": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Critical",
                        "Warning",
                        "Info"
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "Critical": "Critical",
                          "Warning": "Warning",
                          "Info": "Info"
                        }
                      }
                    },
                    "title": "Severity list"
                  }
                },
                "x-apifox-orders": [
                  "person_ids",
                  "start_time",
                  "end_time",
                  "incident_severities"
                ],
                "required": [
                  "end_time",
                  "start_time",
                  "person_ids"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "person_id": {
                                "title": "Member ID",
                                "type": "integer"
                              },
                              "person_name": {
                                "type": "string",
                                "title": "Member nickname"
                              },
                              "assigned_incident_cnt": {
                                "type": "integer",
                                "title": "Number of assigned incidents"
                              },
                              "acked_incident_cnt": {
                                "type": "integer",
                                "title": "Number of acknowledged incidents"
                              },
                              "closed_incident_cnt": {
                                "type": "integer",
                                "title": "Number of closed incidents"
                              },
                              "mtta": {
                                "type": "number",
                                "title": "Average acknowledgment time in seconds"
                              },
                              "mttr": {
                                "type": "number",
                                "title": "Average resolution time in seconds"
                              }
                            },
                            "x-apifox-orders": [
                              "person_id",
                              "person_name",
                              "assigned_incident_cnt",
                              "acked_incident_cnt",
                              "closed_incident_cnt",
                              "mtta",
                              "mttr"
                            ],
                            "required": [
                              "person_id",
                              "assigned_incident_cnt",
                              "mtta",
                              "closed_incident_cnt",
                              "acked_incident_cnt",
                              "mttr",
                              "person_name"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "required": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Insights",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110674710-run"
      }
    },
    "/report/oncall/notifications": {
      "post": {
        "summary": "Notification Count",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Insights"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Channel list",
                    "description": "Empty means query all"
                  },
                  "step": {
                    "type": "string",
                    "title": "Statistics cycle",
                    "description": "Day, Week, Month",
                    "enum": [
                      "day",
                      "week",
                      "month"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "day": "Day",
                        "week": "Week",
                        "month": "Month"
                      }
                    }
                  },
                  "start_time": {
                    "type": "integer",
                    "title": "Start timestamp"
                  },
                  "end_time": {
                    "type": "integer",
                    "title": "End timestamp"
                  }
                },
                "x-apifox-orders": [
                  "channel_ids",
                  "step",
                  "start_time",
                  "end_time"
                ],
                "required": [
                  "step",
                  "start_time",
                  "end_time"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ts": {
                                "title": "Timestamp",
                                "type": "integer",
                                "description": "end_time for each cycle"
                              },
                              "sms_cnt": {
                                "type": "integer",
                                "title": "SMS count"
                              },
                              "voice_cnt": {
                                "type": "integer",
                                "title": "Voice count"
                              },
                              "email_cnt": {
                                "type": "integer",
                                "title": "Email count"
                              }
                            },
                            "x-apifox-orders": [
                              "ts",
                              "sms_cnt",
                              "voice_cnt",
                              "email_cnt"
                            ],
                            "required": [
                              "ts",
                              "sms_cnt",
                              "email_cnt",
                              "voice_cnt"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "required": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Insights",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655801-run"
      }
    },
    "/report/oncall/changes": {
      "post": {
        "summary": "Change Count",
        "deprecated": false,
        "description": "Maximum time span supported is 6 months",
        "tags": [
          "Flashduty/Open API/Insights"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "step": {
                    "type": "string",
                    "title": "Statistics cycle",
                    "description": "Day, Week, Month",
                    "enum": [
                      "day",
                      "week",
                      "month"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "day": "Day",
                        "week": "Week",
                        "month": "Month"
                      }
                    }
                  },
                  "start_time": {
                    "type": "integer",
                    "title": "Start timestamp"
                  },
                  "end_time": {
                    "type": "integer",
                    "title": "End timestamp"
                  }
                },
                "x-apifox-orders": [
                  "step",
                  "start_time",
                  "end_time"
                ],
                "required": [
                  "step",
                  "end_time",
                  "start_time"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ts": {
                                "title": "Timestamp",
                                "type": "integer",
                                "description": "end_time for each cycle"
                              },
                              "change_cnt": {
                                "type": "integer",
                                "title": "Change count"
                              },
                              "change_event_cnt": {
                                "type": "integer",
                                "title": "Change event count"
                              }
                            },
                            "x-apifox-orders": [
                              "ts",
                              "change_cnt",
                              "change_event_cnt"
                            ],
                            "required": [
                              "ts",
                              "change_cnt",
                              "change_event_cnt"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "required": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Insights",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655802-run"
      }
    },
    "/report/oncall/alert/check/top": {
      "post": {
        "summary": "Alert Check Item TOP",
        "deprecated": false,
        "description": "Supports maximum 30 days data aggregation",
        "tags": [
          "Flashduty/Open API/Insights"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Channel list",
                    "description": "Empty means query all"
                  },
                  "start_time": {
                    "type": "integer",
                    "title": "Start timestamp"
                  },
                  "end_time": {
                    "type": "integer",
                    "title": "End timestamp"
                  },
                  "k": {
                    "type": "integer",
                    "title": "Return count, 1~20",
                    "minimum": 1,
                    "maximum": 20,
                    "default": 20
                  }
                },
                "x-apifox-orders": [
                  "channel_ids",
                  "start_time",
                  "end_time",
                  "k"
                ],
                "required": [
                  "end_time",
                  "start_time",
                  "k"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "check": {
                                "title": "Check item",
                                "type": "string"
                              },
                              "cnt": {
                                "type": "number",
                                "title": "Count"
                              }
                            },
                            "x-apifox-orders": [
                              "check",
                              "cnt"
                            ],
                            "required": [
                              "check",
                              "cnt"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "required": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Insights",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655803-run"
      }
    },
    "/report/oncall/trend": {
      "post": {
        "summary": "Trend Data",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Insights"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Channel list",
                    "description": "Empty means query all"
                  }
                },
                "x-apifox-orders": [
                  "channel_ids"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "incident_mttr_past_1st_week": {
                          "title": "MTTR for incidents in the first week of the past",
                          "type": "integer"
                        },
                        "incident_mttr_past_2nd_week": {
                          "title": "MTTR for incidents in the second week of the past",
                          "type": "integer"
                        },
                        "incident_mtta_past_1st_week": {
                          "type": "integer",
                          "title": "MTTA for incidents in the first week of the past"
                        },
                        "incident_mtta_past_2nd_week": {
                          "type": "integer",
                          "title": "MTTA for incidents in the second week of the past"
                        },
                        "incident_cnt_past_1st_week": {
                          "type": "integer",
                          "title": "Number of incidents in the first week of the past"
                        },
                        "incident_cnt_past_2nd_week": {
                          "type": "integer",
                          "title": "Number of incidents in the second week of the past"
                        },
                        "incident_auto_cnt_past_1st_week": {
                          "type": "integer",
                          "title": "Number of auto-created incidents in the first week of the past"
                        },
                        "incident_auto_cnt_past_2nd_week": {
                          "type": "integer",
                          "title": "Number of auto-created incidents in the second week of the past"
                        },
                        "incident_acked_cnt_past_1st_week": {
                          "type": "integer",
                          "title": "Number of acknowledged incidents in the first week of the past"
                        },
                        "incident_acked_cnt_past_2nd_week": {
                          "type": "integer",
                          "title": "Number of acknowledged incidents in the second week of the past"
                        },
                        "alert_cnt_past_1st_week": {
                          "title": "Number of alerts in the first week of the past",
                          "type": "integer"
                        },
                        "alert_cnt_past_2nd_week": {
                          "title": "Number of alerts in the second week of the past",
                          "type": "integer"
                        },
                        "alert_event_cnt_past_1st_week": {
                          "type": "integer",
                          "title": "Number of alert events in the first week of the past"
                        },
                        "alert_event_cnt_past_2nd_week": {
                          "type": "integer",
                          "title": "Number of alert events in the second week of the past"
                        }
                      },
                      "x-apifox-orders": [
                        "incident_mttr_past_1st_week",
                        "incident_mttr_past_2nd_week",
                        "incident_mtta_past_1st_week",
                        "incident_mtta_past_2nd_week",
                        "incident_cnt_past_1st_week",
                        "incident_cnt_past_2nd_week",
                        "incident_auto_cnt_past_1st_week",
                        "incident_auto_cnt_past_2nd_week",
                        "incident_acked_cnt_past_1st_week",
                        "incident_acked_cnt_past_2nd_week",
                        "alert_cnt_past_1st_week",
                        "alert_cnt_past_2nd_week",
                        "alert_event_cnt_past_1st_week",
                        "alert_event_cnt_past_2nd_week"
                      ],
                      "required": [
                        "alert_cnt_past_2nd_week",
                        "alert_cnt_past_1st_week",
                        "incident_mttr_past_2nd_week",
                        "incident_mttr_past_1st_week",
                        "alert_event_cnt_past_1st_week",
                        "alert_event_cnt_past_2nd_week",
                        "incident_mtta_past_2nd_week",
                        "incident_mtta_past_1st_week",
                        "incident_cnt_past_2nd_week",
                        "incident_cnt_past_1st_week",
                        "incident_acked_cnt_past_2nd_week",
                        "incident_acked_cnt_past_1st_week",
                        "incident_auto_cnt_past_1st_week",
                        "incident_auto_cnt_past_2nd_week"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Insights",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655804-run"
      }
    },
    "/report/oncall/incident/mtta": {
      "post": {
        "summary": "Incident MTTA",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Insights"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start_time": {
                    "type": "integer",
                    "title": "Start timestamp"
                  },
                  "end_time": {
                    "type": "string",
                    "title": "End timestamp"
                  },
                  "step": {
                    "type": "string",
                    "title": "Statistics cycle",
                    "description": "Day, Week, Month, supports maximum 31 points",
                    "enum": [
                      "day",
                      "week",
                      "month"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "day": "Day",
                        "week": "Week",
                        "month": "Month"
                      }
                    }
                  },
                  "channel_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Channel ID"
                  },
                  "team_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Team ID"
                  },
                  "incident_severities": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Severity list",
                    "description": "Empty means query all"
                  }
                },
                "x-apifox-orders": [
                  "start_time",
                  "end_time",
                  "step",
                  "channel_ids",
                  "team_ids",
                  "incident_severities"
                ],
                "required": [
                  "start_time",
                  "end_time",
                  "step"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ts": {
                                "type": "integer",
                                "title": "Timestamp"
                              },
                              "mtta": {
                                "type": "number",
                                "title": "Average acknowledgment time in seconds"
                              }
                            },
                            "x-apifox-orders": [
                              "ts",
                              "mtta"
                            ],
                            "required": [
                              "ts",
                              "mtta"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "required": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Insights",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655805-run"
      }
    },
    "/report/oncall/incident/mttr": {
      "post": {
        "summary": "Incident MTTR",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Insights"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start_time": {
                    "type": "integer",
                    "title": "Start timestamp"
                  },
                  "end_time": {
                    "type": "string",
                    "title": "End timestamp"
                  },
                  "step": {
                    "type": "string",
                    "title": "Statistics cycle",
                    "description": "Day, Week, Month, supports maximum 31 points",
                    "enum": [
                      "day",
                      "week",
                      "month"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "day": "Day",
                        "week": "Week",
                        "month": "Month"
                      }
                    }
                  },
                  "channel_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Channel ID"
                  },
                  "team_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Team ID"
                  },
                  "incident_severities": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Severity list",
                    "description": "Empty means query all"
                  }
                },
                "x-apifox-orders": [
                  "start_time",
                  "end_time",
                  "step",
                  "channel_ids",
                  "team_ids",
                  "incident_severities"
                ],
                "required": [
                  "start_time",
                  "end_time",
                  "step"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ts": {
                                "type": "integer",
                                "title": "Timestamp"
                              },
                              "mttr": {
                                "type": "number",
                                "title": "Average resolution time in seconds"
                              }
                            },
                            "x-apifox-orders": [
                              "ts",
                              "mttr"
                            ],
                            "required": [
                              "ts",
                              "mttr"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "required": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Insights",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655806-run"
      }
    },
    "/report/oncall/alert/resource/top": {
      "post": {
        "summary": "Alert Object TOP",
        "deprecated": false,
        "description": "Supports maximum 30 days data aggregation",
        "tags": [
          "Flashduty/Open API/Insights"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Channel list",
                    "description": "Empty means query all"
                  },
                  "start_time": {
                    "type": "integer",
                    "title": "Start timestamp"
                  },
                  "end_time": {
                    "type": "integer",
                    "title": "End timestamp"
                  },
                  "k": {
                    "type": "integer",
                    "default": 20,
                    "minimum": 1,
                    "maximum": 20,
                    "title": "Return count, 1~20"
                  }
                },
                "x-apifox-orders": [
                  "channel_ids",
                  "start_time",
                  "end_time",
                  "k"
                ],
                "required": [
                  "end_time",
                  "start_time"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "resource": {
                                "title": "Object",
                                "type": "string"
                              },
                              "cnt": {
                                "type": "number",
                                "title": "Count"
                              }
                            },
                            "x-apifox-orders": [
                              "resource",
                              "cnt"
                            ],
                            "required": [
                              "resource",
                              "cnt"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "required": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Insights",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655807-run"
      }
    },
    "/report/oncall/incidents": {
      "post": {
        "summary": "Incident Count",
        "deprecated": false,
        "description": "Maximum time span supported is 6 months",
        "tags": [
          "Flashduty/Open API/Insights"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Channel list",
                    "description": "Empty means query all, 0 means query global incidents, in this case alert and event counts will not be returned"
                  },
                  "step": {
                    "type": "string",
                    "title": "Statistics cycle",
                    "description": "Day, Week, Month",
                    "enum": [
                      "day",
                      "week",
                      "month"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "day": "Day",
                        "week": "Week",
                        "month": "Month"
                      }
                    }
                  },
                  "start_time": {
                    "type": "integer",
                    "title": "Start timestamp"
                  },
                  "end_time": {
                    "type": "integer",
                    "title": "End timestamp"
                  }
                },
                "x-apifox-orders": [
                  "channel_ids",
                  "step",
                  "start_time",
                  "end_time"
                ],
                "required": [
                  "step",
                  "end_time",
                  "start_time"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ts": {
                                "title": "Timestamp",
                                "type": "integer",
                                "description": "end_time for each cycle"
                              },
                              "alert_event_cnt": {
                                "type": "integer",
                                "title": "Alert event count"
                              },
                              "alert_cnt": {
                                "type": "integer",
                                "title": "Alert count"
                              },
                              "incident_cnt": {
                                "type": "string",
                                "title": "Incident count"
                              }
                            },
                            "x-apifox-orders": [
                              "ts",
                              "alert_event_cnt",
                              "alert_cnt",
                              "incident_cnt"
                            ],
                            "required": [
                              "ts",
                              "incident_cnt"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "items"
                      ],
                      "required": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Insights",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110655808-run"
      }
    },
    "/field/list": {
      "post": {
        "summary": "Field List",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Custom Fields"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "x-apifox-orders": [],
                "x-apifox-refs": {},
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Field"
                          }
                        }
                      },
                      "required": [
                        "items"
                      ],
                      "x-apifox-orders": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Custom Fields",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110681369-run"
      }
    },
    "/field/info": {
      "post": {
        "summary": "Field Details",
        "deprecated": false,
        "description": "See creation interface for filters description",
        "tags": [
          "Flashduty/Open API/Custom Fields"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "field_id": {
                    "type": "string",
                    "title": "Field ID"
                  }
                },
                "x-apifox-orders": [
                  "field_id"
                ],
                "required": [
                  "field_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Field"
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Custom Fields",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110681370-run"
      }
    },
    "/field/delete": {
      "post": {
        "summary": "Delete Field",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Custom Fields"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "field_id": {
                    "type": "string",
                    "title": "Field ID"
                  }
                },
                "x-apifox-orders": [
                  "field_id"
                ],
                "required": [
                  "field_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Custom Fields",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110681371-run"
      }
    },
    "/field/create": {
      "post": {
        "summary": "Create Field",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Custom Fields"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "field_name": {
                    "type": "string",
                    "title": "Field name",
                    "description": "Must match regex ^[a-zA-Z_][a-zA-Z0-9_]{0,39}$",
                    "maxLength": 40
                  },
                  "display_name": {
                    "type": "string",
                    "title": "Display name",
                    "maxLength": 40
                  },
                  "description": {
                    "type": "string",
                    "title": "Description",
                    "maxLength": 500
                  },
                  "field_type": {
                    "type": "string",
                    "title": "Field type",
                    "enum": [
                      "text",
                      "single_select",
                      "multi_select",
                      "checkbox"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "text": "Input box",
                        "single_select": "Single select",
                        "multi_select": "Multiple select",
                        "checkbox": "Checkbox"
                      }
                    }
                  },
                  "value_type": {
                    "type": "string",
                    "title": "Value type",
                    "enum": [
                      "string",
                      "bool"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "string": "String",
                        "bool": "Boolean"
                      }
                    }
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Optional values",
                    "description": "Array elements must be unique and type must match value_type definition"
                  },
                  "default_value": {
                    "type": "string"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "field_name",
                  "display_name",
                  "description",
                  "field_type",
                  "value_type",
                  "options",
                  "default_value"
                ],
                "required": [
                  "field_name",
                  "field_type",
                  "display_name",
                  "value_type"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "field_id": {
                          "type": "string",
                          "title": "ID"
                        },
                        "field_name": {
                          "type": "string",
                          "title": "Name"
                        }
                      },
                      "x-apifox-orders": [
                        "field_id",
                        "field_name"
                      ],
                      "required": [
                        "field_id",
                        "field_name"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Custom Fields",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110681372-run"
      }
    },
    "/field/update": {
      "post": {
        "summary": "Update Field",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Custom Fields"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "field_id": {
                    "type": "string",
                    "title": "Field ID"
                  },
                  "display_name": {
                    "type": "string",
                    "title": "Display name"
                  },
                  "description": {
                    "type": "string",
                    "title": "Description"
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Optional values",
                    "description": "Array elements must be unique and type must match value_type definition"
                  },
                  "default_value": {
                    "type": "string"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "field_id",
                  "display_name",
                  "description",
                  "options",
                  "default_value"
                ],
                "required": [
                  "field_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Custom Fields",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-110681373-run"
      }
    },
    "/calendar/list": {
      "post": {
        "summary": "Calendar List",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Service Calendar"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "enum": [
                      "personal",
                      "region.official.holiday"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "personal": "Tenant calendar, not public",
                        "region.official.holiday": "Regional statutory holidays"
                      }
                    },
                    "title": "Calendar type, defaults to personal, must be specified to get holidays"
                  }
                },
                "x-apifox-orders": [
                  "kind"
                ],
                "x-apifox-refs": {},
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-orders": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Calendar"
                          },
                          "title": "Channel entries"
                        },
                        "total": {
                          "type": "integer",
                          "title": "Total entries"
                        }
                      },
                      "required": [
                        "items",
                        "total"
                      ],
                      "x-apifox-orders": [
                        "items",
                        "total"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Service Calendar",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-131735967-run"
      }
    },
    "/calendar/event/list": {
      "post": {
        "summary": "Calendar Event List",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Service Calendar"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cal_id": {
                    "type": "string",
                    "title": "Calendar ID"
                  },
                  "year": {
                    "type": "integer",
                    "title": "Year",
                    "description": "Defaults to current year"
                  },
                  "month": {
                    "type": "integer",
                    "title": "Month",
                    "description": "Defaults to not set"
                  },
                  "day": {
                    "type": "integer",
                    "title": "Day",
                    "description": "Defaults to not set, must set month when setting this"
                  }
                },
                "x-apifox-orders": [
                  "cal_id",
                  "year",
                  "month",
                  "day"
                ],
                "x-apifox-refs": {},
                "required": [
                  "cal_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-orders": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CalendarEvent"
                          },
                          "title": "Channel entries"
                        },
                        "total": {
                          "type": "integer",
                          "title": "Total entries"
                        }
                      },
                      "required": [
                        "items",
                        "total"
                      ],
                      "x-apifox-orders": [
                        "items",
                        "total"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Service Calendar",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-132637492-run"
      }
    },
    "/calendar/info": {
      "post": {
        "summary": "Calendar Details",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Service Calendar"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cal_id": {
                    "type": "string",
                    "title": "Calendar ID",
                    "description": "Can only get details of personal type calendars"
                  }
                },
                "x-apifox-orders": [
                  "cal_id"
                ],
                "required": [
                  "cal_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Calendar"
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Service Calendar",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-131736015-run"
      }
    },
    "/calendar/create": {
      "post": {
        "summary": "Create Calendar",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Service Calendar"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "team_id": {
                    "type": "integer",
                    "title": "Team ID, if 0 means only creator and owner account can modify configuration"
                  },
                  "cal_name": {
                    "type": "string",
                    "title": "Calendar name, length limit [1,40] bytes",
                    "maxLength": 40
                  },
                  "description": {
                    "type": "string",
                    "title": "Calendar description, length limit [1,500] bytes",
                    "maxLength": 500
                  },
                  "timezone": {
                    "type": "string",
                    "title": "Calendar timezone, format requirement: must match timezone definition in IANA Time Zone Database",
                    "description": "Example value: \"Asia/Shanghai\" Default value: \"Asia/Shanghai\""
                  },
                  "workdays": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "0": "Sunday",
                          "1": "Monday",
                          "2": "Tuesday",
                          "3": "Wednesday",
                          "4": "Thursday",
                          "5": "Friday",
                          "6": "Saturday"
                        }
                      },
                      "description": "Sunday=0"
                    },
                    "title": "Working day list, empty list means all days are working days. Enum values 1,2,3,4,5,6,7 represent Monday to Sunday"
                  },
                  "extra_cal_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Associated calendar ID list, like mainland China statutory holidays"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "team_id",
                  "cal_name",
                  "description",
                  "timezone",
                  "workdays",
                  "extra_cal_ids"
                ],
                "required": [
                  "cal_name"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "cal_id": {
                          "type": "string",
                          "title": "Calendar ID"
                        },
                        "cal_name": {
                          "type": "string",
                          "title": "Calendar name"
                        }
                      },
                      "x-apifox-orders": [
                        "cal_id",
                        "cal_name"
                      ],
                      "required": [
                        "cal_id",
                        "cal_name"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Service Calendar",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-131736047-run"
      }
    },
    "/calendar/event/upsert": {
      "post": {
        "summary": "Set Calendar Event",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Service Calendar"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cal_id": {
                    "type": "string",
                    "title": "Calendar ID"
                  },
                  "event_id": {
                    "type": "string",
                    "title": "Event ID",
                    "description": "Required when updating"
                  },
                  "summary": {
                    "type": "string",
                    "title": "Calendar name, length limit [1,40] bytes",
                    "maxLength": 40,
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "title": "Calendar description, length limit [1,500] bytes",
                    "maxLength": 500
                  },
                  "is_off": {
                    "type": "boolean",
                    "title": "Is rest day, false means working day"
                  },
                  "start_at": {
                    "type": "string",
                    "title": "Start time",
                    "description": "Example value: \"2018-09-01\""
                  },
                  "end_at": {
                    "type": "string",
                    "title": "End time",
                    "description": "Example value: \"2018-09-02\""
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "cal_id",
                  "event_id",
                  "summary",
                  "description",
                  "is_off",
                  "start_at",
                  "end_at"
                ],
                "required": [
                  "start_at",
                  "summary",
                  "cal_id",
                  "end_at",
                  "is_off"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "cal_id": {
                          "type": "string",
                          "title": "Calendar ID"
                        },
                        "cal_name": {
                          "type": "string",
                          "title": "Calendar name"
                        }
                      },
                      "x-apifox-orders": [
                        "cal_id",
                        "cal_name"
                      ],
                      "required": [
                        "cal_id",
                        "cal_name"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Service Calendar",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-132636232-run"
      }
    },
    "/calendar/update": {
      "post": {
        "summary": "Update Calendar",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Service Calendar"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "team_id": {
                    "type": "integer",
                    "title": "Team ID, if 0 means only creator and owner account can modify configuration",
                    "description": "Not updated if not provided"
                  },
                  "cal_id": {
                    "type": "string",
                    "title": "Calendar ID"
                  },
                  "cal_name": {
                    "type": "string",
                    "title": "Calendar name, length limit [1,40] bytes",
                    "maxLength": 40,
                    "description": "Not updated if not provided"
                  },
                  "description": {
                    "type": "string",
                    "title": "Calendar description, length limit [1,500] bytes",
                    "maxLength": 500,
                    "description": "Not updated if not provided"
                  },
                  "timezone": {
                    "type": "string",
                    "title": "Calendar timezone, format requirement: must match timezone definition in IANA Time Zone Database",
                    "description": "Example value: \"Asia/Shanghai\" Default value: \"Asia/Shanghai\", not updated if not provided"
                  },
                  "workdays": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "Sunday=0",
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "0": "Sunday",
                          "1": "Monday",
                          "2": "Tuesday",
                          "3": "Wednesday",
                          "4": "Thursday",
                          "5": "Friday",
                          "6": "Saturday"
                        }
                      }
                    },
                    "title": "Working day list, empty list means all days are working days. Enum values 1,2,3,4,5,6,7 represent Monday to Sunday",
                    "description": "Not updated if not provided"
                  },
                  "extra_cal_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Associated calendar ID list, like mainland China statutory holidays",
                    "description": "Not updated if not provided"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "team_id",
                  "cal_id",
                  "cal_name",
                  "description",
                  "timezone",
                  "workdays",
                  "extra_cal_ids"
                ],
                "required": [
                  "cal_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Service Calendar",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-131736087-run"
      }
    },
    "/calendar/delete": {
      "post": {
        "summary": "Delete Calendar",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Service Calendar"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cal_id": {
                    "type": "string",
                    "title": "Calendar ID"
                  }
                },
                "x-apifox-orders": [
                  "cal_id"
                ],
                "required": [
                  "cal_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "refs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Reference"
                          },
                          "title": "Associated Resource List"
                        }
                      },
                      "x-apifox-orders": [
                        "refs"
                      ],
                      "required": [
                        "refs"
                      ],
                      "description": "Only exists when code=ReferenceExist",
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Service Calendar",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-131736148-run"
      }
    },
    "/calendar/event/delete": {
      "post": {
        "summary": "Delete Calendar Event",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Service Calendar"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cal_id": {
                    "type": "string",
                    "title": "Calendar ID"
                  },
                  "event_id": {
                    "type": "string",
                    "title": "Event ID"
                  }
                },
                "x-apifox-orders": [
                  "cal_id",
                  "event_id"
                ],
                "required": [
                  "cal_id",
                  "event_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Service Calendar",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-132637293-run"
      }
    },
    "/enrichment/mapping/schema/create": {
      "post": {
        "summary": "Create Schema",
        "deprecated": false,
        "description": "Each account is allowed to create maximum 10 schemas",
        "tags": [
          "Flashduty/Open API/Label Enhancement/Mapping"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schema_name": {
                    "type": "string",
                    "title": "Table name",
                    "maxLength": 40,
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "title": "Table description",
                    "maxLength": 500
                  },
                  "source_labels": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*",
                      "maxLength": 40,
                      "minLength": 1
                    },
                    "title": "Query field list",
                    "maxItems": 3,
                    "minItems": 1
                  },
                  "result_labels": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*",
                      "maxLength": 40,
                      "minLength": 1
                    },
                    "title": "Result field list",
                    "maxItems": 10,
                    "minItems": 1
                  },
                  "team_id": {
                    "type": "integer",
                    "title": "Team ID"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "schema_name",
                  "description",
                  "source_labels",
                  "result_labels",
                  "team_id"
                ],
                "required": [
                  "source_labels",
                  "result_labels",
                  "schema_name"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "schema_id": {
                          "type": "string",
                          "title": "schema id"
                        },
                        "schema_name": {
                          "type": "string",
                          "title": "Schema name"
                        }
                      },
                      "x-apifox-orders": [
                        "schema_id",
                        "schema_name"
                      ],
                      "required": [
                        "schema_id",
                        "schema_name"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "required": [
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Label Enhancement/Mapping",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-142409927-run"
      }
    },
    "/enrichment/mapping/schema/update": {
      "post": {
        "summary": "Update Schema",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Label Enhancement/Mapping"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schema_id": {
                    "type": "string",
                    "title": "Table ID"
                  },
                  "schema_name": {
                    "type": "string",
                    "title": "Table name",
                    "maxLength": 40,
                    "minLength": 1,
                    "description": "Not updated if not provided"
                  },
                  "description": {
                    "type": "string",
                    "title": "Table description",
                    "maxLength": 500,
                    "description": "Not updated if not provided"
                  },
                  "team_id": {
                    "type": "integer",
                    "title": "Team ID",
                    "description": "Not updated if not provided"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "schema_id",
                  "schema_name",
                  "description",
                  "team_id"
                ],
                "required": [
                  "schema_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Label Enhancement/Mapping",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-142429234-run"
      }
    },
    "/enrichment/mapping/schema/delete": {
      "post": {
        "summary": "Delete Schema",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Label Enhancement/Mapping"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schema_id": {
                    "type": "string",
                    "title": "Table ID"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "schema_id"
                ],
                "required": [
                  "schema_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Label Enhancement/Mapping",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-142429316-run"
      }
    },
    "/enrichment/mapping/data/upsert": {
      "post": {
        "summary": "Update Data",
        "deprecated": false,
        "description": "Each schema allows maximum 10,000 data entries",
        "tags": [
          "Flashduty/Open API/Label Enhancement/Mapping"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schema_id": {
                    "type": "string",
                    "title": "Table ID"
                  },
                  "docs": {
                    "type": "array",
                    "items": {
                      "title": "Label list",
                      "$ref": "#/components/schemas/Labels",
                      "x-apifox-overrides": {}
                    },
                    "title": "Rule list"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "schema_id",
                  "docs"
                ],
                "required": [
                  "docs",
                  "schema_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Label Enhancement/Mapping",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-142430971-run"
      }
    },
    "/enrichment/mapping/data/delete": {
      "post": {
        "summary": "Delete Data",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Label Enhancement/Mapping"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schema_id": {
                    "type": "string",
                    "title": "Integration ID"
                  },
                  "keys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Data index list"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "schema_id",
                  "keys"
                ],
                "required": [
                  "keys",
                  "schema_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Label Enhancement/Mapping",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-142430996-run"
      }
    },
    "/enrichment/mapping/data/truncate": {
      "post": {
        "summary": "Clear Data",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Label Enhancement/Mapping"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schema_id": {
                    "type": "string",
                    "title": "schema ID"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "schema_id"
                ],
                "required": [
                  "schema_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Label Enhancement/Mapping",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-145673295-run"
      }
    },
    "/enrichment/mapping/data/upload": {
      "post": {
        "summary": "Upload Data via CSV",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Label Enhancement/Mapping"
        ],
        "parameters": [
          {
            "name": "schema_id",
            "in": "query",
            "description": "schema ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "do_not_truncate_first",
            "in": "query",
            "description": "Whether to clear data first, defaults to clear",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "multipart/form-data",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "example": "",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Label Enhancement/Mapping",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-145679479-run"
      }
    },
    "/enrichment/mapping/data/download": {
      "post": {
        "summary": "Download Data as CSV",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Label Enhancement/Mapping"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schema_id": {
                    "type": "string",
                    "title": "schema ID"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "schema_id"
                ],
                "required": [
                  "schema_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Label Enhancement/Mapping",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-145730290-run"
      }
    },
    "/enrichment/mapping/data/list": {
      "post": {
        "summary": "Query Data",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Label Enhancement/Mapping"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schema_id": {
                    "type": "string",
                    "title": "schema ID"
                  },
                  "query": {
                    "title": "Label list",
                    "$ref": "#/components/schemas/Labels",
                    "x-apifox-overrides": {}
                  },
                  "search_after_ctx": {
                    "type": "string",
                    "title": "Cursor pagination, defaults to first page if not set. Choose one between this and p parameter",
                    "description": "For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)"
                  },
                  "p": {
                    "type": "integer",
                    "title": "Traditional pagination, starts from page 1 if not set, default value is 1. Choose one between this and search_after_ctx parameter",
                    "description": "When using traditional pagination, <span style=\"color: red;\">p*limit must not exceed 10000</span> when p parameter is set, otherwise returns parameter error. For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)",
                    "default": 1
                  },
                  "limit": {
                    "type": "integer",
                    "title": "Items per page",
                    "description": "<span style=\"color: red;\">When p parameter is set, (p-1)*limit must not exceed 10000</span>, otherwise returns parameter error. For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)",
                    "maximum": 100,
                    "minimum": 0,
                    "default": 20
                  }
                },
                "x-apifox-refs": {
                  "01HNA6E65G6QR3V12H2NNJKPX2": {
                    "$ref": "#/components/schemas/MixedPagination"
                  }
                },
                "x-apifox-orders": [
                  "schema_id",
                  "query",
                  "01HNA6E65G6QR3V12H2NNJKPX2"
                ],
                "required": [
                  "schema_id"
                ],
                "x-apifox-ignore-properties": [
                  "search_after_ctx",
                  "p",
                  "limit"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string",
                                "title": "Data index"
                              },
                              "fields": {
                                "title": "Label list",
                                "$ref": "#/components/schemas/Labels",
                                "x-apifox-overrides": {}
                              }
                            },
                            "x-apifox-orders": [
                              "key",
                              "fields"
                            ],
                            "required": [
                              "key",
                              "fields"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        },
                        "search_after_ctx": {
                          "type": "string",
                          "title": "Cursor pagination, presence indicates next page exists",
                          "description": "For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)"
                        },
                        "total": {
                          "type": "integer",
                          "title": "Total matching entries",
                          "description": "Please note, <span style=\"color: red;\">total is only accurate when less than 1000, do not use this value to calculate pagination end.</span> When total entries exceed 1000, system will only return total=1000, indicating 1000+ matches found. Please use has_next_page to determine if more data exists. For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)"
                        },
                        "has_next_page": {
                          "type": "boolean",
                          "title": "Whether more unretreived data exists"
                        }
                      },
                      "x-apifox-orders": [
                        "items",
                        "01HNA6N2TH0KQPYE08AJXD3XAQ"
                      ],
                      "required": [
                        "items"
                      ],
                      "x-apifox-refs": {
                        "01HNA6N2TH0KQPYE08AJXD3XAQ": {
                          "$ref": "#/components/schemas/MixedPageout"
                        }
                      },
                      "x-apifox-ignore-properties": [
                        "search_after_ctx",
                        "total",
                        "has_next_page"
                      ]
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "required": [
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Label Enhancement/Mapping",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-145674742-run"
      }
    },
    "/enrichment/mapping/schema/list": {
      "post": {
        "summary": "Query Schema",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Label Enhancement/Mapping"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "x-apifox-refs": {},
                "x-apifox-orders": [],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MappingSchema"
                          },
                          "title": "Entry list"
                        },
                        "total": {
                          "type": "integer",
                          "title": "Total entries"
                        }
                      },
                      "x-apifox-orders": [
                        "items",
                        "total"
                      ],
                      "required": [
                        "items",
                        "total"
                      ],
                      "title": "Response data",
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "required": [
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Label Enhancement/Mapping",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-142429470-run"
      }
    },
    "/enrichment/info": {
      "post": {
        "summary": "Rule Details",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Label Enhancement"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "integration_id": {
                    "type": "integer",
                    "title": "Integration ID"
                  }
                },
                "x-apifox-orders": [
                  "integration_id"
                ],
                "required": [
                  "integration_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Enrichment"
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Label Enhancement",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-142307781-run"
      }
    },
    "/enrichment/upsert": {
      "post": {
        "summary": "Update Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Label Enhancement"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "integration_id": {
                    "type": "integer",
                    "title": "Integration ID"
                  },
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "title": "Rule type",
                          "enum": [
                            "extraction",
                            "composition",
                            "mapping",
                            "drop"
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "extraction": "Extract",
                              "composition": "Compose",
                              "mapping": "Map",
                              "drop": "Delete"
                            }
                          }
                        },
                        "if": {
                          "$ref": "#/components/schemas/AndFilters",
                          "title": "Matching conditions"
                        },
                        "settings": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/ERuleExtraction"
                            },
                            {
                              "$ref": "#/components/schemas/ERuleComposition"
                            },
                            {
                              "$ref": "#/components/schemas/ERuleMapping"
                            },
                            {
                              "$ref": "#/components/schemas/ERuleDrop"
                            }
                          ]
                        }
                      },
                      "x-apifox-orders": [
                        "kind",
                        "if",
                        "settings"
                      ],
                      "required": [
                        "kind",
                        "settings"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "title": "Rule list",
                    "description": "Rules will be executed in order"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "integration_id",
                  "rules"
                ],
                "required": [
                  "rules",
                  "integration_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Label Enhancement",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-142307792-run"
      }
    },
    "/alert/pipeline/info": {
      "post": {
        "summary": "Rule Details",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Alert Processing"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "integration_id": {
                    "type": "integer",
                    "title": "Integration ID"
                  }
                },
                "x-apifox-orders": [
                  "integration_id"
                ],
                "required": [
                  "integration_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AlertProcessingRule"
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Alert Processing",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-201896909-run"
      }
    },
    "/alert/pipeline/upsert": {
      "post": {
        "summary": "Update Rule",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Alert Processing"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "integration_id": {
                    "type": "integer",
                    "title": "Integration ID"
                  },
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "title": "Rule type",
                          "description": "Rules will be executed in order",
                          "enum": [
                            "title_reset",
                            "description_reset",
                            "severity_reset",
                            "alert_drop",
                            "alert_inhibit"
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "title_reset": "Update title",
                              "description_reset": "Update description",
                              "severity_reset": "Update severity",
                              "alert_drop": "Alert filter",
                              "alert_inhibit": "Alert inhibit"
                            }
                          }
                        },
                        "if": {
                          "$ref": "#/components/schemas/AndFilters",
                          "title": "Matching conditions"
                        },
                        "settings": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/APRuleTitleReset"
                            },
                            {
                              "$ref": "#/components/schemas/APRuleDescriptionReset"
                            },
                            {
                              "$ref": "#/components/schemas/APRuleSeverityReset"
                            },
                            {
                              "$ref": "#/components/schemas/APRuleAlertDrop"
                            },
                            {
                              "$ref": "#/components/schemas/APRuleAlertInhibit"
                            }
                          ],
                          "title": "Rule configuration",
                          "description": "Different configurations for different rule types"
                        }
                      },
                      "x-apifox-orders": [
                        "kind",
                        "if",
                        "settings"
                      ],
                      "required": [
                        "kind",
                        "settings"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "title": "Rule list"
                  }
                },
                "x-apifox-orders": [
                  "integration_id",
                  "rules"
                ],
                "required": [
                  "rules",
                  "integration_id"
                ],
                "x-apifox-refs": {},
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Alert Processing",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-201896912-run"
      }
    },
    "/route/list": {
      "post": {
        "summary": "Route List",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Integration Routing"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "integration_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Shared alert integration ID list"
                  }
                },
                "x-apifox-orders": [
                  "integration_ids"
                ],
                "x-apifox-refs": {},
                "required": [
                  "integration_ids"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-ignore-properties": [],
                      "x-apifox-orders": []
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Route"
                          }
                        }
                      },
                      "required": [
                        "items"
                      ],
                      "x-apifox-orders": [
                        "items"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Integration Routing",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-147765935-run"
      }
    },
    "/route/info": {
      "post": {
        "summary": "Route Details",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Integration Routing"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "integration_id": {
                    "type": "integer",
                    "title": "Shared alert integration ID"
                  }
                },
                "x-apifox-orders": [
                  "integration_id"
                ],
                "required": [
                  "integration_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-ignore-properties": [],
                      "x-apifox-orders": []
                    },
                    "data": {
                      "$ref": "#/components/schemas/Route"
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Integration Routing",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-147765936-run"
      }
    },
    "/route/upsert": {
      "post": {
        "summary": "Update Route",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Integration Routing"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "integration_id": {
                    "type": "integer",
                    "title": "Shared alert integration ID"
                  },
                  "default": {
                    "type": "object",
                    "properties": {
                      "channel_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        },
                        "title": "Channel list"
                      }
                    },
                    "title": "Default route",
                    "x-apifox-orders": [
                      "channel_ids"
                    ],
                    "required": [
                      "channel_ids"
                    ],
                    "description": "Must provide either this or conditional route",
                    "x-apifox-ignore-properties": []
                  },
                  "cases": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RouteCase"
                    },
                    "title": "Conditional route",
                    "description": "Must provide either this or default route"
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "integration_id",
                  "default",
                  "cases"
                ],
                "required": [
                  "integration_id"
                ],
                "x-apifox-ignore-properties": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-ignore-properties": [],
                      "x-apifox-orders": []
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Integration Routing",
        "x-apifox-status": "released",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-147765937-run"
      }
    },
    "/resource/transfer/license": {
      "post": {
        "summary": "Transfer License",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/License Management"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "person_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "person_id"
                ],
                "x-apifox-orders": [
                  "person_id"
                ],
                "x-apifox-refs": {},
                "x-apifox-ignore-properties": []
              },
              "example": {
                "person_id": 33579933921311
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/License Management",
        "x-apifox-status": "developing",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-187718930-run"
      }
    },
    "/insight/incident/metrics/team": {
      "post": {
        "summary": "Incident Metrics - Team Dimension",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Insights (New)"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start_time": {
                    "type": "integer",
                    "title": "Start time",
                    "description": "Timestamp in seconds, incident trigger time must be greater than this"
                  },
                  "end_time": {
                    "type": "integer",
                    "title": "End time",
                    "description": "Timestamp in seconds, incident trigger time must be less than or equal to this. Maximum time span is 6 months, if aggregate_unit is day, maximum time span is 31 days."
                  },
                  "team_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Team ID list"
                  },
                  "channel_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Channel ID list"
                  },
                  "severities": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Info",
                        "Warning",
                        "Critical"
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "Info": "Info",
                          "Warning": "Warning",
                          "Critical": "Critical"
                        }
                      }
                    },
                    "title": "Severity"
                  },
                  "time_zone": {
                    "type": "string",
                    "title": "Default timezone Asia/Shanghai, used for results and grouping timezone. Must be in tzdata format. Please refer to [this list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) for acceptable values.",
                    "description": "Timezone"
                  },
                  "order_by": {
                    "type": "string",
                    "title": "Sort field",
                    "description": "Sort field, continuously adding",
                    "enum": [
                      "total_incident_cnt",
                      "total_engaged_seconds",
                      "total_incidents_acknowledged",
                      "total_incidents_closed",
                      "total_incidents_auto_closed",
                      "total_incidents_timeout_closed",
                      "total_incidents_escalated",
                      "total_incidents_manually_escalated",
                      "total_incidents_timeout_escalated",
                      "total_incidents_reassigned",
                      "mean_seconds_to_engage",
                      "mean_seconds_to_first_acknowledge",
                      "mean_seconds_to_close",
                      "mean_noise_reduction_pct",
                      "mean_acknowledgement_pct"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "total_incident_cnt": "Incident count",
                        "total_engaged_seconds": "Total incident processing time",
                        "total_incidents_acknowledged": "Acknowledged incident count",
                        "total_incidents_closed": "Closed incident count",
                        "total_incidents_auto_closed": "Auto-recovered incident count",
                        "total_incidents_timeout_closed": "Timeout closed incident count",
                        "total_incidents_escalated": "Escalated incident count",
                        "total_incidents_manually_escalated": "Manually escalated incident count",
                        "total_incidents_timeout_escalated": "Timeout escalated incident count",
                        "total_incidents_reassigned": "Reassigned incident count",
                        "mean_seconds_to_engage": "Average incident processing time",
                        "mean_seconds_to_first_acknowledge": "Average incident acknowledgment time",
                        "mean_seconds_to_close": "Average incident closure time",
                        "mean_noise_reduction_pct": "Noise reduction ratio",
                        "mean_acknowledgement_pct": "Response ratio"
                      }
                    }
                  },
                  "asc": {
                    "type": "boolean",
                    "title": "Ascending order",
                    "description": "Result sort order; true means ascending, false means descending, default is descending."
                  },
                  "aggregate_unit": {
                    "type": "string",
                    "title": "Data granularity",
                    "enum": [
                      "day",
                      "week",
                      "month"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "day": "Day",
                        "week": "Week",
                        "month": "Month"
                      }
                    },
                    "description": "Time unit for aggregating metrics. If no value provided, metrics will be aggregated for the entire period.",
                    "nullable": true
                  },
                  "split_hours": {
                    "type": "string",
                    "title": "Whether to distinguish time",
                    "description": "If yes, metrics will be aggregated by work time, rest time and sleep time"
                  }
                },
                "x-apifox-orders": [
                  "01J7CYPVNHSFP9GVXVPRZK0KN3",
                  "order_by",
                  "asc",
                  "aggregate_unit",
                  "split_hours"
                ],
                "x-apifox-refs": {
                  "01J7CYPVNHSFP9GVXVPRZK0KN3": {
                    "$ref": "#/components/schemas/InsightInput"
                  }
                },
                "required": [
                  "start_time",
                  "end_time"
                ],
                "x-apifox-ignore-properties": [
                  "start_time",
                  "end_time",
                  "team_ids",
                  "channel_ids",
                  "severities",
                  "time_zone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-apifox-refs": {
                          "01J7JP20VQNZBHRC6YA76F8PAN": {
                            "$ref": "#/components/schemas/InsightIncidentMetrics",
                            "x-apifox-overrides": {}
                          },
                          "01J7JP20VQMATAGHHKZ8E87KG2": {
                            "$ref": "#/components/schemas/InsightAlertMetrics"
                          },
                          "01J7JP2A8BRMPC8EBXV9NVPW3T": {
                            "$ref": "#/components/schemas/insightNotificationMetrics"
                          }
                        },
                        "properties": {
                          "total_engaged_seconds": {
                            "type": "integer",
                            "description": "Total time spent by responders participating in incident processing. One person's processing time is the time difference from acknowledgment to incident closure (close_time-ack_time), may include snooze time. If no one acknowledges, this value is 0.",
                            "title": "Total responder response time"
                          },
                          "total_incident_cnt": {
                            "type": "integer",
                            "description": "Triggered incident count",
                            "title": "Triggered incident count"
                          },
                          "total_incidents_acknowledged": {
                            "type": "integer",
                            "description": "Acknowledged incident count",
                            "title": "Acknowledged incident count"
                          },
                          "total_incidents_closed": {
                            "type": "integer",
                            "description": "Closed incident count",
                            "title": "Closed incident count"
                          },
                          "total_incidents_auto_closed": {
                            "type": "integer",
                            "description": "Auto-recovered incident count",
                            "title": "Auto-recovered incident count"
                          },
                          "total_incidents_manually_closed": {
                            "type": "integer",
                            "description": "Manually closed incident count",
                            "title": "Manually closed incident count"
                          },
                          "total_incidents_timeout_closed": {
                            "type": "integer",
                            "description": "Timeout closed incident count",
                            "title": "Timeout closed incident count"
                          },
                          "total_incidents_escalated": {
                            "type": "integer",
                            "description": "Escalated incident count",
                            "title": "Escalated incident count"
                          },
                          "total_incidents_manually_escalated": {
                            "type": "integer",
                            "description": "Manually escalated incident count",
                            "title": "Manually escalated incident count"
                          },
                          "total_incidents_timeout_escalated": {
                            "type": "integer",
                            "description": "Timeout escalated incident count",
                            "title": "Timeout escalated incident count"
                          },
                          "total_incidents_reassigned": {
                            "type": "integer",
                            "description": "Reassigned incident count",
                            "title": "Reassigned incident count"
                          },
                          "mean_seconds_to_engage": {
                            "type": "number",
                            "description": "Average processing time, one person's processing time is the time difference from acknowledgment to incident closure (close_time-ack_time), may include snooze time. If no one acknowledges, this value is 0.",
                            "title": "Average processing time"
                          },
                          "mean_seconds_to_first_acknowledge": {
                            "type": "number",
                            "description": "Average first acknowledgment time (ack_time-start_time)",
                            "title": "Average acknowledgment time"
                          },
                          "mean_seconds_to_close": {
                            "type": "number",
                            "description": "Average closure time (close_time-start_time)",
                            "title": "Average closure time"
                          },
                          "mean_noise_reduction_pct": {
                            "type": "number",
                            "description": "Noise reduction ratio, 1-(total_incident_cnt/total_alert_event_cnt)",
                            "title": "Noise reduction ratio"
                          },
                          "mean_acknowlegement_pct": {
                            "type": "number",
                            "description": "Response ratio, 1-(total_incidents_acknowledged/total_incident_cnt)",
                            "title": "Response ratio"
                          },
                          "ts": {
                            "type": "integer",
                            "title": "Phase start time",
                            "description": "Timestamp in seconds, whether to display depends on if data is aggregated by time granularity. When aggregate_unit is day, this value will be set to timestamp of day start (00:00) according to time_zone",
                            "nullable": true
                          },
                          "hours": {
                            "type": "string",
                            "enum": [
                              "work",
                              "off",
                              "sleep"
                            ],
                            "x-apifox": {
                              "enumDescriptions": {
                                "work": "Work time (workdays 8am~7pm)",
                                "off": "Rest time (workdays 7pm~11pm, non-workdays 8am~11pm)",
                                "sleep": "Sleep time (every day 11pm~8am)"
                              }
                            },
                            "title": "Time type",
                            "description": "Define each hour as one of work time, rest time or sleep time. To distinguish metric differences between different time periods. When not filtering by time period, this field is not displayed. An incident's time type is only determined by its occurrence time, even if the incident spans multiple time types, it will not be split.",
                            "nullable": true
                          },
                          "channel_id": {
                            "type": "integer",
                            "title": "Channel ID",
                            "description": "Channel ID, grouping data, may or may not exist depending on grouping situation",
                            "nullable": true
                          },
                          "channel_name": {
                            "type": "string",
                            "title": "Channel name",
                            "description": "Channel name, grouping data, may or may not exist depending on grouping situation",
                            "nullable": true
                          },
                          "team_id": {
                            "type": "integer",
                            "title": "Team ID",
                            "description": "Team ID, grouping data, may or may not exist depending on grouping situation",
                            "nullable": true
                          },
                          "team_name": {
                            "type": "string",
                            "title": "Team name",
                            "description": "Team name, grouping data, may or may not exist depending on grouping situation",
                            "nullable": true
                          },
                          "total_alert_cnt": {
                            "type": "integer",
                            "title": "Triggered alert count",
                            "description": "Triggered alert count"
                          },
                          "total_alert_event_cnt": {
                            "type": "integer",
                            "title": "Triggered alert event count",
                            "description": "Triggered alert event count"
                          },
                          "total_incident_sms_notifications": {
                            "type": "integer",
                            "description": "Incident SMS notification count",
                            "title": "Incident SMS notification count"
                          },
                          "total_incident_email_notifications": {
                            "type": "integer",
                            "description": "Incident email notification count",
                            "title": "Incident email notification count"
                          },
                          "total_incident_voice_notifications": {
                            "type": "integer",
                            "description": "Incident voice notification count",
                            "title": "Incident voice notification count"
                          },
                          "total_schdule_shift_sms_notifications": {
                            "type": "integer",
                            "description": "On-call SMS notification count",
                            "title": "On-call SMS notification count"
                          },
                          "total_schdule_shift_email_notifications": {
                            "type": "integer",
                            "description": "On-call email notification count",
                            "title": "On-call email notification count"
                          }
                        },
                        "x-apifox-orders": [
                          "01J7JP20VQNZBHRC6YA76F8PAN",
                          "01J7JP20VQMATAGHHKZ8E87KG2",
                          "01J7JP2A8BRMPC8EBXV9NVPW3T"
                        ],
                        "x-apifox-ignore-properties": [
                          "total_engaged_seconds",
                          "total_incident_cnt",
                          "total_incidents_acknowledged",
                          "total_incidents_closed",
                          "total_incidents_auto_closed",
                          "total_incidents_manually_closed",
                          "total_incidents_timeout_closed",
                          "total_incidents_escalated",
                          "total_incidents_manually_escalated",
                          "total_incidents_timeout_escalated",
                          "total_incidents_reassigned",
                          "mean_seconds_to_engage",
                          "mean_seconds_to_first_acknowledge",
                          "mean_seconds_to_close",
                          "mean_noise_reduction_pct",
                          "mean_acknowlegement_pct",
                          "ts",
                          "hours",
                          "channel_id",
                          "channel_name",
                          "team_id",
                          "team_name",
                          "total_alert_cnt",
                          "total_alert_event_cnt",
                          "total_incident_sms_notifications",
                          "total_incident_email_notifications",
                          "total_incident_voice_notifications",
                          "total_schdule_shift_sms_notifications",
                          "total_schdule_shift_email_notifications"
                        ]
                      }
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-refs": {},
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Insights (New)",
        "x-apifox-status": "developing",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-214818178-run"
      }
    },
    "/insight/incident/metrics/account": {
      "post": {
        "summary": "Incident Metrics - Account Dimension",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Insights (New)"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start_time": {
                    "type": "integer",
                    "title": "Start time",
                    "description": "Timestamp in seconds, incident trigger time must be greater than this"
                  },
                  "end_time": {
                    "type": "integer",
                    "title": "End time",
                    "description": "Timestamp in seconds, incident trigger time must be less than or equal to this. Maximum time span is 6 months, if aggregate_unit is day, maximum time span is 31 days."
                  },
                  "team_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Team ID list"
                  },
                  "channel_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Channel ID list"
                  },
                  "severities": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Info",
                        "Warning",
                        "Critical"
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "Info": "Info",
                          "Warning": "Warning",
                          "Critical": "Critical"
                        }
                      }
                    },
                    "title": "Severity"
                  },
                  "time_zone": {
                    "type": "string",
                    "title": "Timezone",
                    "description": "Default timezone Asia/Shanghai, used for results and grouping timezone. Must be in tzdata format. Please refer to [this list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) for acceptable values."
                  },
                  "aggregate_unit": {
                    "type": "string",
                    "title": "Data granularity",
                    "enum": [
                      "day",
                      "week",
                      "month"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "day": "Day",
                        "week": "Week",
                        "month": "Month"
                      }
                    },
                    "description": "Time unit for aggregating metrics. If no value provided, metrics will be aggregated for the entire period.",
                    "nullable": true
                  },
                  "split_hours": {
                    "type": "boolean",
                    "title": "Whether to distinguish time",
                    "description": "If yes, metrics will be aggregated by work time, rest time and sleep time"
                  }
                },
                "x-apifox-orders": [
                  "01J7CYPVNHSFP9GVXVPRZK0KN3",
                  "aggregate_unit",
                  "split_hours"
                ],
                "x-apifox-refs": {
                  "01J7CYPVNHSFP9GVXVPRZK0KN3": {
                    "$ref": "#/components/schemas/InsightInput"
                  }
                },
                "required": [
                  "start_time",
                  "end_time"
                ],
                "x-apifox-ignore-properties": [
                  "start_time",
                  "end_time",
                  "team_ids",
                  "channel_ids",
                  "severities",
                  "time_zone"
                ]
              },
              "example": {
                "start_time": 1234567890,
                "end_time": 1234567890,
                "team_ids": [
                  123,
                  456
                ],
                "channel_ids": [
                  1,
                  2,
                  3
                ],
                "severities": [
                  "Warning"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-apifox-refs": {
                          "01J7JMBWVXR924H8C1N22CPSSJ": {
                            "$ref": "#/components/schemas/InsightIncidentMetrics",
                            "x-apifox-overrides": {}
                          },
                          "01J7JMBWVY5Z1F1HS5CNQMWN66": {
                            "$ref": "#/components/schemas/InsightAlertMetrics"
                          },
                          "01J7JMCFD9XDH4RB90T3SRQA6V": {
                            "$ref": "#/components/schemas/insightNotificationMetrics"
                          }
                        },
                        "properties": {
                          "total_engaged_seconds": {
                            "type": "integer",
                            "description": "Total time spent by responders participating in incident processing. One person's processing time is the time difference from acknowledgment to incident closure (close_time-ack_time), may include snooze time. If no one acknowledges, this value is 0.",
                            "title": "Total responder response time"
                          },
                          "total_incident_cnt": {
                            "type": "integer",
                            "description": "Triggered incident count",
                            "title": "Triggered incident count"
                          },
                          "total_incidents_acknowledged": {
                            "type": "integer",
                            "description": "Acknowledged incident count",
                            "title": "Acknowledged incident count"
                          },
                          "total_incidents_closed": {
                            "type": "integer",
                            "description": "Closed incident count",
                            "title": "Closed incident count"
                          },
                          "total_incidents_auto_closed": {
                            "type": "integer",
                            "description": "Auto-recovered incident count",
                            "title": "Auto-recovered incident count"
                          },
                          "total_incidents_manually_closed": {
                            "type": "integer",
                            "description": "Manually closed incident count",
                            "title": "Manually closed incident count"
                          },
                          "total_incidents_timeout_closed": {
                            "type": "integer",
                            "description": "Timeout closed incident count",
                            "title": "Timeout closed incident count"
                          },
                          "total_incidents_escalated": {
                            "type": "integer",
                            "description": "Escalated incident count",
                            "title": "Escalated incident count"
                          },
                          "total_incidents_manually_escalated": {
                            "type": "integer",
                            "description": "Manually escalated incident count",
                            "title": "Manually escalated incident count"
                          },
                          "total_incidents_timeout_escalated": {
                            "type": "integer",
                            "description": "Timeout escalated incident count",
                            "title": "Timeout escalated incident count"
                          },
                          "total_incidents_reassigned": {
                            "type": "integer",
                            "description": "Reassigned incident count",
                            "title": "Reassigned incident count"
                          },
                          "mean_seconds_to_engage": {
                            "type": "number",
                            "description": "Average processing time, one person's processing time is the time difference from acknowledgment to incident closure (close_time-ack_time), may include snooze time. If no one acknowledges, this value is 0.",
                            "title": "Average processing time"
                          },
                          "mean_seconds_to_first_acknowledge": {
                            "type": "number",
                            "description": "Average first acknowledgment time (ack_time-start_time)",
                            "title": "Average acknowledgment time"
                          },
                          "mean_seconds_to_close": {
                            "type": "number",
                            "description": "Average closure time (close_time-start_time)",
                            "title": "Average closure time"
                          },
                          "mean_noise_reduction_pct": {
                            "type": "number",
                            "description": "Noise reduction ratio, 1-(total_incident_cnt/total_alert_event_cnt)",
                            "title": "Noise reduction ratio"
                          },
                          "mean_acknowlegement_pct": {
                            "type": "number",
                            "description": "Response ratio, 1-(total_incidents_acknowledged/total_incident_cnt)",
                            "title": "Response ratio"
                          },
                          "ts": {
                            "type": "integer",
                            "title": "Phase start time",
                            "description": "Timestamp in seconds, whether to display depends on if data is aggregated by time granularity. When aggregate_unit is day, this value will be set to timestamp of day start (00:00) according to time_zone",
                            "nullable": true
                          },
                          "hours": {
                            "type": "string",
                            "enum": [
                              "work",
                              "off",
                              "sleep"
                            ],
                            "x-apifox": {
                              "enumDescriptions": {
                                "work": "Work time (workdays 8am~7pm)",
                                "off": "Rest time (workdays 7pm~11pm, non-workdays 8am~11pm)",
                                "sleep": "Sleep time (every day 11pm~8am)"
                              }
                            },
                            "title": "Time type",
                            "description": "Define each hour as one of work time, rest time or sleep time. To distinguish metric differences between different time periods. When not filtering by time period, this field is not displayed. An incident's time type is only determined by its occurrence time, even if the incident spans multiple time types, it will not be split.",
                            "nullable": true
                          },
                          "channel_id": {
                            "type": "integer",
                            "title": "Channel ID",
                            "description": "Channel ID, grouping data, may or may not exist depending on grouping situation",
                            "nullable": true
                          },
                          "channel_name": {
                            "type": "string",
                            "title": "Channel name",
                            "description": "Channel name, grouping data, may or may not exist depending on grouping situation",
                            "nullable": true
                          },
                          "team_id": {
                            "type": "integer",
                            "title": "Team ID",
                            "description": "Team ID, grouping data, may or may not exist depending on grouping situation",
                            "nullable": true
                          },
                          "team_name": {
                            "type": "string",
                            "title": "Team name",
                            "description": "Team name, grouping data, may or may not exist depending on grouping situation",
                            "nullable": true
                          },
                          "total_alert_cnt": {
                            "type": "integer",
                            "title": "Triggered alert count",
                            "description": "Triggered alert count"
                          },
                          "total_alert_event_cnt": {
                            "type": "integer",
                            "title": "Triggered alert event count",
                            "description": "Triggered alert event count"
                          },
                          "total_incident_sms_notifications": {
                            "type": "integer",
                            "description": "Incident SMS notification count",
                            "title": "Incident SMS notification count"
                          },
                          "total_incident_email_notifications": {
                            "type": "integer",
                            "description": "Incident email notification count",
                            "title": "Incident email notification count"
                          },
                          "total_incident_voice_notifications": {
                            "type": "integer",
                            "description": "Incident voice notification count",
                            "title": "Incident voice notification count"
                          },
                          "total_schdule_shift_sms_notifications": {
                            "type": "integer",
                            "description": "On-call SMS notification count",
                            "title": "On-call SMS notification count"
                          },
                          "total_schdule_shift_email_notifications": {
                            "type": "integer",
                            "description": "On-call email notification count",
                            "title": "On-call email notification count"
                          }
                        },
                        "x-apifox-orders": [
                          "01J7JMBWVXR924H8C1N22CPSSJ",
                          "01J7JMBWVY5Z1F1HS5CNQMWN66",
                          "01J7JMCFD9XDH4RB90T3SRQA6V"
                        ],
                        "x-apifox-ignore-properties": [
                          "total_engaged_seconds",
                          "total_incident_cnt",
                          "total_incidents_acknowledged",
                          "total_incidents_closed",
                          "total_incidents_auto_closed",
                          "total_incidents_manually_closed",
                          "total_incidents_timeout_closed",
                          "total_incidents_escalated",
                          "total_incidents_manually_escalated",
                          "total_incidents_timeout_escalated",
                          "total_incidents_reassigned",
                          "mean_seconds_to_engage",
                          "mean_seconds_to_first_acknowledge",
                          "mean_seconds_to_close",
                          "mean_noise_reduction_pct",
                          "mean_acknowlegement_pct",
                          "ts",
                          "hours",
                          "channel_id",
                          "channel_name",
                          "team_id",
                          "team_name",
                          "total_alert_cnt",
                          "total_alert_event_cnt",
                          "total_incident_sms_notifications",
                          "total_incident_email_notifications",
                          "total_incident_voice_notifications",
                          "total_schdule_shift_sms_notifications",
                          "total_schdule_shift_email_notifications"
                        ]
                      }
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Insights (New)",
        "x-apifox-status": "developing",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-211936273-run"
      }
    },
    "/insight/incident/metrics/raw": {
      "post": {
        "summary": "Incident Metrics - Raw Data",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Insights (New)"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-apifox-refs": {
                  "01J70VBWBK1YDMSW2HTNT0CHRK": {
                    "$ref": "#/components/schemas/InsightInput"
                  }
                },
                "properties": {
                  "start_time": {
                    "type": "integer",
                    "title": "Start time",
                    "description": "Timestamp in seconds, incident trigger time must be greater than this"
                  },
                  "end_time": {
                    "type": "integer",
                    "title": "End time",
                    "description": "Timestamp in seconds, incident trigger time must be less than or equal to this. Maximum time span is 6 months, if aggregate_unit is day, maximum time span is 31 days."
                  },
                  "team_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Team ID list"
                  },
                  "channel_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Channel ID list"
                  },
                  "severities": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Info",
                        "Warning",
                        "Critical"
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "Info": "Info",
                          "Warning": "Warning",
                          "Critical": "Critical"
                        }
                      }
                    },
                    "title": "Severity"
                  },
                  "time_zone": {
                    "type": "string",
                    "title": "Timezone",
                    "description": "Default timezone Asia/Shanghai, used for results and grouping timezone. Must be in tzdata format. Please refer to [this list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) for acceptable values."
                  },
                  "p": {
                    "type": "integer",
                    "title": "Page number",
                    "description": "Starts from 1"
                  },
                  "limit": {
                    "type": "integer",
                    "title": "Items per page"
                  },
                  "asc": {
                    "type": "boolean",
                    "title": "Ascending order"
                  },
                  "orderby": {
                    "type": "string",
                    "title": "Sort field"
                  }
                },
                "x-apifox-orders": [
                  "01J70VBWBK1YDMSW2HTNT0CHRK",
                  "p",
                  "limit",
                  "asc",
                  "orderby"
                ],
                "required": [
                  "start_time",
                  "end_time"
                ],
                "x-apifox-ignore-properties": [
                  "start_time",
                  "end_time",
                  "team_ids",
                  "channel_ids",
                  "severities",
                  "time_zone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "incident_id": {
                            "type": "string",
                            "title": "Incident ID"
                          },
                          "account_id": {
                            "type": "integer",
                            "title": "Account ID"
                          },
                          "team_id": {
                            "type": "integer",
                            "title": "Team ID"
                          },
                          "channel_id": {
                            "type": "integer",
                            "title": "Channel ID"
                          },
                          "severity": {
                            "type": "string",
                            "title": "Severity"
                          },
                          "created_at": {
                            "type": "integer",
                            "title": "Created time"
                          },
                          "is_acked": {
                            "type": "boolean",
                            "title": "Whether acknowledged"
                          },
                          "is_assigned": {
                            "type": "boolean",
                            "title": "Whether assigned"
                          },
                          "is_reassigned": {
                            "type": "boolean",
                            "title": "Whether reassigned"
                          },
                          "escalated_by": {
                            "type": "string",
                            "title": "Escalation method"
                          },
                          "closed_by": {
                            "type": "string",
                            "title": "Closure method"
                          },
                          "seconds_to_first_ack": {
                            "type": "integer",
                            "title": "First acknowledgment time"
                          },
                          "seconds_to_close": {
                            "type": "integer",
                            "title": "Closure time"
                          },
                          "seconds_to_engage": {
                            "type": "integer",
                            "title": "Processing time"
                          }
                        },
                        "x-apifox-orders": [
                          "incident_id",
                          "account_id",
                          "team_id",
                          "channel_id",
                          "severity",
                          "created_at",
                          "is_acked",
                          "is_assigned",
                          "is_reassigned",
                          "escalated_by",
                          "closed_by",
                          "seconds_to_first_ack",
                          "seconds_to_close",
                          "seconds_to_engage"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success example",
                    "value": {
                      "error": {
                        "code": "string",
                        "message": "string"
                      },
                      "data": [
                        {
                          "incident_id": "",
                          "account_id": 0,
                          "team_id": 0,
                          "channel_id": 0,
                          "severity": "Info",
                          "created_at": 0,
                          "is_acked": false,
                          "is_assigned": false,
                          "is_reassigned": false,
                          "escalated_by": "",
                          "closed_by": "",
                          "seconds_to_first_ack": 0,
                          "seconds_to_close": 0,
                          "seconds_to_engage": 0
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Insights (New)",
        "x-apifox-status": "developing",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-212397855-run"
      }
    },
    "/insight/incident/metrics/channel": {
      "post": {
        "summary": "Incident Metrics - Channel Dimension",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Insights (New)"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start_time": {
                    "type": "integer",
                    "title": "Start time",
                    "description": "Timestamp in seconds, incident trigger time must be greater than this"
                  },
                  "end_time": {
                    "type": "integer",
                    "title": "End time",
                    "description": "Timestamp in seconds, incident trigger time must be less than or equal to this. Maximum time span is 6 months, if aggregate_unit is day, maximum time span is 31 days."
                  },
                  "team_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Team ID list"
                  },
                  "channel_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Channel ID list"
                  },
                  "severities": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Info",
                        "Warning",
                        "Critical"
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "Info": "Info",
                          "Warning": "Warning",
                          "Critical": "Critical"
                        }
                      }
                    },
                    "title": "Severity"
                  },
                  "time_zone": {
                    "type": "string",
                    "title": "Timezone",
                    "description": "Default timezone Asia/Shanghai, used for results and grouping timezone. Must be in tzdata format. Please refer to [this list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) for acceptable values."
                  },
                  "order_by": {
                    "type": "string",
                    "title": "Sort field",
                    "description": "Sort field, continuously adding",
                    "enum": [
                      "total_incident_cnt",
                      "total_engaged_seconds",
                      "total_incidents_acknowledged",
                      "total_incidents_closed",
                      "total_incidents_auto_closed",
                      "total_incidents_timeout_closed",
                      "total_incidents_escalated",
                      "total_incidents_manually_escalated",
                      "total_incidents_timeout_escalated",
                      "total_incidents_reassigned",
                      "mean_seconds_to_engage",
                      "mean_seconds_to_first_acknowledge",
                      "mean_seconds_to_close",
                      "mean_noise_reduction_pct",
                      "mean_acknowledgement_pct"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "total_incident_cnt": "Incident count",
                        "total_engaged_seconds": "Total incident processing time",
                        "total_incidents_acknowledged": "Acknowledged incident count",
                        "total_incidents_closed": "Closed incident count",
                        "total_incidents_auto_closed": "Auto-recovered incident count",
                        "total_incidents_timeout_closed": "Timeout closed incident count",
                        "total_incidents_escalated": "Escalated incident count",
                        "total_incidents_manually_escalated": "Manually escalated incident count",
                        "total_incidents_timeout_escalated": "Timeout escalated incident count",
                        "total_incidents_reassigned": "Reassigned incident count",
                        "mean_seconds_to_engage": "Average incident processing time",
                        "mean_seconds_to_first_acknowledge": "Average incident acknowledgment time",
                        "mean_seconds_to_close": "Average incident closure time",
                        "mean_noise_reduction_pct": "Noise reduction ratio",
                        "mean_acknowledgement_pct": "Response ratio"
                      }
                    }
                  },
                  "asc": {
                    "type": "boolean",
                    "title": "Ascending order",
                    "description": "Result sort order; true means ascending, false means descending, default is descending."
                  },
                  "aggregate_unit": {
                    "type": "string",
                    "title": "Data granularity",
                    "enum": [
                      "day",
                      "week",
                      "month"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "day": "Day",
                        "week": "Week",
                        "month": "Month"
                      }
                    },
                    "description": "Time unit for aggregating metrics. If no value provided, metrics will be aggregated for the entire period.",
                    "nullable": true
                  },
                  "split_hours": {
                    "type": "string",
                    "title": "Whether to distinguish time",
                    "description": "If yes, metrics will be aggregated by work time, rest time and sleep time"
                  }
                },
                "x-apifox-orders": [
                  "01J7CYPVNHSFP9GVXVPRZK0KN3",
                  "order_by",
                  "asc",
                  "aggregate_unit",
                  "split_hours"
                ],
                "x-apifox-refs": {
                  "01J7CYPVNHSFP9GVXVPRZK0KN3": {
                    "$ref": "#/components/schemas/InsightInput"
                  }
                },
                "required": [
                  "start_time",
                  "end_time"
                ],
                "x-apifox-ignore-properties": [
                  "start_time",
                  "end_time",
                  "team_ids",
                  "channel_ids",
                  "severities",
                  "time_zone"
                ]
              },
              "example": {
                "start_time": 1234567890,
                "end_time": 1234567890,
                "team_ids": [
                  123,
                  456
                ],
                "channel_ids": [
                  1,
                  2,
                  3
                ],
                "severities": [
                  "Warning"
                ],
                "order_by": "total_incident_cnt",
                "asc": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "x-apifox-orders": [
                        "code",
                        "message"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-apifox-refs": {
                          "01J7JMMD086HCSQXWJCW2AC0CQ": {
                            "$ref": "#/components/schemas/InsightIncidentMetrics",
                            "x-apifox-overrides": {}
                          },
                          "01J7JMMD08WP61Q19VTCZRZ1VS": {
                            "$ref": "#/components/schemas/InsightAlertMetrics"
                          },
                          "01J7JMMTA2H93HT5WKS7SD8EW3": {
                            "$ref": "#/components/schemas/insightNotificationMetrics"
                          }
                        },
                        "properties": {
                          "total_engaged_seconds": {
                            "type": "integer",
                            "description": "Total time spent by responders participating in incident processing. One person's processing time is the time difference from acknowledgment to incident closure (close_time-ack_time), may include snooze time. If no one acknowledges, this value is 0.",
                            "title": "Total responder response time"
                          },
                          "total_incident_cnt": {
                            "type": "integer",
                            "description": "Triggered incident count",
                            "title": "Triggered incident count"
                          },
                          "total_incidents_acknowledged": {
                            "type": "integer",
                            "description": "Acknowledged incident count",
                            "title": "Acknowledged incident count"
                          },
                          "total_incidents_closed": {
                            "type": "integer",
                            "description": "Closed incident count",
                            "title": "Closed incident count"
                          },
                          "total_incidents_auto_closed": {
                            "type": "integer",
                            "description": "Auto-recovered incident count",
                            "title": "Auto-recovered incident count"
                          },
                          "total_incidents_manually_closed": {
                            "type": "integer",
                            "description": "Manually closed incident count",
                            "title": "Manually closed incident count"
                          },
                          "total_incidents_timeout_closed": {
                            "type": "integer",
                            "description": "Timeout closed incident count",
                            "title": "Timeout closed incident count"
                          },
                          "total_incidents_escalated": {
                            "type": "integer",
                            "description": "Escalated incident count",
                            "title": "Escalated incident count"
                          },
                          "total_incidents_manually_escalated": {
                            "type": "integer",
                            "description": "Manually escalated incident count",
                            "title": "Manually escalated incident count"
                          },
                          "total_incidents_timeout_escalated": {
                            "type": "integer",
                            "description": "Timeout escalated incident count",
                            "title": "Timeout escalated incident count"
                          },
                          "total_incidents_reassigned": {
                            "type": "integer",
                            "description": "Reassigned incident count",
                            "title": "Reassigned incident count"
                          },
                          "mean_seconds_to_engage": {
                            "type": "number",
                            "description": "Average processing time, one person's processing time is the time difference from acknowledgment to incident closure (close_time-ack_time), may include snooze time. If no one acknowledges, this value is 0.",
                            "title": "Average processing time"
                          },
                          "mean_seconds_to_first_acknowledge": {
                            "type": "number",
                            "description": "Average first acknowledgment time (ack_time-start_time)",
                            "title": "Average acknowledgment time"
                          },
                          "mean_seconds_to_close": {
                            "type": "number",
                            "description": "Average closure time (close_time-start_time)",
                            "title": "Average closure time"
                          },
                          "mean_noise_reduction_pct": {
                            "type": "number",
                            "description": "Noise reduction ratio, 1-(total_incident_cnt/total_alert_event_cnt)",
                            "title": "Noise reduction ratio"
                          },
                          "mean_acknowlegement_pct": {
                            "type": "number",
                            "description": "Response ratio, 1-(total_incidents_acknowledged/total_incident_cnt)",
                            "title": "Response ratio"
                          },
                          "ts": {
                            "type": "integer",
                            "title": "Phase start time",
                            "description": "Timestamp in seconds, whether to display depends on if data is aggregated by time granularity. When aggregate_unit is day, this value will be set to timestamp of day start (00:00) according to time_zone",
                            "nullable": true
                          },
                          "hours": {
                            "type": "string",
                            "enum": [
                              "work",
                              "off",
                              "sleep"
                            ],
                            "x-apifox": {
                              "enumDescriptions": {
                                "work": "Work time (workdays 8am~7pm)",
                                "off": "Rest time (workdays 7pm~11pm, non-workdays 8am~11pm)",
                                "sleep": "Sleep time (every day 11pm~8am)"
                              }
                            },
                            "title": "Time type",
                            "description": "Define each hour as one of work time, rest time or sleep time. To distinguish metric differences between different time periods. When not filtering by time period, this field is not displayed. An incident's time type is only determined by its occurrence time, even if the incident spans multiple time types, it will not be split.",
                            "nullable": true
                          },
                          "channel_id": {
                            "type": "integer",
                            "title": "Channel ID",
                            "description": "Channel ID, grouping data, may or may not exist depending on grouping situation",
                            "nullable": true
                          },
                          "channel_name": {
                            "type": "string",
                            "title": "Channel name",
                            "description": "Channel name, grouping data, may or may not exist depending on grouping situation",
                            "nullable": true
                          },
                          "team_id": {
                            "type": "integer",
                            "title": "Team ID",
                            "description": "Team ID, grouping data, may or may not exist depending on grouping situation",
                            "nullable": true
                          },
                          "team_name": {
                            "type": "string",
                            "title": "Team name",
                            "description": "Team name, grouping data, may or may not exist depending on grouping situation",
                            "nullable": true
                          },
                          "total_alert_cnt": {
                            "type": "integer",
                            "title": "Triggered alert count",
                            "description": "Triggered alert count"
                          },
                          "total_alert_event_cnt": {
                            "type": "integer",
                            "title": "Triggered alert event count",
                            "description": "Triggered alert event count"
                          },
                          "total_incident_sms_notifications": {
                            "type": "integer",
                            "description": "Incident SMS notification count",
                            "title": "Incident SMS notification count"
                          },
                          "total_incident_email_notifications": {
                            "type": "integer",
                            "description": "Incident email notification count",
                            "title": "Incident email notification count"
                          },
                          "total_incident_voice_notifications": {
                            "type": "integer",
                            "description": "Incident voice notification count",
                            "title": "Incident voice notification count"
                          },
                          "total_schdule_shift_sms_notifications": {
                            "type": "integer",
                            "description": "On-call SMS notification count",
                            "title": "On-call SMS notification count"
                          },
                          "total_schdule_shift_email_notifications": {
                            "type": "integer",
                            "description": "On-call email notification count",
                            "title": "On-call email notification count"
                          }
                        },
                        "x-apifox-orders": [
                          "01J7JMMD086HCSQXWJCW2AC0CQ",
                          "01J7JMMD08WP61Q19VTCZRZ1VS",
                          "01J7JMMTA2H93HT5WKS7SD8EW3"
                        ],
                        "x-apifox-ignore-properties": [
                          "total_engaged_seconds",
                          "total_incident_cnt",
                          "total_incidents_acknowledged",
                          "total_incidents_closed",
                          "total_incidents_auto_closed",
                          "total_incidents_manually_closed",
                          "total_incidents_timeout_closed",
                          "total_incidents_escalated",
                          "total_incidents_manually_escalated",
                          "total_incidents_timeout_escalated",
                          "total_incidents_reassigned",
                          "mean_seconds_to_engage",
                          "mean_seconds_to_first_acknowledge",
                          "mean_seconds_to_close",
                          "mean_noise_reduction_pct",
                          "mean_acknowlegement_pct",
                          "ts",
                          "hours",
                          "channel_id",
                          "channel_name",
                          "team_id",
                          "team_name",
                          "total_alert_cnt",
                          "total_alert_event_cnt",
                          "total_incident_sms_notifications",
                          "total_incident_email_notifications",
                          "total_incident_voice_notifications",
                          "total_schdule_shift_sms_notifications",
                          "total_schdule_shift_email_notifications"
                        ]
                      }
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Insights (New)",
        "x-apifox-status": "developing",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-213434172-run"
      }
    },
    "/insight/alert/metrics/label/top": {
      "post": {
        "summary": "Alert Metrics - Label TOP",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Insights (New)"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start_time": {
                    "type": "integer",
                    "title": "Start time",
                    "description": "Timestamp in seconds, incident trigger time must be greater than this"
                  },
                  "end_time": {
                    "type": "integer",
                    "title": "End time",
                    "description": "Timestamp in seconds, incident trigger time must be less than or equal to this. Maximum time span is 6 months, if aggregate_unit is day, maximum time span is 31 days."
                  },
                  "team_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Team ID list"
                  },
                  "channel_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Channel ID list"
                  },
                  "severities": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Info",
                        "Warning",
                        "Critical"
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "Info": "Info",
                          "Warning": "Warning",
                          "Critical": "Critical"
                        }
                      }
                    },
                    "title": "Severity"
                  },
                  "time_zone": {
                    "type": "string",
                    "title": "Timezone",
                    "description": "Default timezone Asia/Shanghai, used for results and grouping timezone. Must be in tzdata format. Please refer to [this list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) for acceptable values."
                  },
                  "order_by": {
                    "type": "string",
                    "title": "Sort field",
                    "enum": [
                      "total_alert_cnt",
                      "total_alert_event_cnt"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "total_alert_cnt": "Alert count",
                        "total_alert_event_cnt": "Alert event count"
                      }
                    }
                  },
                  "asc": {
                    "type": "boolean",
                    "title": "Ascending order",
                    "description": "Default descending"
                  },
                  "k": {
                    "type": "integer",
                    "title": "Data count",
                    "description": "Return all by default",
                    "minimum": 1,
                    "maximum": 100
                  },
                  "label": {
                    "type": "string",
                    "enum": [
                      "check",
                      "resource"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "check": "Alert check item",
                        "resource": "Alert object"
                      }
                    },
                    "title": "Label"
                  }
                },
                "x-apifox-orders": [
                  "01J7AZXTCYZ7V9RCYT4AEWA2H0",
                  "order_by",
                  "asc",
                  "k",
                  "label"
                ],
                "x-apifox-refs": {
                  "01J7AZXTCYZ7V9RCYT4AEWA2H0": {
                    "$ref": "#/components/schemas/InsightInput"
                  }
                },
                "required": [
                  "label",
                  "start_time",
                  "end_time"
                ],
                "x-apifox-ignore-properties": [
                  "start_time",
                  "end_time",
                  "team_ids",
                  "channel_ids",
                  "severities",
                  "time_zone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "total_alert_cnt": {
                            "type": "integer",
                            "title": "Alert count"
                          },
                          "total_alert_event_cnt": {
                            "type": "integer",
                            "title": "Alert event count"
                          },
                          "label": {
                            "type": "string",
                            "title": "Label value"
                          }
                        },
                        "x-apifox-orders": [
                          "total_alert_cnt",
                          "total_alert_event_cnt",
                          "label"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success example",
                    "value": {
                      "error": {
                        "code": "string",
                        "message": "string"
                      },
                      "data": [
                        {
                          "total_alert_cnt": 11,
                          "total_alert_event_cnt": 11,
                          "label": "HTTP response error"
                        },
                        {
                          "total_alert_cnt": 1,
                          "total_alert_event_cnt": 1,
                          "label": "cpu.ide<28"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Insights (New)",
        "x-apifox-status": "developing",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-213441443-run"
      }
    },
    "/insight/incident/metrics/responder": {
      "post": {
        "summary": "Incident Metrics - Personal Dimension",
        "deprecated": false,
        "description": "",
        "tags": [
          "Flashduty/Open API/Insights (New)"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start_time": {
                    "type": "integer",
                    "title": "Start time",
                    "description": "Timestamp in seconds, incident trigger time must be greater than this"
                  },
                  "end_time": {
                    "type": "integer",
                    "title": "End time",
                    "description": "Timestamp in seconds, incident trigger time must be less than or equal to this. Maximum time span is 6 months, if aggregate_unit is day, maximum time span is 31 days."
                  },
                  "team_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Team ID list"
                  },
                  "channel_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "title": "Channel ID list"
                  },
                  "severities": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Info",
                        "Warning",
                        "Critical"
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "Info": "Info",
                          "Warning": "Warning",
                          "Critical": "Critical"
                        }
                      }
                    },
                    "title": "Severity"
                  },
                  "time_zone": {
                    "type": "string",
                    "title": "Timezone",
                    "description": "Default timezone Asia/Shanghai, used for results and grouping timezone. Must be in tzdata format. Please refer to [this list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) for acceptable values."
                  },
                  "responder_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Member ID list",
                    "description": "Member ID list"
                  },
                  "order_by": {
                    "type": "string",
                    "title": "Sort field",
                    "description": "Sort field, continuously adding",
                    "enum": [
                      "total_incident_cnt",
                      "total_engaged_seconds",
                      "total_incidents_acknowledged",
                      "total_incidents_reassigned",
                      "mean_seconds_to_engage",
                      "mean_seconds_to_acknowledge"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "total_incident_cnt": "Incident count",
                        "total_engaged_seconds": "Total incident processing time",
                        "total_incidents_acknowledged": "Acknowledged incident count",
                        "total_incidents_reassigned": "Reassigned incident count",
                        "mean_seconds_to_engage": "Average incident processing time",
                        "mean_seconds_to_acknowledge": "Average incident acknowledgment time"
                      }
                    }
                  },
                  "asc": {
                    "type": "boolean",
                    "title": "Ascending order",
                    "description": "Result sort order; true means ascending, false means descending, default is descending."
                  },
                  "aggregate_unit": {
                    "type": "string",
                    "title": "Data granularity",
                    "enum": [
                      "day",
                      "week",
                      "month"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "day": "Day",
                        "week": "Week",
                        "month": "Month"
                      }
                    },
                    "description": "Time unit for aggregating metrics. If no value provided, metrics will be aggregated for the entire period.",
                    "nullable": true
                  },
                  "split_hours": {
                    "type": "boolean",
                    "title": "Whether to distinguish time",
                    "description": "If yes, metrics will be aggregated by work time, rest time and sleep time"
                  }
                },
                "x-apifox-orders": [
                  "01J7CYPVNHSFP9GVXVPRZK0KN3",
                  "responder_ids",
                  "order_by",
                  "asc",
                  "aggregate_unit",
                  "split_hours"
                ],
                "x-apifox-refs": {
                  "01J7CYPVNHSFP9GVXVPRZK0KN3": {
                    "$ref": "#/components/schemas/InsightInput"
                  }
                },
                "required": [
                  "start_time",
                  "end_time"
                ],
                "x-apifox-ignore-properties": [
                  "start_time",
                  "end_time",
                  "team_ids",
                  "channel_ids",
                  "severities",
                  "time_zone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/DutyError"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InsightResponderMetrics"
                      }
                    }
                  },
                  "x-apifox-orders": [
                    "error",
                    "data"
                  ],
                  "x-apifox-refs": {},
                  "required": [
                    "data"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "headers": {},
            "x-apifox-name": "Success"
          }
        },
        "security": [
          {
            "apikey-query-app_key": []
          }
        ],
        "x-apifox-folder": "Flashduty/Open API/Insights (New)",
        "x-apifox-status": "developing",
        "x-run-in-apifox": "https://app.apifox.com/web/project/1989548/apis/api-214838626-run"
      }
    }
  },
  "components": {
    "schemas": {
      "i_comm": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          }
        },
        "x-apifox-orders": [
          "comment"
        ],
        "required": [
          "comment"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/incidents"
      },
      "i_ack": {
        "type": "object",
        "properties": {},
        "x-apifox-orders": [],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/alerts"
      },
      "i_unack": {
        "type": "object",
        "properties": {},
        "x-apifox-orders": [],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/alerts"
      },
      "i_rslv": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "title": "Action source",
            "enum": [
              "event",
              "autorslv",
              "console",
              "card",
              "wcard"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "event": "Event reporting",
                "autorslv": "Timeout auto-recovery",
                "console": "Console or API",
                "card": "Message card",
                "wcard": "WeCom card"
              }
            }
          }
        },
        "x-apifox-orders": [
          "from"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/incidents"
      },
      "i_r_desc": {
        "type": "object",
        "properties": {},
        "x-apifox-orders": [],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/alerts"
      },
      "i_r_impact": {
        "type": "object",
        "properties": {},
        "x-apifox-orders": [],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/alerts"
      },
      "i_r_rc": {
        "type": "object",
        "properties": {},
        "x-apifox-orders": [],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/alerts"
      },
      "i_r_rsltn": {
        "type": "object",
        "properties": {},
        "x-apifox-orders": [],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/alerts"
      },
      "i_notify": {
        "type": "object",
        "properties": {
          "fire_type": {
            "type": "string",
            "title": "Notification type, enum values: fire: notification, refire: loop notification",
            "enum": [
              "fire",
              "refire"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "fire": "Notification",
                "refire": "Loop notification"
              }
            }
          },
          "escalate_rule_name": {
            "type": "string",
            "title": "Escalation rule name"
          },
          "escalate_rule_id": {
            "type": "string",
            "title": "Escalation rule ID"
          },
          "layer_idx": {
            "type": "string",
            "title": "Assignment level",
            "description": " "
          },
          "by": {
            "type": "string",
            "title": "Notification channel",
            "enum": [
              "email",
              "voice",
              "sms",
              "feishu",
              "dingtalk",
              "wecom",
              "feishu_app",
              "dingtalk_app",
              "wecom_app",
              "slack_app"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "email": "Email",
                "voice": "Voice",
                "sms": "SMS",
                "feishu": "Feishu/Lark bot",
                "dingtalk": "Dingtalk bot",
                "wecom": "WeCom bot",
                "feishu_app": "Feishu/Lark app",
                "dingtalk_app": "Dingtalk app",
                "wecom_app": "WeCom app",
                "slack_app": "Slack app"
              }
            }
          },
          "persons": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "person_id": {
                  "type": "integer",
                  "title": "Member ID"
                },
                "failed_reason": {
                  "type": "string",
                  "title": "Failure reason"
                }
              },
              "x-apifox-orders": [
                "person_id",
                "failed_reason"
              ],
              "required": [
                "person_id"
              ],
              "x-apifox-ignore-properties": []
            },
            "title": "Direct message target list",
            "description": "Must exist when by=sms/email/voice, may exist when by=feishu_app/wecom_app/dingtalk_app"
          },
          "chats": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "chat_id": {
                  "type": "string",
                  "title": "Group chat ID"
                },
                "chat_name": {
                  "type": "string",
                  "title": "Group chat name"
                },
                "failed_reason": {
                  "type": "string",
                  "title": "Failure reason"
                }
              },
              "x-apifox-orders": [
                "chat_id",
                "chat_name",
                "failed_reason"
              ],
              "required": [
                "chat_id",
                "chat_name"
              ],
              "x-apifox-ignore-properties": []
            },
            "title": "Group chat target list",
            "description": "May exist when by=feishu_app/wecom_app/dingtalk_app"
          },
          "robots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "title": "Webhook token or URL"
                },
                "alias": {
                  "type": "string",
                  "title": "Alias"
                },
                "failed_reason": {
                  "type": "string",
                  "title": "Failure reason"
                }
              },
              "x-apifox-orders": [
                "token",
                "alias",
                "failed_reason"
              ],
              "required": [
                "token"
              ],
              "x-apifox-ignore-properties": []
            },
            "title": "Bot target list",
            "description": "Must exist when by=feishu/wecom/dingtalk"
          }
        },
        "x-apifox-orders": [
          "fire_type",
          "escalate_rule_name",
          "escalate_rule_id",
          "layer_idx",
          "by",
          "persons",
          "chats",
          "robots"
        ],
        "required": [
          "fire_type",
          "by",
          "layer_idx",
          "escalate_rule_id",
          "escalate_rule_name",
          "persons"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/incidents"
      },
      "i_new": {
        "type": "object",
        "properties": {
          "severity": {
            "type": "string",
            "title": "Severity"
          },
          "title": {
            "type": "string",
            "title": "Incident title"
          }
        },
        "x-apifox-orders": [
          "severity",
          "title"
        ],
        "required": [
          "severity",
          "title"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/incidents"
      },
      "i_snooze": {
        "type": "object",
        "properties": {
          "minutes": {
            "type": "integer",
            "title": "",
            "description": "Snooze minutes"
          }
        },
        "x-apifox-orders": [
          "minutes"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/incidents"
      },
      "i_wake": {
        "type": "object",
        "properties": {},
        "x-apifox-orders": [],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/alerts"
      },
      "i_m_flapping": {
        "type": "object",
        "properties": {
          "max_changes": {
            "type": "integer",
            "title": "Maximum status change count"
          },
          "in_mins": {
            "type": "integer",
            "title": "Time unit: minutes"
          },
          "mute_mins": {
            "type": "integer",
            "title": "Convergence duration in minutes"
          },
          "end_time": {
            "type": "integer",
            "title": "Convergence end timestamp",
            "description": "Exists when not first convergence"
          }
        },
        "x-apifox-orders": [
          "max_changes",
          "in_mins",
          "mute_mins",
          "end_time"
        ],
        "required": [
          "max_changes",
          "mute_mins",
          "in_mins"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/incidents"
      },
      "i_storm": {
        "type": "object",
        "properties": {
          "threshold": {
            "type": "integer",
            "title": "Aggregated alert count"
          }
        },
        "x-apifox-orders": [
          "threshold"
        ],
        "required": [
          "threshold"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/incidents"
      },
      "i_reopen": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string"
          }
        },
        "x-apifox-orders": [
          "reason"
        ],
        "required": [
          "reason"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/incidents"
      },
      "i_assign": {
        "type": "object",
        "properties": {
          "to": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "title": "Final assigned member ID list"
          },
          "person_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "title": "Direct assigned member list",
            "description": "Choose one between this and escalation rule"
          },
          "escalate_rule_id": {
            "type": "string",
            "title": "Escalation rule ID",
            "description": "Choose one between this and assigned members"
          },
          "escalate_rule_name": {
            "type": "string",
            "title": "Escalation rule name"
          },
          "layer_idx": {
            "type": "integer",
            "title": "Assignment level",
            "description": "When assigning to a rule, can specify the assignment level"
          },
          "layer_person_reset": {
            "type": "object",
            "properties": {
              "0": {
                "$ref": "#/components/schemas/PersonGroup",
                "title": "Level ID to member replacement"
              }
            },
            "title": "Level member replacement",
            "description": "When assigning to a rule, can set different level members simultaneously",
            "x-apifox-orders": [
              "0"
            ],
            "required": [
              "0"
            ],
            "x-apifox-ignore-properties": []
          },
          "type": {
            "type": "string",
            "title": "Assignment type",
            "enum": [
              "assign",
              "reassign",
              "escalate",
              "reopen"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "assign": "Assign",
                "reassign": "Reassign",
                "escalate": "Escalation assign",
                "reopen": "Reopen"
              }
            }
          }
        },
        "x-apifox-orders": [
          "to",
          "01H54PCWH6Z0MCMFWQG8SZFW0R"
        ],
        "required": [
          "to"
        ],
        "x-apifox-refs": {
          "01H54PCWH6Z0MCMFWQG8SZFW0R": {
            "$ref": "#/components/schemas/Assignment"
          }
        },
        "x-apifox-ignore-properties": [
          "person_ids",
          "escalate_rule_id",
          "escalate_rule_name",
          "layer_idx",
          "layer_person_reset",
          "type"
        ],
        "x-apifox-folder": "Flashduty/ActionDetail/incidents"
      },
      "PersonGroup": {
        "type": "object",
        "properties": {
          "team_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "title": "Team ID list",
            "description": "At least one of team_ids, person_ids and schedule_to_role_ids must be provided"
          },
          "person_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "title": "Member ID list",
            "description": "At least one of team_ids, person_ids and schedule_to_role_ids must be provided"
          },
          "schedule_to_role_ids": {
            "type": "object",
            "properties": {
              "{schedule_id}": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            },
            "title": "Schedule ID and role ID list",
            "description": "At least one of team_ids, person_ids and schedule_to_role_ids must be provided",
            "x-apifox-orders": [
              "{schedule_id}"
            ],
            "x-apifox-ignore-properties": []
          }
        },
        "x-apifox-orders": [
          "team_ids",
          "person_ids",
          "schedule_to_role_ids"
        ],
        "title": "",
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "Assignment": {
        "type": "object",
        "properties": {
          "person_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "title": "Direct assigned member list",
            "description": "Choose one between this and escalation rule"
          },
          "escalate_rule_id": {
            "type": "string",
            "title": "Escalation rule ID",
            "description": "Choose one between this and assigned members"
          },
          "escalate_rule_name": {
            "type": "string",
            "title": "Escalation rule name"
          },
          "layer_idx": {
            "type": "integer",
            "title": "Assignment level",
            "description": "When assigning to a rule, can specify the assignment level"
          },
          "layer_person_reset": {
            "type": "object",
            "properties": {
              "0": {
                "$ref": "#/components/schemas/PersonGroup",
                "title": "Level ID to member replacement"
              }
            },
            "title": "Level member replacement",
            "description": "When assigning to a rule, can set different level members simultaneously",
            "x-apifox-orders": [
              "0"
            ],
            "required": [
              "0"
            ],
            "x-apifox-ignore-properties": []
          },
          "type": {
            "type": "string",
            "title": "Assignment type",
            "enum": [
              "assign",
              "reassign",
              "escalate",
              "reopen"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "assign": "Assign",
                "reassign": "Reassign",
                "escalate": "Escalation assign",
                "reopen": "Reopen"
              }
            }
          }
        },
        "x-apifox-orders": [
          "person_ids",
          "escalate_rule_id",
          "escalate_rule_name",
          "layer_idx",
          "layer_person_reset",
          "type"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "i_r_title": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "title": "Title before modification"
          },
          "to": {
            "type": "string"
          }
        },
        "x-apifox-orders": [
          "from",
          "to"
        ],
        "required": [
          "from",
          "to"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/incidents"
      },
      "i_r_severity": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "title": "Severity before modification"
          },
          "to": {
            "type": "string"
          }
        },
        "x-apifox-orders": [
          "from",
          "to"
        ],
        "required": [
          "from",
          "to"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/incidents"
      },
      "i_merge": {
        "type": "object",
        "properties": {
          "source_incidents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "incident_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "x-apifox-orders": [
                "incident_id",
                "title"
              ],
              "required": [
                "incident_id",
                "title"
              ],
              "x-apifox-ignore-properties": []
            },
            "description": "Merged incident"
          },
          "target_incident": {
            "type": "object",
            "properties": {
              "incident_id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            },
            "x-apifox-orders": [
              "incident_id",
              "title"
            ],
            "required": [
              "incident_id",
              "title"
            ],
            "description": "Target incident",
            "x-apifox-ignore-properties": []
          },
          "comment": {
            "type": "string",
            "description": "Comment"
          },
          "title": {
            "type": "string",
            "description": "New title"
          }
        },
        "x-apifox-orders": [
          "source_incidents",
          "target_incident",
          "comment",
          "title"
        ],
        "required": [
          "source_incidents",
          "target_incident",
          "comment"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/incidents"
      },
      "i_r_field": {
        "type": "object",
        "properties": {
          "field_name": {
            "type": "string",
            "title": "Field name"
          },
          "to": {
            "type": "string",
            "title": "Update value"
          }
        },
        "x-apifox-orders": [
          "field_name",
          "to"
        ],
        "required": [
          "field_name",
          "to"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/incidents"
      },
      "i_custom": {
        "type": "object",
        "properties": {
          "integration_id": {
            "type": "integer",
            "title": "Custom action integration ID"
          }
        },
        "x-apifox-orders": [
          "integration_id"
        ],
        "required": [
          "integration_id"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/incidents"
      },
      "i_a_rspd": {
        "type": "object",
        "properties": {
          "to": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "title": "New assigned member ID list"
          }
        },
        "x-apifox-orders": [
          "to"
        ],
        "required": [
          "to"
        ],
        "x-apifox-refs": {},
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/incidents"
      },
      "a_comm": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "title": "Comment"
          }
        },
        "x-apifox-orders": [
          "comment"
        ],
        "required": [
          "comment"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/alerts"
      },
      "a_new": {
        "type": "object",
        "properties": {
          "severity": {
            "type": "string",
            "title": "",
            "description": "Severity"
          },
          "status": {
            "type": "string",
            "description": "Status"
          }
        },
        "x-apifox-orders": [
          "severity",
          "status"
        ],
        "required": [
          "severity",
          "status"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/alerts"
      },
      "a_update": {
        "type": "object",
        "properties": {
          "severity": {
            "type": "string",
            "title": "",
            "description": "Severity"
          },
          "status": {
            "type": "string",
            "description": "Status"
          },
          "progress": {
            "type": "string",
            "description": "Only returned when changed"
          }
        },
        "x-apifox-orders": [
          "severity",
          "status",
          "progress"
        ],
        "required": [
          "severity",
          "status"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/alerts"
      },
      "a_close": {
        "type": "object",
        "properties": {},
        "x-apifox-orders": [],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/alerts"
      },
      "a_merge": {
        "type": "object",
        "properties": {
          "target_incident": {
            "type": "object",
            "properties": {
              "incident_id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            },
            "x-apifox-orders": [
              "incident_id",
              "title"
            ],
            "required": [
              "incident_id",
              "title"
            ],
            "description": "Target incident",
            "x-apifox-ignore-properties": []
          },
          "source_alerts": {
            "title": "",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "alert_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "x-apifox-orders": [
                "alert_id",
                "title"
              ],
              "required": [
                "alert_id",
                "title"
              ],
              "x-apifox-ignore-properties": []
            },
            "description": "Merged alert"
          },
          "comment": {
            "type": "string",
            "title": "",
            "description": "Comment"
          },
          "owner_id": {
            "type": "string",
            "description": "If exists, show new responder"
          },
          "title": {
            "type": "string",
            "description": "If exists, show new title"
          }
        },
        "x-apifox-orders": [
          "target_incident",
          "source_alerts",
          "comment",
          "owner_id",
          "title"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/alerts"
      },
      "a_m_silence": {
        "type": "object",
        "properties": {
          "rule_id": {
            "type": "string",
            "title": "Silence rule ID"
          },
          "rule_name": {
            "type": "string",
            "title": "Silence rule name"
          }
        },
        "x-apifox-orders": [
          "rule_id",
          "rule_name"
        ],
        "required": [
          "rule_id",
          "rule_name"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/alerts"
      },
      "a_m_inhibit": {
        "type": "object",
        "properties": {
          "rule_id": {
            "type": "string",
            "title": "Inhibit rule ID"
          },
          "rule_name": {
            "type": "string",
            "title": "Inhibit rule name"
          },
          "source_alert_id": {
            "type": "string",
            "title": "Source alert ID"
          },
          "source_alert_title": {
            "type": "string",
            "title": "Source alert title"
          }
        },
        "x-apifox-orders": [
          "rule_id",
          "rule_name",
          "source_alert_id",
          "source_alert_title"
        ],
        "required": [
          "rule_id",
          "source_alert_id",
          "rule_name",
          "source_alert_title"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail/alerts"
      },
      "i_m_silence": {
        "type": "object",
        "properties": {
          "silence_rule_id": {
            "type": "string",
            "title": "Silence rule ID"
          },
          "silence_rule_name": {
            "type": "string",
            "title": "Silence rule name"
          }
        },
        "x-apifox-orders": [
          "silence_rule_id",
          "silence_rule_name"
        ],
        "required": [
          "silence_rule_id",
          "silence_rule_name"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail"
      },
      "i_m_inhibit": {
        "type": "object",
        "properties": {
          "inhibit_rule_id": {
            "type": "string",
            "title": "Inhibit rule ID"
          },
          "inhibit_rule_name": {
            "type": "string",
            "title": "Inhibit rule name"
          },
          "source_incident_id": {
            "type": "string",
            "title": "Source incident ID"
          },
          "source_incident_title": {
            "type": "string",
            "title": "Source incident title"
          }
        },
        "x-apifox-orders": [
          "inhibit_rule_id",
          "inhibit_rule_name",
          "source_incident_id",
          "source_incident_title"
        ],
        "required": [
          "inhibit_rule_id",
          "source_incident_id",
          "inhibit_rule_name",
          "source_incident_title"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty/ActionDetail"
      },
      "DutyError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "title": "Error code",
            "enum": [
              "InvalidParameter",
              "InvalidContentType",
              "Unauthorized",
              "AccessDenied",
              "MethodNotAllowed",
              "RequestTooFrequently",
              "RequestVerifyRequired",
              "DangerousOperation",
              "RequestLocked",
              "RouteNotFound",
              "BalanceNotEnough",
              "UndonedOrderExist",
              "ResourceNotFound",
              "InternalError",
              "ReferenceExist"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "InvalidParameter": "Parameter error (status=400)",
                "InvalidContentType": "Content-type error (status=400)",
                "Unauthorized": "Authentication failed (status=401)",
                "AccessDenied": "Authorization failed (status=403)",
                "MethodNotAllowed": "（status=405）",
                "RequestTooFrequently": "Too many requests (status=429)",
                "RequestVerifyRequired": "Sensitive operation, requires multi-factor authentication (status=428)",
                "DangerousOperation": "Dangerous operation, requires multi-factor authentication (status=428)",
                "RequestLocked": "Too many failed sensitive operations, request locked (status=423)",
                "RouteNotFound": "Request Method+Path not matched (status=404)",
                "BalanceNotEnough": "Insufficient account balance, please recharge (status=402)",
                "UndonedOrderExist": "Unfinished order exists, wait for retry or contact customer service (status=409)",
                "ResourceNotFound": "Account has not purchased resources, please place order in billing center (status=400)",
                "InternalError": "Internal or unknown error (status=500)",
                "ReferenceExist": "Associated resources exist, deletion not allowed (status=400)"
              }
            }
          },
          "message": {
            "type": "string",
            "title": "Error description"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "x-apifox-orders": [
          "code",
          "message"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "Channel": {
        "type": "object",
        "properties": {
          "channel_id": {
            "title": "Channel ID",
            "type": "integer"
          },
          "team_id": {
            "title": "Team ID",
            "type": "integer",
            "description": "Team members have edit permission for channel"
          },
          "channel_name": {
            "type": "string",
            "title": "Channel name"
          },
          "description": {
            "type": "string",
            "title": "Channel description"
          },
          "auto_resolve_timeout": {
            "type": "integer",
            "title": "Auto-recovery timeout in seconds"
          },
          "is_private": {
            "type": "boolean",
            "title": "Private access",
            "description": "If yes, only channel creator, channel team members and account administrators can access",
            "nullable": true
          },
          "flapping": {
            "$ref": "#/components/schemas/Flapping",
            "title": "Incident convergence configuration"
          },
          "group": {
            "$ref": "#/components/schemas/Group",
            "title": "Alert grouping configuration"
          },
          "status": {
            "type": "string",
            "title": "Channel status",
            "description": "enabled, disabled, deleted",
            "enum": [
              "enabled",
              "disabled",
              "deleted"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "enabled": "Enabled",
                "disabled": "Disabled",
                "deleted": "Deleted"
              }
            }
          },
          "created_at": {
            "type": "integer",
            "title": "Created timestamp"
          },
          "updated_at": {
            "type": "integer",
            "title": "Updated timestamp"
          },
          "progress_to_incident_cnts": {
            "type": "object",
            "properties": {
              "Triggered": {
                "type": "integer",
                "title": "Open count",
                "description": "Only shows 1000 when exceeding 1000"
              },
              "Processing": {
                "type": "integer",
                "title": "Processing count",
                "description": "Only shows 1000 when exceeding 1000"
              }
            },
            "x-apifox-orders": [
              "Triggered",
              "Processing"
            ],
            "required": [
              "Triggered",
              "Processing"
            ],
            "title": "Active incident statistics",
            "x-apifox-ignore-properties": []
          },
          "active_incident_highest_severity": {
            "type": "string",
            "title": "Highest severity of active incidents",
            "description": "Field is empty or not returned if no active incidents"
          }
        },
        "x-apifox-orders": [
          "channel_id",
          "team_id",
          "channel_name",
          "description",
          "auto_resolve_timeout",
          "is_private",
          "flapping",
          "group",
          "status",
          "created_at",
          "updated_at",
          "progress_to_incident_cnts",
          "active_incident_highest_severity"
        ],
        "required": [
          "status",
          "channel_name",
          "channel_id",
          "updated_at",
          "created_at",
          "progress_to_incident_cnts",
          "active_incident_highest_severity"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "Group": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "title": "Grouping method",
            "enum": [
              "i",
              "p",
              "n"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "i": "intelligent, use intelligent algorithm for grouping",
                "p": "pattern, use custom rules for grouping",
                "n": "none, disable grouping"
              }
            }
          },
          "cases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CaseEqual"
            },
            "title": "Branch grouping dimensions",
            "description": "Only exists when using pattern grouping. Match branch conditions from top to bottom in priority, use branch dimensions for grouping when matched",
            "maxItems": 10
          },
          "equals": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "descritpion",
                  "severity",
                  "labels.xxx"
                ],
                "x-apifox": {
                  "enumDescriptions": {
                    "title": "Alert title",
                    "descritpion": "Alert description",
                    "severity": "Severity",
                    "labels.xxx": "Any label"
                  }
                },
                "description": "Length not exceeding 5"
              },
              "description": "OR relationship between sets, AND relationship within set"
            },
            "title": "Default grouping dimensions",
            "description": "Only exists when using pattern grouping. If no branch matches, use these dimensions as fallback. Note these are multiple sets of grouping dimensions, alerts will be grouped if any set of dimensions matches",
            "maxItems": 5
          },
          "all_equals_required": {
            "type": "boolean",
            "title": "Whether equal items must all exist",
            "description": "Only exists when using pattern grouping. Defaults to false. The difference when configuring multiple equal items: - When enabled, grouping conditions where values are both empty in alert and incident will be treated as different items. - When disabled, grouping conditions where values are both empty in alert and incident will be treated as same items."
          },
          "time_window": {
            "type": "integer",
            "title": "Time window in minutes, range [0,60]",
            "description": "0 means keep merging alerts until incident closes"
          },
          "storm_threshold": {
            "type": "integer",
            "title": "Storm threshold, trigger storm warning when aggregated alert count exceeds this value. Range [0,10000]",
            "description": "0 means no storm warning"
          }
        },
        "x-apifox-orders": [
          "method",
          "cases",
          "equals",
          "all_equals_required",
          "time_window",
          "storm_threshold"
        ],
        "required": [
          "method"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "CaseEqual": {
        "type": "object",
        "properties": {
          "if": {
            "$ref": "#/components/schemas/AndFilters",
            "title": "Matching conditions"
          },
          "equals": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Equal items"
          }
        },
        "x-apifox-orders": [
          "if",
          "equals"
        ],
        "required": [
          "if",
          "equals"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "AndFilters": {
        "type": "array",
        "items": {
          "description": "Inner conditions",
          "$ref": "#/components/schemas/Filter"
        },
        "description": "Outer conditions, AND relationship between conditions",
        "x-apifox-folder": "Flashduty"
      },
      "Filter": {
        "type": "object",
        "properties": {
          "key": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "title",
                  "description",
                  "severity",
                  "data_source_id"
                ],
                "x-apifox": {
                  "enumDescriptions": {
                    "title": "Title",
                    "description": "Description",
                    "severity": "Severity",
                    "data_source_id": "Integration ID"
                  }
                },
                "title": "Attribute"
              },
              {
                "type": "string",
                "title": "Label",
                "pattern": "^labels\\..+$"
              }
            ],
            "title": "Attribute or label",
            "description": "Items prefixed with labels. are labels, others are attributes, like title, severity, description etc."
          },
          "oper": {
            "type": "string",
            "title": "Operation type",
            "description": "Supports equals: IN, not equals: NOTIN",
            "enum": [
              "IN",
              "NOTIN"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "IN": "Match",
                "NOTIN": "Not match"
              }
            }
          },
          "vals": {
            "title": "Value range",
            "description": "When oper=IN, match succeeds if any value matches; when oper=NOTIN, match fails if any value doesn't match. Label values support exact (string), regex (string with '/' prefix and suffix) and wildcard (string containing '*' and '?' but not regex) matching. Example: You can specify ('datacenter' IN ['bj01','sh-*','']) AND ('host' IN '/api-server-\\d+/') to associate alerts from data centers 'bj01' and 'sh-01','sh-02' with hostname matching regex 'api-server-\\d+'",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "x-apifox-orders": [
          "key",
          "oper",
          "vals"
        ],
        "required": [
          "key",
          "vals",
          "oper"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "Flapping": {
        "type": "object",
        "properties": {
          "max_changes": {
            "type": "string",
            "title": "Maximum occurrence count of same incident within time window",
            "enum": [
              "i",
              "p",
              "n"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "i": "intelligent, use intelligent algorithm for grouping",
                "p": "pattern, use custom rules for grouping",
                "n": "none, disable grouping"
              }
            },
            "description": "Range [2,100], default 4. When dedup_key is same, incidents are considered same. dedup_key comes from alert_key of first merged alert"
          },
          "in_mins": {
            "type": "integer",
            "title": "Statistics time window in minutes",
            "description": "Range [1,1440], default 60"
          },
          "mute_mins": {
            "type": "integer",
            "title": "Silence time window in minutes",
            "description": "Range [30,1440], default 120"
          }
        },
        "x-apifox-orders": [
          "max_changes",
          "in_mins",
          "mute_mins"
        ],
        "required": [
          "max_changes",
          "in_mins",
          "mute_mins"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "Template": {
        "type": "object",
        "properties": {
          "template_id": {
            "type": "string",
            "title": "channel ID"
          },
          "team_id": {
            "title": "Team ID",
            "type": "integer"
          },
          "account_id": {
            "type": "integer",
            "title": "Account ID"
          },
          "template_name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "email": {
            "type": "string",
            "title": "Email template"
          },
          "sms": {
            "type": "string",
            "title": "SMS template"
          },
          "feishu": {
            "type": "string",
            "title": "Feishu/Lark bot"
          },
          "dingtalk": {
            "type": "string",
            "title": "Dingtalk bot"
          },
          "wecom": {
            "type": "string",
            "title": "WeCom bot"
          },
          "feishu_app": {
            "type": "string",
            "title": "Feishu/Lark app"
          },
          "dingtalk_app": {
            "type": "string",
            "title": "Dingtalk app"
          },
          "wecom_app": {
            "type": "string",
            "title": "WeCom app"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "enabled, disabled, deleted",
            "enum": [
              "enabled",
              "disabled",
              "deleted"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "enabled": "Enabled",
                "disabled": "Disabled",
                "deleted": "Deleted"
              }
            }
          },
          "creator_id": {
            "type": "integer",
            "title": "Creator ID",
            "description": "If no one in responsible team, can only rely on creator for management"
          },
          "updated_by": {
            "type": "integer",
            "title": "Updater ID"
          },
          "created_at": {
            "type": "integer",
            "title": "Created timestamp"
          },
          "updated_at": {
            "type": "integer",
            "title": "Updated timestamp"
          }
        },
        "x-apifox-orders": [
          "template_id",
          "team_id",
          "account_id",
          "template_name",
          "description",
          "email",
          "sms",
          "feishu",
          "dingtalk",
          "wecom",
          "feishu_app",
          "dingtalk_app",
          "wecom_app",
          "status",
          "creator_id",
          "updated_by",
          "created_at",
          "updated_at"
        ],
        "required": [
          "status",
          "template_name",
          "template_id",
          "updated_at",
          "created_at",
          "creator_id",
          "account_id",
          "updated_by"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "SubscribeRule": {
        "type": "object",
        "properties": {
          "channel_id": {
            "title": "Responsible team ID",
            "type": "integer"
          },
          "rule_id": {
            "type": "string",
            "title": "If 0, only creator and owner account can modify configuration"
          },
          "rule_name": {
            "type": "string",
            "title": "Field ID"
          },
          "description": {
            "type": "string",
            "title": "Account ID"
          },
          "filters": {
            "title": "Field name",
            "$ref": "#/components/schemas/OrFilters"
          },
          "status": {
            "type": "string",
            "title": "Display name",
            "enum": [
              "enabled",
              "disabled",
              "deleted"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "enabled": "Description",
                "disabled": "Field type",
                "deleted": "Input box"
              }
            }
          },
          "created_at": {
            "type": "string",
            "title": "Single select"
          },
          "updated_at": {
            "type": "string",
            "title": "Multiple select"
          },
          "updated_by": {
            "type": "integer"
          }
        },
        "x-apifox-orders": [
          "channel_id",
          "rule_id",
          "rule_name",
          "description",
          "filters",
          "status",
          "created_at",
          "updated_at",
          "updated_by"
        ],
        "required": [
          "channel_id",
          "status",
          "updated_at",
          "created_at",
          "description",
          "filters",
          "updated_by",
          "rule_id",
          "rule_name"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "OrFilters": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AndFilters",
          "title": "Checkbox"
        },
        "description": "Value type",
        "x-apifox-folder": "Flashduty"
      },
      "UnsubscribeRule": {
        "type": "object",
        "properties": {
          "channel_id": {
            "title": "String",
            "type": "integer"
          },
          "rule_id": {
            "type": "string",
            "title": "Boolean"
          },
          "rule_name": {
            "type": "string",
            "title": "Optional values"
          },
          "description": {
            "type": "string",
            "title": "Array elements must be unique and type must match value_type definition"
          },
          "filters": {
            "title": "Status",
            "$ref": "#/components/schemas/OrFilters"
          },
          "status": {
            "type": "string",
            "title": "Enabled",
            "enum": [
              "enabled",
              "disabled",
              "deleted"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "enabled": "Disabled",
                "disabled": "Deleted",
                "deleted": "Creator ID"
              }
            }
          },
          "created_at": {
            "type": "string",
            "title": "Updater ID"
          },
          "updated_at": {
            "type": "string",
            "title": "Created timestamp"
          },
          "updated_by": {
            "type": "integer"
          }
        },
        "x-apifox-orders": [
          "channel_id",
          "rule_id",
          "rule_name",
          "description",
          "filters",
          "status",
          "created_at",
          "updated_at",
          "updated_by"
        ],
        "required": [
          "channel_id",
          "status",
          "updated_at",
          "created_at",
          "description",
          "filters",
          "updated_by",
          "rule_id",
          "rule_name"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "SilenceRule": {
        "type": "object",
        "properties": {
          "channel_id": {
            "title": "Updated timestamp",
            "type": "integer"
          },
          "rule_id": {
            "type": "string",
            "title": "Responsible team ID, if 0 means only creator and owner account can modify configuration",
            "description": "Calendar ID"
          },
          "rule_name": {
            "type": "string",
            "title": "Calendar name, length limit [1,40] bytes",
            "description": "Calendar description, length limit [1,500] bytes"
          },
          "description": {
            "type": "string",
            "title": "Calendar type"
          },
          "from_incident_id": {
            "type": "string",
            "title": "Tenant calendar, not public"
          },
          "filters": {
            "title": "Regional statutory holidays",
            "$ref": "#/components/schemas/OrFilters"
          },
          "time_filter": {
            "type": "object",
            "properties": {
              "start_time": {
                "type": "integer"
              },
              "end_time": {
                "type": "integer"
              }
            },
            "x-apifox-orders": [
              "start_time",
              "end_time"
            ],
            "title": "Example value: \"Asia/Shanghai\"",
            "x-apifox-ignore-properties": []
          },
          "time_filters": {
            "type": "array",
            "items": {
              "x-apifox-overrides": {},
              "type": "object",
              "x-apifox-refs": {
                "01H2AH2B8BKY1BAKMQJ0EM0B7A": {
                  "$ref": "#/components/schemas/TimeFilter",
                  "x-apifox-overrides": {}
                }
              },
              "properties": {
                "start": {
                  "title": "Calendar timezone, format requirement: must match timezone definition in IANA Time Zone Database",
                  "type": "string",
                  "description": "Sunday"
                },
                "end": {
                  "title": "Monday",
                  "type": "string",
                  "description": "Tuesday"
                },
                "repeat": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "description": "Wednesday",
                    "enum": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "0": "Thursday",
                        "1": "Friday",
                        "2": "Saturday",
                        "3": "Wednesday",
                        "4": "Thursday",
                        "5": "Friday",
                        "6": "Saturday"
                      }
                    }
                  },
                  "title": "Week mode, weekday list",
                  "description": "Mutually exclusive with calendar mode parameters, only one can exist"
                },
                "cal_id": {
                  "type": "string",
                  "title": "Calendar mode, calendar ID",
                  "description": "Mutually exclusive with week mode parameters, only one can exist"
                },
                "is_off": {
                  "type": "boolean",
                  "title": "Calendar mode, whether it's a rest day",
                  "description": "true for rest day"
                }
              },
              "x-apifox-orders": [
                "01H2AH2B8BKY1BAKMQJ0EM0B7A"
              ],
              "required": [
                "start",
                "end"
              ],
              "x-apifox-ignore-properties": [
                "start",
                "end",
                "repeat",
                "cal_id",
                "is_off"
              ]
            },
            "title": "Recurring time filter"
          },
          "is_directly_discard": {
            "type": "boolean",
            "title": "Whether to directly discard matching alerts, default keep"
          },
          "is_effective": {
            "type": "boolean",
            "title": "Whether effective",
            "description": "Check if current time meets time conditions"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "enum": [
              "enabled",
              "disabled",
              "deleted"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "enabled": "Enabled",
                "disabled": "Disabled",
                "deleted": "Deleted"
              }
            }
          },
          "created_at": {
            "type": "string",
            "title": "Created timestamp"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated timestamp"
          },
          "updated_by": {
            "type": "integer"
          }
        },
        "x-apifox-orders": [
          "channel_id",
          "rule_id",
          "rule_name",
          "description",
          "from_incident_id",
          "filters",
          "time_filter",
          "time_filters",
          "is_directly_discard",
          "is_effective",
          "status",
          "created_at",
          "updated_at",
          "updated_by"
        ],
        "required": [
          "channel_id",
          "status",
          "updated_at",
          "created_at",
          "description",
          "filters",
          "time_filter",
          "updated_by",
          "time_filters",
          "is_effective",
          "rule_id",
          "rule_name"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "TimeFilter": {
        "type": "object",
        "properties": {
          "start": {
            "title": "Start time, less than end",
            "type": "string",
            "description": "Precision to minute, like 10:00"
          },
          "end": {
            "title": "End time",
            "type": "string",
            "description": "Precision to minute, like 23:59"
          },
          "repeat": {
            "type": "array",
            "items": {
              "type": "integer",
              "description": "0=Sunday, 1,2,3,4,5,6",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ],
              "x-apifox": {
                "enumDescriptions": {
                  "0": "Sunday",
                  "1": "Monday",
                  "2": "Tuesday",
                  "3": "Wednesday",
                  "4": "Thursday",
                  "5": "Friday",
                  "6": "Saturday"
                }
              }
            },
            "title": "Week mode, weekday list",
            "description": "Mutually exclusive with calendar mode parameters, only one can exist"
          },
          "cal_id": {
            "type": "string",
            "title": "Calendar mode, calendar ID",
            "description": "Mutually exclusive with week mode parameters, only one can exist"
          },
          "is_off": {
            "type": "boolean",
            "title": "Calendar mode, whether it's a rest day",
            "description": "true for rest day"
          }
        },
        "x-apifox-orders": [
          "start",
          "end",
          "repeat",
          "cal_id",
          "is_off"
        ],
        "required": [
          "start",
          "end"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "InhibitRule": {
        "type": "object",
        "properties": {
          "channel_id": {
            "title": "Channel",
            "type": "integer"
          },
          "rule_id": {
            "type": "string",
            "title": "Rule ID"
          },
          "rule_name": {
            "type": "string",
            "title": "Rule name"
          },
          "description": {
            "type": "string",
            "title": "Rule description"
          },
          "source_filters": {
            "title": "Matching conditions",
            "$ref": "#/components/schemas/OrFilters"
          },
          "target_filters": {
            "title": "Matching conditions",
            "$ref": "#/components/schemas/OrFilters"
          },
          "equals": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Equal items",
            "description": "Items prefixed with label. are labels, others are attributes"
          },
          "is_directly_discard": {
            "type": "boolean",
            "title": "Whether to directly discard matching alerts"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "enum": [
              "enabled",
              "disabled",
              "deleted"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "enabled": "Enabled",
                "disabled": "Disabled",
                "deleted": "Deleted"
              }
            }
          },
          "created_at": {
            "type": "string",
            "title": "Created timestamp"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated timestamp"
          },
          "updated_by": {
            "type": "integer",
            "title": "Last modifier ID"
          }
        },
        "x-apifox-orders": [
          "channel_id",
          "rule_id",
          "rule_name",
          "description",
          "source_filters",
          "target_filters",
          "equals",
          "is_directly_discard",
          "status",
          "created_at",
          "updated_at",
          "updated_by"
        ],
        "required": [
          "channel_id",
          "status",
          "updated_at",
          "created_at",
          "description",
          "source_filters",
          "target_filters",
          "equals",
          "updated_by",
          "rule_id",
          "rule_name"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "PageQuery": {
        "type": "object",
        "properties": {
          "p": {
            "type": "integer",
            "title": "Page number, starts from 1"
          },
          "limit": {
            "type": "integer",
            "title": "Items per page"
          },
          "asc": {
            "title": "Ascending order",
            "type": "boolean"
          }
        },
        "x-apifox-orders": [
          "p",
          "limit",
          "asc"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "CardView": {
        "type": "object",
        "properties": {
          "view_id": {
            "title": "Channel",
            "type": "string"
          },
          "view_name": {
            "type": "string",
            "title": "View name"
          },
          "priority": {
            "title": "Priority",
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "title": "Created timestamp"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated timestamp"
          },
          "equals": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "labels.{x}",
                "severity",
                "title"
              ],
              "x-apifox": {
                "enumDescriptions": {
                  "labels.{x}": "x can be any label",
                  "severity": "Severity",
                  "title": "Title"
                }
              }
            },
            "title": "Equal items",
            "description": "Items prefixed with labels. are labels, others are attributes, supports integration data_source_id, severity alert_severity, title, alert status alert_status"
          }
        },
        "x-apifox-orders": [
          "view_id",
          "view_name",
          "priority",
          "created_at",
          "updated_at",
          "equals"
        ],
        "required": [
          "view_id",
          "updated_at",
          "created_at",
          "equals",
          "view_name"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "Alert": {
        "type": "object",
        "properties": {
          "alert_id": {
            "type": "string",
            "title": "Alert ID"
          },
          "channel_id": {
            "title": "Channel ID",
            "type": "integer"
          },
          "channel_name": {
            "type": "string",
            "title": "Channel name"
          },
          "data_source_id": {
            "title": "Integration ID",
            "type": "integer"
          },
          "data_source_name": {
            "type": "string",
            "title": "Integration name"
          },
          "data_source_type": {
            "type": "string",
            "title": "Integration type"
          },
          "data_source_ref_id": {
            "type": "string",
            "title": "Integration association ID"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "title_rule": {
            "type": "string",
            "title": "Title rule"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "alert_key": {
            "type": "string",
            "title": "Event correlation basis",
            "description": "Alerts with same alert_key will be merged into one alert"
          },
          "alert_severity": {
            "type": "string",
            "title": "Severity",
            "enum": [
              "Info",
              "Warning",
              "Critical"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "Info": "Info",
                "Warning": "Warning",
                "Critical": "Critical"
              }
            }
          },
          "alert_status": {
            "type": "string",
            "title": "Alert status",
            "enum": [
              "Info",
              "Warning",
              "Critical",
              "Ok"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "Info": "Info",
                "Warning": "Warning",
                "Critical": "Critical",
                "Ok": "Recovered"
              }
            }
          },
          "progress": {
            "type": "string",
            "title": "Processing progress",
            "enum": [
              "Triggered",
              "Processing",
              "Closed"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "Triggered": "Triggered",
                "Processing": "Processing",
                "Closed": "Closed"
              }
            }
          },
          "start_time": {
            "title": "First trigger time",
            "type": "integer",
            "description": "Alert may frequently occur and recover, this is the first trigger time"
          },
          "last_time": {
            "title": "Last merged event time",
            "type": "integer",
            "description": "Only updated when merging new alert events, different from updated_at"
          },
          "end_time": {
            "title": "Alert end time",
            "type": "integer",
            "description": "Updated when alert recovers. For auto-recovery, alert will auto-close and close_time will be updated simultaneously"
          },
          "close_time": {
            "type": "integer",
            "title": "Manual closure time",
            "description": "Closure does not affect alert recovery"
          },
          "created_at": {
            "type": "integer",
            "title": "Created time",
            "description": "Database record creation time, generally same as start_time"
          },
          "updated_at": {
            "type": "integer",
            "title": "Updated time",
            "description": "Database record update time, different from last_time, this field will be updated for both manual and automatic alert updates"
          },
          "labels": {
            "title": "Label list",
            "$ref": "#/components/schemas/Labels",
            "x-apifox-overrides": {}
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertEvent",
              "x-apifox-overrides": {}
            },
            "title": "Associated events"
          },
          "responder_id": {
            "type": "integer",
            "title": "Responder ID"
          },
          "incident": {
            "type": "object",
            "properties": {
              "incident_id": {
                "type": "string",
                "title": "Incident ID"
              },
              "title": {
                "type": "string",
                "title": "Incident title"
              }
            },
            "x-apifox-orders": [
              "incident_id",
              "title"
            ],
            "required": [
              "incident_id",
              "title"
            ],
            "title": "Associated incident",
            "x-apifox-ignore-properties": []
          },
          "event_cnt": {
            "type": "integer",
            "title": "Cumulative aggregated event count"
          },
          "ever_muted": {
            "type": "boolean",
            "title": "Whether has been silenced/inhibited"
          }
        },
        "x-apifox-orders": [
          "alert_id",
          "channel_id",
          "channel_name",
          "data_source_id",
          "data_source_name",
          "data_source_type",
          "data_source_ref_id",
          "title",
          "title_rule",
          "description",
          "alert_key",
          "alert_severity",
          "alert_status",
          "progress",
          "start_time",
          "last_time",
          "end_time",
          "close_time",
          "created_at",
          "updated_at",
          "labels",
          "events",
          "responder_id",
          "incident",
          "event_cnt",
          "ever_muted"
        ],
        "required": [
          "alert_id",
          "data_source_id",
          "title",
          "alert_key",
          "last_time",
          "start_time",
          "alert_status",
          "alert_severity",
          "labels",
          "progress",
          "data_source_name",
          "channel_name",
          "channel_id",
          "data_source_type",
          "data_source_ref_id",
          "updated_at",
          "created_at"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "AlertEvent": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string",
            "title": "Event ID"
          },
          "data_source_id": {
            "type": "integer",
            "title": "Integration ID"
          },
          "channel_id": {
            "type": "integer",
            "title": "Channel ID"
          },
          "title": {
            "type": "string",
            "title": "Event title"
          },
          "title_rule": {
            "type": "string",
            "title": "Title rule"
          },
          "description": {
            "type": "string",
            "title": "Event description"
          },
          "alert_id": {
            "type": "string",
            "title": "Alert ID"
          },
          "event_status": {
            "type": "string",
            "title": "Event status",
            "enum": [
              "Info",
              "Warning",
              "Critical",
              "Ok"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "Info": "Info",
                "Warning": "Warning",
                "Critical": "Critical",
                "Ok": "Recovered"
              }
            }
          },
          "event_severity": {
            "type": "string",
            "title": "Event severity",
            "enum": [
              "Info",
              "Warning",
              "Critical"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "Info": "Info",
                "Warning": "Warning",
                "Critical": "Critical"
              }
            }
          },
          "event_time": {
            "type": "integer",
            "title": "Triggered at"
          },
          "labels": {
            "title": "Label list",
            "$ref": "#/components/schemas/Labels",
            "x-apifox-overrides": {}
          }
        },
        "x-apifox-orders": [
          "event_id",
          "data_source_id",
          "channel_id",
          "title",
          "title_rule",
          "description",
          "alert_id",
          "event_status",
          "event_severity",
          "event_time",
          "labels"
        ],
        "required": [
          "event_id",
          "event_status",
          "alert_id",
          "title",
          "data_source_id",
          "event_severity",
          "title_rule",
          "event_time",
          "description",
          "channel_id"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "Labels": {
        "type": "object",
        "patternProperties": {
          "^[a-zA-Z_][a-zA-Z0-9_]*$": {
            "type": "string",
            "title": "key can be any label name, value is string",
            "description": "label format must match regex ^[a-zA-Z_][a-zA-Z0-9_]*$, value length must not exceed 512 bytes",
            "maxLength": 512
          }
        },
        "x-apifox-orders": [],
        "properties": {},
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "ChangeEvent": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string",
            "description": "Event ID"
          },
          "data_source_id": {
            "type": "integer",
            "description": "Integration ID"
          },
          "title": {
            "type": "string",
            "description": "Event title"
          },
          "description": {
            "type": "string",
            "description": "Event description"
          },
          "change_key": {
            "type": "string",
            "description": "Change number"
          },
          "change_status": {
            "type": "string",
            "enum": [
              "Planned",
              "Ready",
              "Processing",
              "Canceled",
              "Done"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "Planned": "Planned",
                "Ready": "About to start",
                "Processing": "In progress",
                "Canceled": "Cancelled",
                "Done": "Ended"
              }
            },
            "description": "Change status"
          },
          "link": {
            "type": "string",
            "description": "Link"
          },
          "event_time": {
            "type": "integer",
            "description": "Trigger time in seconds"
          },
          "labels": {
            "title": "Label list",
            "$ref": "#/components/schemas/Labels",
            "x-apifox-overrides": {}
          }
        },
        "x-apifox-orders": [
          "event_id",
          "data_source_id",
          "title",
          "description",
          "change_key",
          "change_status",
          "link",
          "event_time",
          "labels"
        ],
        "required": [
          "event_id",
          "change_key",
          "title",
          "data_source_id",
          "event_time",
          "link",
          "change_status"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "Change": {
        "type": "object",
        "properties": {
          "change_id": {
            "type": "string",
            "title": "Change ID"
          },
          "data_source_id": {
            "title": "Integration ID",
            "type": "integer"
          },
          "data_source_name": {
            "type": "string",
            "title": "Integration name"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "change_key": {
            "type": "string",
            "title": "Unique key"
          },
          "change_status": {
            "type": "string",
            "title": "Status",
            "enum": [
              "Planned",
              "Ready",
              "Processing",
              "Canceled",
              "Done"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "Planned": "Planned",
                "Ready": "About to start",
                "Processing": "In progress",
                "Canceled": "Cancelled",
                "Done": "Ended"
              }
            }
          },
          "start_time": {
            "title": "Start timestamp",
            "type": "integer"
          },
          "last_time": {
            "title": "Last merged event timestamp",
            "type": "integer"
          },
          "end_time": {
            "title": "End timestamp",
            "type": "integer"
          },
          "labels": {
            "title": "Label list",
            "$ref": "#/components/schemas/Labels",
            "x-apifox-overrides": {}
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeEvent"
            },
            "title": "Associated change events"
          }
        },
        "x-apifox-orders": [
          "change_id",
          "data_source_id",
          "data_source_name",
          "title",
          "description",
          "change_key",
          "change_status",
          "start_time",
          "last_time",
          "end_time",
          "labels",
          "events"
        ],
        "required": [
          "change_id",
          "change_key",
          "title",
          "data_source_id",
          "start_time",
          "change_status",
          "end_time",
          "last_time",
          "data_source_name"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "MemberItemShort": {
        "type": "object",
        "properties": {
          "MemberID": {
            "type": "integer",
            "description": "Member ID"
          },
          "MemberName": {
            "type": "string",
            "description": "Member name"
          }
        },
        "x-apifox-orders": [
          "MemberID",
          "MemberName"
        ],
        "required": [
          "MemberID",
          "MemberName"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "Incident": {
        "type": "object",
        "properties": {
          "incident_id": {
            "type": "string",
            "title": "Incident ID"
          },
          "start_time": {
            "type": "integer",
            "title": "Start timestamp in seconds",
            "description": "Unit: seconds"
          },
          "end_time": {
            "title": "End timestamp in seconds",
            "type": "integer",
            "description": "When incident auto-recovers, this value is non-zero; when manually closing incident, this value may be 0"
          },
          "last_time": {
            "type": "integer",
            "title": "Start timestamp of last alert in seconds"
          },
          "ack_time": {
            "type": "integer",
            "title": "First acknowledgment timestamp in seconds",
            "description": "If multiple people acknowledge the alert, this field is the first acknowledgment time. If acknowledgment is cancelled, this value resets to 0"
          },
          "close_time": {
            "type": "integer",
            "title": "Manual closure timestamp in seconds",
            "description": "When incident auto-recovers, the incident will also auto-close"
          },
          "snoozed_before": {
            "type": "integer",
            "title": "Snooze timestamp in seconds",
            "description": "Resets to 0 when unclose or unacknowledge"
          },
          "incident_status": {
            "type": "string",
            "title": "Incident status",
            "description": "Enum values: Info, Warning, Critical, Ok",
            "enum": [
              "Info",
              "Warning",
              "Critical",
              "Ok"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "Info": "Info",
                "Warning": "Warning",
                "Critical": "Critical",
                "Ok": "Recovered"
              }
            }
          },
          "incident_severity": {
            "type": "string",
            "title": "Severity",
            "description": "Enum values: Info, Warning, Critical",
            "enum": [
              "Info",
              "Warning",
              "Critical"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "Info": "Info",
                "Warning": "Warning",
                "Critical": "Critical"
              }
            }
          },
          "progress": {
            "type": "string",
            "title": "Processing progress",
            "description": "Enum values: Triggered, Processing, Closed",
            "enum": [
              "Triggered",
              "Processing",
              "Closed"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "Triggered": "Triggered",
                "Processing": "Processing",
                "Closed": "Closed"
              }
            }
          },
          "creator_id": {
            "title": "Creator ID",
            "type": "integer"
          },
          "closer_id": {
            "type": "integer",
            "title": "Closer ID"
          },
          "assigned_to": {
            "title": "Assignment information",
            "description": "Last manual or automatic assignment information, updated when escalation or reassignment occurs",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Assignment"
              },
              {
                "type": "null"
              }
            ]
          },
          "responders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responder"
            },
            "title": "Responder ID list",
            "description": "This value has no absolute relationship with assigned_to, may be updated when someone directly acknowledges or closes the incident"
          },
          "alert_cnt": {
            "title": "Associated alert count",
            "type": "integer"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "impact": {
            "type": "string",
            "title": "Impact"
          },
          "root_cause": {
            "type": "string",
            "title": "Root cause"
          },
          "resolution": {
            "type": "string",
            "title": "Resolution"
          },
          "num": {
            "type": "string",
            "title": "Short identifier",
            "description": "May be duplicate"
          },
          "labels": {
            "anyOf": [
              {
                "title": "Label list",
                "$ref": "#/components/schemas/Labels",
                "x-apifox-overrides": {}
              },
              {
                "type": "null"
              }
            ]
          },
          "channel_id": {
            "type": "integer",
            "title": "Channel ID",
            "description": "0 represents global incident"
          },
          "channel_name": {
            "type": "string",
            "title": "Channel name"
          },
          "data_source_id": {
            "type": "integer",
            "title": "Integration source",
            "description": "Integration source of first alert aggregated into the incident"
          },
          "data_source_type": {
            "type": "string",
            "title": "Integration type",
            "description": "Integration type of first alert aggregated into the incident"
          },
          "dedup_key": {
            "type": "string",
            "title": "Incident deduplication key",
            "description": "alert_key of first alert aggregated into the incident"
          },
          "group_method": {
            "type": "string",
            "enum": [
              "i",
              "p",
              "n"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "i": "intelligent, intelligent grouping",
                "p": "pattern, rule-based grouping",
                "n": "none, no grouping"
              }
            },
            "title": "Grouping method"
          },
          "ever_muted": {
            "type": "boolean",
            "title": "Whether has been inhibited",
            "description": "Whether has been silenced, converged, or inhibited before"
          },
          "frequency": {
            "type": "string",
            "title": "Trigger frequency",
            "description": "If rare, means only occurred once in 30 days. If frequent, means occurred at least 20 times in 30 days"
          }
        },
        "x-apifox-orders": [
          "incident_id",
          "start_time",
          "end_time",
          "last_time",
          "ack_time",
          "close_time",
          "snoozed_before",
          "incident_status",
          "incident_severity",
          "progress",
          "creator_id",
          "closer_id",
          "assigned_to",
          "responders",
          "alert_cnt",
          "title",
          "description",
          "impact",
          "root_cause",
          "resolution",
          "num",
          "labels",
          "channel_id",
          "channel_name",
          "data_source_id",
          "data_source_type",
          "dedup_key",
          "group_method",
          "ever_muted",
          "frequency"
        ],
        "required": [
          "incident_id",
          "incident_status",
          "start_time",
          "incident_severity",
          "progress",
          "creator_id",
          "title",
          "last_time",
          "end_time",
          "snoozed_before"
        ],
        "title": "",
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "Responder": {
        "type": "object",
        "properties": {
          "person_id": {
            "type": "integer",
            "title": "Member ID"
          },
          "assigned_at": {
            "type": "integer",
            "title": "Assignment time"
          },
          "acknowledged_at": {
            "type": "integer",
            "title": "Acknowledgment time",
            "description": "0 means this person has not acknowledged"
          }
        },
        "x-apifox-orders": [
          "person_id",
          "assigned_at",
          "acknowledged_at"
        ],
        "required": [
          "person_id",
          "acknowledged_at",
          "assigned_at"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "IncidentAction": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "integer",
            "title": "Operation time",
            "description": "Note this is in milliseconds"
          },
          "creator_id": {
            "title": "Operator",
            "description": "0 represents system",
            "type": "integer"
          },
          "type": {
            "type": "string",
            "title": "Operation type",
            "enum": [
              "i_comm",
              "i_notify",
              "i_new",
              "i_assign",
              "i_a_rspd",
              "i_ack",
              "i_unack",
              "i_snooze",
              "i_wake",
              "i_rslv",
              "i_reopen",
              "i_merge",
              "i_m_silence",
              "i_m_inhibat",
              "i_m_flapping",
              "i_storm",
              "i_r_rc",
              "i_r_desc",
              "i_r_rsltn",
              "i_r_resp",
              "i_r_impact",
              "i_r_title",
              "i_r_severity",
              "i_r_field",
              "i_custom"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "i_comm": "Incident.Comment",
                "i_notify": "Incident.Notification",
                "i_new": "Incident.Trigger",
                "i_assign": "Incident.Assignment",
                "i_a_rspd": "Incident.AddResponders",
                "i_ack": "Incident.StartProcessing",
                "i_unack": "Incident.CancelProcessing",
                "i_snooze": "Incident.Snooze",
                "i_wake": "Incident.Unsnooze",
                "i_rslv": "Incident.Resolve",
                "i_reopen": "Incident.Reopen",
                "i_merge": "Incident.Merge",
                "i_m_silence": "Incident.TriggerSilence",
                "i_m_inhibat": "Incident.TriggerInhibit",
                "i_m_flapping": "Incident.TriggerConvergence",
                "i_storm": "Incident.TriggerStorm",
                "i_r_rc": "Incident.UpdateRootCause",
                "i_r_desc": "Incident.UpdateDescription",
                "i_r_rsltn": "Incident.UpdateResolution",
                "i_r_resp": "Incident.UpdateResponders",
                "i_r_impact": "Incident.UpdateImpact",
                "i_r_title": "Incident.UpdateTitle",
                "i_r_severity": "Incident.UpdateSeverity",
                "i_r_field": "Incident.UpdateCustomField",
                "i_custom": "Incident.TriggerCustomAction"
              }
            }
          },
          "detail": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/i_comm"
              },
              {
                "$ref": "#/components/schemas/i_notify"
              },
              {
                "$ref": "#/components/schemas/i_new"
              },
              {
                "$ref": "#/components/schemas/i_assign"
              },
              {
                "$ref": "#/components/schemas/i_a_rspd"
              },
              {
                "$ref": "#/components/schemas/i_ack"
              },
              {
                "$ref": "#/components/schemas/i_unack"
              },
              {
                "$ref": "#/components/schemas/i_snooze"
              },
              {
                "$ref": "#/components/schemas/i_wake"
              },
              {
                "$ref": "#/components/schemas/i_rslv"
              },
              {
                "$ref": "#/components/schemas/i_reopen"
              },
              {
                "$ref": "#/components/schemas/i_merge"
              },
              {
                "$ref": "#/components/schemas/i_m_silence"
              },
              {
                "$ref": "#/components/schemas/i_m_inhibit"
              },
              {
                "$ref": "#/components/schemas/i_m_flapping"
              },
              {
                "$ref": "#/components/schemas/i_storm"
              },
              {
                "$ref": "#/components/schemas/i_r_rc"
              },
              {
                "$ref": "#/components/schemas/i_r_desc"
              },
              {
                "$ref": "#/components/schemas/i_r_rsltn"
              },
              {
                "$ref": "#/components/schemas/i_r_impact"
              },
              {
                "$ref": "#/components/schemas/i_r_title"
              },
              {
                "$ref": "#/components/schemas/i_r_severity"
              },
              {
                "$ref": "#/components/schemas/i_r_field"
              },
              {
                "$ref": "#/components/schemas/i_custom"
              }
            ],
            "title": "Operation details",
            "description": "Each type corresponds to different content, please parse according to operation type"
          }
        },
        "x-apifox-orders": [
          "created_at",
          "creator_id",
          "type",
          "detail"
        ],
        "required": [
          "created_at",
          "type",
          "creator_id",
          "detail"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "Reference": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "title": "Associated resource type",
            "enum": [
              "schedule",
              "team",
              "escalate_rule",
              "silence_rule",
              "channel",
              "template",
              "integration",
              "calendar"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "schedule": "Schedule",
                "team": "Team",
                "escalate_rule": "Escalation rule",
                "silence_rule": "Silence rule",
                "channel": "Channel",
                "template": "Template",
                "integration": "Integration",
                "calendar": "Calendar"
              }
            }
          },
          "href": {
            "type": "string",
            "title": "Associated resource jump link"
          },
          "name": {
            "type": "string",
            "title": "Associated resource name"
          }
        },
        "x-apifox-orders": [
          "kind",
          "href",
          "name"
        ],
        "required": [
          "kind",
          "href",
          "name"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "MemberItem": {
        "type": "object",
        "properties": {
          "member_id": {
            "type": "integer",
            "title": "id"
          },
          "member_name": {
            "type": "string",
            "title": "Name"
          },
          "phone": {
            "type": "string",
            "title": "Encrypted phone number"
          },
          "phone_verified": {
            "type": "string",
            "title": "Phone verified"
          },
          "email": {
            "type": "string",
            "title": "Plain text email address"
          },
          "email_verified": {
            "type": "string",
            "title": "Email verified"
          },
          "account_role_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "title": "Role ID list"
          },
          "time_zone": {
            "type": "string",
            "default": "Asia/Shanghai",
            "description": "Must be in tzdata format. Please refer to [this list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) for acceptable values.",
            "title": "Default timezone"
          },
          "locale": {
            "type": "string",
            "enum": [
              "zh-CN",
              "en-US"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "zh-CN": "Simplified Chinese",
                "en-US": "English"
              }
            },
            "title": "Default language"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "integer",
            "title": "Created timestamp"
          },
          "updated_at": {
            "type": "integer",
            "title": "Updated timestamp"
          }
        },
        "required": [
          "member_id",
          "member_name",
          "created_at",
          "status",
          "updated_at"
        ],
        "x-apifox-orders": [
          "member_id",
          "member_name",
          "phone",
          "phone_verified",
          "email",
          "email_verified",
          "account_role_ids",
          "time_zone",
          "locale",
          "status",
          "created_at",
          "updated_at"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "Layers": {
        "type": "object",
        "properties": {
          "layers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "layer_name": {
                  "type": "string",
                  "title": "Rule name"
                },
                "mode": {
                  "type": "integer",
                  "title": "Mode (Normal/Temporary)",
                  "enum": [
                    0,
                    1
                  ],
                  "x-apifox": {
                    "enumDescriptions": {
                      "0": "Normal mode",
                      "1": "Temporary mode"
                    }
                  },
                  "description": "Rules with mode=1 are placed after those with mode=0"
                },
                "groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "group_name": {
                        "type": "string",
                        "title": "Group name"
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "role_id": {
                              "type": "integer",
                              "title": "Role ID"
                            },
                            "person_ids": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              },
                              "title": "Member ID"
                            }
                          },
                          "x-apifox-orders": [
                            "role_id",
                            "person_ids"
                          ],
                          "x-apifox-ignore-properties": []
                        }
                      }
                    },
                    "x-apifox-orders": [
                      "group_name",
                      "members"
                    ],
                    "x-apifox-ignore-properties": []
                  },
                  "title": "On-call group"
                },
                "rotation_duration": {
                  "type": "integer",
                  "title": "On-call cycle",
                  "description": "Unit: seconds, minimum granularity 1800"
                },
                "fair_rotation": {
                  "type": "boolean",
                  "title": "Fair rotation switch"
                },
                "handoff_time": {
                  "type": "integer",
                  "title": "Handover time",
                  "description": "Handover time in seconds from Monday 00:00 for weekly rotation cycle"
                },
                "layer_start": {
                  "type": "integer",
                  "title": "Start time",
                  "description": "Minimum granularity half hour"
                },
                "layer_end": {
                  "type": "integer",
                  "title": "End time",
                  "description": "Minimum granularity half hour"
                },
                "restrict_mode": {
                  "type": "integer",
                  "title": "Cycle restriction mode",
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "x-apifox": {
                    "enumDescriptions": {
                      "0": "No restriction",
                      "1": "Daily restriction",
                      "2": "Weekly restriction"
                    }
                  },
                  "description": "0 No restriction, 1 Daily granularity, 2 Weekly granularity"
                },
                "restrict_periods": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "restrict_start": {
                        "type": "integer",
                        "title": "Restriction start time",
                        "description": "Only effective for daily and weekly restriction modes. For daily mode, seconds from 00:00 of the day to restriction start time. For weekly mode, seconds from Monday 00:00 to restriction start time"
                      },
                      "restrict_end": {
                        "type": "integer",
                        "title": "Restriction end time",
                        "description": "Only effective for daily and weekly restriction modes. For daily mode, seconds from 00:00 of the day to restriction end time. For weekly mode, seconds from Monday 00:00 to restriction end time"
                      }
                    },
                    "x-apifox-orders": [
                      "restrict_start",
                      "restrict_end"
                    ],
                    "x-apifox-ignore-properties": []
                  }
                }
              },
              "x-apifox-orders": [
                "layer_name",
                "mode",
                "groups",
                "rotation_duration",
                "fair_rotation",
                "handoff_time",
                "layer_start",
                "layer_end",
                "restrict_mode",
                "restrict_periods"
              ],
              "required": [
                "mode",
                "layer_start"
              ],
              "x-apifox-ignore-properties": []
            },
            "title": "Rules"
          }
        },
        "required": [
          "layers"
        ],
        "x-apifox-orders": [
          "layers"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "FinalSchedule": {
        "type": "object",
        "properties": {
          "final_schedule": {
            "type": "object",
            "properties": {
              "layer_name": {
                "type": "string",
                "description": "Rule name"
              },
              "mode": {
                "type": "integer"
              },
              "schedules": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "integer",
                      "description": "Start time"
                    },
                    "end": {
                      "type": "integer",
                      "description": "End time"
                    },
                    "hash": {
                      "type": "string",
                      "description": "Hash"
                    },
                    "group": {
                      "type": "object",
                      "properties": {
                        "group_name": {
                          "type": "string",
                          "description": "Team name"
                        },
                        "members": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "role_id": {
                                "type": "integer",
                                "description": "Role ID"
                              },
                              "person_ids": {
                                "type": "array",
                                "items": {
                                  "type": "integer"
                                },
                                "description": "Responder ID"
                              }
                            },
                            "x-apifox-orders": [
                              "role_id",
                              "person_ids"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        }
                      },
                      "required": [
                        "group_name",
                        "members"
                      ],
                      "x-apifox-orders": [
                        "group_name",
                        "members"
                      ],
                      "description": "On-call team",
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "start",
                    "end",
                    "hash",
                    "group"
                  ],
                  "x-apifox-ignore-properties": []
                }
              }
            },
            "required": [
              "layer_name",
              "mode",
              "schedules"
            ],
            "x-apifox-orders": [
              "layer_name",
              "mode",
              "schedules"
            ],
            "description": "Final schedule",
            "x-apifox-ignore-properties": []
          }
        },
        "required": [
          "final_schedule"
        ],
        "x-apifox-orders": [
          "final_schedule"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "LayerSchedules": {
        "type": "object",
        "properties": {
          "layer_schedules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "layer_name": {
                  "type": "string",
                  "title": "Rule name"
                },
                "mode": {
                  "type": "integer",
                  "title": "Mode (Normal/Temporary)"
                },
                "schedules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "start": {
                        "type": "integer",
                        "title": "Start time"
                      },
                      "end": {
                        "type": "integer",
                        "title": "End time"
                      },
                      "hash": {
                        "type": "string",
                        "title": "Hash"
                      },
                      "group": {
                        "type": "object",
                        "properties": {
                          "group_name": {
                            "type": "string",
                            "title": "Team name"
                          },
                          "members": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "role_id": {
                                  "type": "integer",
                                  "title": "Role ID"
                                },
                                "person_ids": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer"
                                  },
                                  "title": "Responder ID"
                                }
                              },
                              "x-apifox-orders": [
                                "role_id",
                                "person_ids"
                              ],
                              "x-apifox-ignore-properties": []
                            }
                          }
                        },
                        "required": [
                          "group_name",
                          "members"
                        ],
                        "x-apifox-orders": [
                          "group_name",
                          "members"
                        ],
                        "title": "On-call team",
                        "x-apifox-ignore-properties": []
                      }
                    },
                    "x-apifox-orders": [
                      "start",
                      "end",
                      "hash",
                      "group"
                    ],
                    "x-apifox-ignore-properties": []
                  },
                  "title": "Schedule"
                }
              },
              "x-apifox-orders": [
                "layer_name",
                "mode",
                "schedules"
              ],
              "x-apifox-ignore-properties": []
            },
            "title": "Rule calculation"
          }
        },
        "required": [
          "layer_schedules"
        ],
        "x-apifox-orders": [
          "layer_schedules"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "Notify": {
        "type": "object",
        "properties": {
          "notify": {
            "type": "object",
            "properties": {
              "advance_in_time": {
                "type": "integer",
                "title": "Advance notice time",
                "description": "Unit: seconds"
              },
              "by": {
                "type": "object",
                "properties": {
                  "follow_preference": {
                    "type": "boolean",
                    "title": "Personal preference settings"
                  },
                  "personal_channels": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "email",
                        "sms",
                        "feishu_app:xxxx",
                        "dingtalk_app:xxxx",
                        "wecom_app:xxxx"
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "email": "Email",
                          "sms": "SMS",
                          "feishu_app:xxxx": "Feishu/Lark app",
                          "dingtalk_app:xxxx": "Dingtalk app",
                          "wecom_app:xxxx": "WeCom app"
                        }
                      }
                    },
                    "title": "Personal custom settings"
                  }
                },
                "x-apifox-orders": [
                  "follow_preference",
                  "personal_channels"
                ],
                "title": "Personal notifications",
                "x-apifox-ignore-properties": []
              },
              "webhooks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Category",
                      "enum": [
                        "feishu",
                        "dingtalk",
                        "feishu_app",
                        "dingtalk_app",
                        "slack_app"
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "feishu": "",
                          "dingtalk": "",
                          "feishu_app": "",
                          "dingtalk_app": "",
                          "slack_app": ""
                        }
                      }
                    },
                    "settings": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "title": "Token"
                        },
                        "alias": {
                          "type": "string",
                          "title": "Alias"
                        },
                        "integration_id": {
                          "type": "integer",
                          "title": "Integration ID"
                        },
                        "chat_ids": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "title": "Notification IDs"
                        },
                        "sign_secret": {
                          "type": "string",
                          "title": "Signature Secret"
                        }
                      },
                      "x-apifox-orders": [
                        "token",
                        "alias",
                        "integration_id",
                        "chat_ids",
                        "sign_secret"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "type",
                    "settings"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "title": "Webhook notifications"
              }
            },
            "x-apifox-orders": [
              "advance_in_time",
              "by",
              "webhooks"
            ],
            "title": "On-call rotation notifications",
            "x-apifox-ignore-properties": []
          }
        },
        "x-apifox-orders": [
          "notify"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "EscalateRule": {
        "type": "object",
        "properties": {
          "channel_id": {
            "title": "Channel",
            "type": "integer"
          },
          "rule_id": {
            "type": "string",
            "title": "Rule ID"
          },
          "rule_name": {
            "type": "string",
            "title": "Rule name"
          },
          "template_id": {
            "type": "string",
            "title": "Template ID"
          },
          "description": {
            "type": "string",
            "title": "Rule description"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "enum": [
              "enabled",
              "disabled",
              "deleted"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "enabled": "Enabled",
                "disabled": "Disabled",
                "deleted": "Deleted"
              }
            }
          },
          "priority": {
            "type": "integer",
            "title": "Priority"
          },
          "created_at": {
            "type": "string",
            "title": "Created timestamp"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated timestamp"
          },
          "updated_by": {
            "type": "integer",
            "title": "Last modifier ID"
          },
          "layers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EscalateLayer",
              "x-apifox-overrides": {}
            },
            "title": "Notification level"
          },
          "aggr_window": {
            "title": "Aggregation window in seconds",
            "type": "integer"
          },
          "time_filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeFilter",
              "x-apifox-overrides": {}
            },
            "title": "Time filter",
            "description": "No setting means all time"
          },
          "filters": {
            "title": "Matching conditions",
            "$ref": "#/components/schemas/OrFilters"
          }
        },
        "x-apifox-orders": [
          "channel_id",
          "rule_id",
          "rule_name",
          "template_id",
          "description",
          "status",
          "priority",
          "created_at",
          "updated_at",
          "updated_by",
          "layers",
          "aggr_window",
          "time_filters",
          "filters"
        ],
        "required": [
          "channel_id",
          "template_id",
          "status",
          "updated_at",
          "created_at",
          "description",
          "updated_by",
          "rule_id",
          "rule_name",
          "layers",
          "aggr_window",
          "priority"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "EscalateLayer": {
        "type": "object",
        "properties": {
          "max_times": {
            "type": "integer",
            "title": "Maximum notification count",
            "description": "Default 2"
          },
          "notify_step": {
            "type": "integer",
            "title": "Notification interval in minutes",
            "description": "Default 10"
          },
          "escalate_window": {
            "title": "Minutes before escalating to next window",
            "type": "integer",
            "description": "Default 30"
          },
          "force_escalate": {
            "type": "boolean",
            "title": "Whether to force escalation",
            "description": "By default incident won't escalate after acknowledgment, set to true to escalate even after acknowledgment"
          },
          "target": {
            "title": "Assignment targets",
            "$ref": "#/components/schemas/EscalateTarget"
          }
        },
        "x-apifox-orders": [
          "max_times",
          "notify_step",
          "escalate_window",
          "force_escalate",
          "target"
        ],
        "required": [
          "max_times",
          "notify_step",
          "escalate_window",
          "target"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "EscalateTarget": {
        "type": "object",
        "properties": {
          "team_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "title": "Team ID list",
            "description": "At least one of team_ids, person_ids and schedule_to_role_ids must be provided"
          },
          "person_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "title": "Member ID list",
            "description": "At least one of team_ids, person_ids and schedule_to_role_ids must be provided"
          },
          "schedule_to_role_ids": {
            "type": "object",
            "properties": {
              "{schedule_id}": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            },
            "title": "Schedule ID and role ID list",
            "description": "At least one of team_ids, person_ids and schedule_to_role_ids must be provided",
            "x-apifox-orders": [
              "{schedule_id}"
            ],
            "x-apifox-ignore-properties": []
          },
          "by": {
            "title": "Personal channels",
            "description": "At least one of this and webhooks must be provided",
            "type": "object",
            "x-apifox-refs": {
              "01H4ZXAQXSGX7ZT7AAY6ZTFCHF": {
                "$ref": "#/components/schemas/SeverityToBy"
              }
            },
            "properties": {
              "follow_preference": {
                "type": "boolean",
                "title": "Follow personal preferences"
              },
              "critical": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string",
                      "enum": [
                        "email",
                        "voice",
                        "sms",
                        "push"
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "email": "Email",
                          "voice": "Voice",
                          "sms": "SMS",
                          "push": "App push"
                        }
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "^(feishu_app|dingtalk_app|wecom_app|teams_app):\\d+$"
                    }
                  ],
                  "description": "SMS, voice, email, push or specific IM integration"
                },
                "title": "Critical alert notification methods"
              },
              "warning": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string",
                      "enum": [
                        "email",
                        "voice",
                        "sms",
                        "push"
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "email": "Email",
                          "voice": "Voice",
                          "sms": "SMS",
                          "push": "App push"
                        }
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "^(feishu_app|dingtalk_app|wecom_app|teams_app):\\d+$"
                    }
                  ],
                  "description": "SMS, voice, email, push or specific IM integration"
                },
                "title": "Warning alert notification methods"
              },
              "info": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string",
                      "enum": [
                        "email",
                        "voice",
                        "sms",
                        "push"
                      ],
                      "x-apifox": {
                        "enumDescriptions": {
                          "email": "Email",
                          "voice": "Voice",
                          "sms": "SMS",
                          "push": "App push"
                        }
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "^(feishu_app|dingtalk_app|wecom_app|teams_app):\\d+$"
                    }
                  ],
                  "description": "SMS, voice, email, push or specific IM integration"
                },
                "title": "Info alert notification methods"
              }
            },
            "x-apifox-orders": [
              "follow_preference",
              "01H4ZXAQXSGX7ZT7AAY6ZTFCHF"
            ],
            "required": [
              "critical",
              "warning",
              "info"
            ],
            "x-apifox-ignore-properties": [
              "critical",
              "warning",
              "info"
            ]
          },
          "webhooks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Webhook type",
                  "enum": [
                    "feishu_app",
                    "wecom_app",
                    "dingtalk_app",
                    "slack_app",
                    "teams_app",
                    "feishu",
                    "wecom",
                    "dingtalk",
                    "zoom",
                    "telegram"
                  ],
                  "x-apifox": {
                    "enumDescriptions": {
                      "feishu_app": "Feishu/Lark app",
                      "wecom_app": "WeCom app",
                      "dingtalk_app": "Dingtalk app",
                      "slack_app": "Slack app",
                      "teams_app": "Teams app",
                      "feishu": "Feishu/Lark bot",
                      "wecom": "WeCom bot",
                      "dingtalk": "Dingtalk bot",
                      "zoom": "Zoom bot",
                      "telegram": "Telegram bot"
                    }
                  }
                },
                "settings": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "title": "Webhook settings",
                  "description": "Different settings for different types",
                  "x-apifox-ignore-properties": []
                }
              },
              "x-apifox-orders": [
                "type",
                "settings"
              ],
              "required": [
                "type",
                "settings"
              ],
              "x-apifox-ignore-properties": []
            },
            "title": "Group chat channels",
            "description": "At least one of this and by must be provided"
          }
        },
        "x-apifox-orders": [
          "01H4NB0YRKY5J9THVQNBB0MS6H",
          "by",
          "webhooks"
        ],
        "title": "",
        "x-apifox-refs": {
          "01H4NB0YRKY5J9THVQNBB0MS6H": {
            "$ref": "#/components/schemas/PersonGroup",
            "title": "Level ID to member replacement"
          }
        },
        "x-apifox-ignore-properties": [
          "team_ids",
          "person_ids",
          "schedule_to_role_ids"
        ],
        "x-apifox-folder": "Flashduty"
      },
      "SeverityToBy": {
        "type": "object",
        "properties": {
          "critical": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "email",
                    "voice",
                    "sms",
                    "push"
                  ],
                  "x-apifox": {
                    "enumDescriptions": {
                      "email": "Email",
                      "voice": "Voice",
                      "sms": "SMS",
                      "push": "App push"
                    }
                  }
                },
                {
                  "type": "string",
                  "pattern": "^(feishu_app|dingtalk_app|wecom_app|teams_app):\\d+$"
                }
              ],
              "description": "SMS, voice, email, push or specific IM integration"
            },
            "title": "Critical alert notification methods"
          },
          "warning": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "email",
                    "voice",
                    "sms",
                    "push"
                  ],
                  "x-apifox": {
                    "enumDescriptions": {
                      "email": "Email",
                      "voice": "Voice",
                      "sms": "SMS",
                      "push": "App push"
                    }
                  }
                },
                {
                  "type": "string",
                  "pattern": "^(feishu_app|dingtalk_app|wecom_app|teams_app):\\d+$"
                }
              ],
              "description": "SMS, voice, email, push or specific IM integration"
            },
            "title": "Warning alert notification methods"
          },
          "info": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "email",
                    "voice",
                    "sms",
                    "push"
                  ],
                  "x-apifox": {
                    "enumDescriptions": {
                      "email": "Email",
                      "voice": "Voice",
                      "sms": "SMS",
                      "push": "App push"
                    }
                  }
                },
                {
                  "type": "string",
                  "pattern": "^(feishu_app|dingtalk_app|wecom_app|teams_app):\\d+$"
                }
              ],
              "description": "SMS, voice, email, push or specific IM integration"
            },
            "title": "Info alert notification methods"
          }
        },
        "x-apifox-orders": [
          "critical",
          "warning",
          "info"
        ],
        "required": [
          "critical",
          "warning",
          "info"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "Preference": {
        "type": "object",
        "properties": {
          "person_id": {
            "type": "integer",
            "title": "Member ID"
          },
          "trigger_notify": {
            "$ref": "#/components/schemas/SeverityToBy"
          },
          "shedule_shift_notify": {
            "type": "object",
            "properties": {
              "personal_channels": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "x-apifox-orders": [
              "personal_channels"
            ],
            "required": [
              "personal_channels"
            ],
            "title": "Shift change notification methods",
            "x-apifox-ignore-properties": []
          }
        },
        "x-apifox-orders": [
          "person_id",
          "trigger_notify",
          "shedule_shift_notify"
        ],
        "required": [
          "person_id",
          "trigger_notify",
          "shedule_shift_notify"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "Field": {
        "type": "object",
        "properties": {
          "field_id": {
            "type": "string",
            "title": "Field ID"
          },
          "account_id": {
            "type": "integer",
            "title": "Account ID"
          },
          "field_name": {
            "type": "string",
            "title": "Field name"
          },
          "display_name": {
            "type": "string",
            "title": "Display name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "field_type": {
            "type": "string",
            "title": "Field type",
            "enum": [
              "text",
              "single_select",
              "multi_select",
              "checkbox"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "text": "Input box",
                "single_select": "Single select",
                "multi_select": "Multiple select",
                "checkbox": "Checkbox"
              }
            }
          },
          "value_type": {
            "type": "string",
            "title": "Value type",
            "enum": [
              "string",
              "bool"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "string": "String",
                "bool": "Boolean"
              }
            }
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional values",
            "description": "Array elements must be unique and type must match value_type definition"
          },
          "default_value": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "enabled, disabled, deleted",
            "enum": [
              "enabled",
              "disabled",
              "deleted"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "enabled": "Enabled",
                "disabled": "Disabled",
                "deleted": "Deleted"
              }
            }
          },
          "creator_id": {
            "type": "integer",
            "title": "Creator ID"
          },
          "updated_by": {
            "type": "integer",
            "title": "Updater ID"
          },
          "created_at": {
            "type": "integer",
            "title": "Created timestamp"
          },
          "updated_at": {
            "type": "integer",
            "title": "Updated timestamp"
          }
        },
        "x-apifox-orders": [
          "field_id",
          "account_id",
          "field_name",
          "display_name",
          "description",
          "field_type",
          "value_type",
          "options",
          "default_value",
          "status",
          "creator_id",
          "updated_by",
          "created_at",
          "updated_at"
        ],
        "required": [
          "status",
          "field_name",
          "field_id",
          "updated_at",
          "created_at",
          "field_type",
          "creator_id",
          "account_id",
          "display_name",
          "updated_by",
          "value_type"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "Calendar": {
        "type": "object",
        "properties": {
          "team_id": {
            "type": "integer",
            "title": "Management team ID, if 0 means only creator and owner account can modify configuration"
          },
          "cal_id": {
            "type": "string",
            "title": "Calendar ID"
          },
          "cal_name": {
            "type": "string",
            "title": "Calendar name, length limit [1,40] bytes",
            "maxLength": 40
          },
          "description": {
            "type": "string",
            "title": "Calendar description, length limit [1,500] bytes",
            "maxLength": 500
          },
          "kind": {
            "type": "string",
            "title": "Calendar type",
            "enum": [
              "personal",
              "region.official.holiday"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "personal": "Tenant calendar, not public",
                "region.official.holiday": "Regional statutory holidays"
              }
            }
          },
          "timezone": {
            "type": "string",
            "description": "Example value: \"Asia/Shanghai\"",
            "title": "Calendar timezone, format requirement: must match timezone definition in IANA Time Zone Database"
          },
          "workdays": {
            "type": "array",
            "items": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ],
              "x-apifox": {
                "enumDescriptions": {
                  "0": "Sunday",
                  "1": "Monday",
                  "2": "Tuesday",
                  "3": "Wednesday",
                  "4": "Thursday",
                  "5": "Friday",
                  "6": "Saturday"
                }
              }
            },
            "title": "Working day list",
            "description": "Empty for public holiday calendars"
          },
          "extra_cal_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Associated calendar ID list, like mainland China statutory holidays",
            "description": "Empty for public holiday calendars"
          },
          "created_at": {
            "type": "integer",
            "title": "Created timestamp in seconds"
          },
          "updated_at": {
            "type": "integer",
            "title": "Updated timestamp in seconds"
          },
          "creator_id": {
            "type": "integer",
            "title": "Creator ID",
            "description": "0 for public holiday calendars"
          },
          "updated_by": {
            "type": "integer",
            "title": "Updater ID",
            "description": "0 for public holiday calendars"
          }
        },
        "x-apifox-orders": [
          "team_id",
          "cal_id",
          "cal_name",
          "description",
          "kind",
          "timezone",
          "workdays",
          "extra_cal_ids",
          "created_at",
          "updated_at",
          "creator_id",
          "updated_by"
        ],
        "required": [
          "cal_name",
          "cal_id",
          "updated_at",
          "created_at",
          "kind",
          "timezone"
        ],
        "x-apifox-refs": {},
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "CalendarEvent": {
        "type": "object",
        "properties": {
          "cal_id": {
            "type": "string",
            "title": "Calendar ID"
          },
          "event_id": {
            "type": "string",
            "title": "Event ID"
          },
          "summary": {
            "type": "string",
            "title": "Calendar name, length limit [1,40] bytes",
            "maxLength": 40,
            "minLength": 1
          },
          "description": {
            "type": "string",
            "title": "Calendar description, length limit [1,500] bytes",
            "maxLength": 500
          },
          "creator_id": {
            "type": "integer",
            "title": "Creator ID",
            "description": "May be empty for public holidays"
          },
          "is_off": {
            "type": "boolean",
            "title": "Is rest day, false means working day"
          },
          "start_at": {
            "type": "string",
            "title": "Start time",
            "description": "Example value: \"2018-09-01\""
          },
          "end_at": {
            "type": "string",
            "title": "End time",
            "description": "Example value: \"2018-09-02\""
          },
          "created_at": {
            "type": "integer",
            "title": "Created timestamp in seconds"
          },
          "updated_at": {
            "type": "integer",
            "title": "Updated timestamp in seconds"
          }
        },
        "x-apifox-orders": [
          "cal_id",
          "event_id",
          "summary",
          "description",
          "creator_id",
          "is_off",
          "start_at",
          "end_at",
          "created_at",
          "updated_at"
        ],
        "required": [
          "start_at",
          "creator_id",
          "summary",
          "cal_id",
          "updated_at",
          "created_at",
          "end_at",
          "is_off"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "MixedPagination": {
        "type": "object",
        "properties": {
          "search_after_ctx": {
            "type": "string",
            "title": "Cursor pagination, defaults to first page if not set. Choose one between this and p parameter",
            "description": "For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)"
          },
          "p": {
            "type": "integer",
            "title": "Traditional pagination, starts from page 1 if not set, default value is 1. Choose one between this and search_after_ctx parameter",
            "description": "When using traditional pagination, <span style=\"color: red;\">p*limit must not exceed 10000</span> when p parameter is set, otherwise returns parameter error. For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)",
            "default": 1
          },
          "limit": {
            "type": "integer",
            "title": "Items per page",
            "description": "<span style=\"color: red;\">When p parameter is set, (p-1)*limit must not exceed 10000</span>, otherwise returns parameter error. For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)",
            "maximum": 100,
            "minimum": 0,
            "default": 20
          }
        },
        "x-apifox-orders": [
          "search_after_ctx",
          "p",
          "limit"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "MixedPageout": {
        "type": "object",
        "properties": {
          "search_after_ctx": {
            "type": "string",
            "title": "Cursor pagination, presence indicates next page exists",
            "description": "For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)"
          },
          "total": {
            "type": "integer",
            "title": "Total matching entries",
            "description": "Please note, <span style=\"color: red;\">total is only accurate when less than 1000, do not use this value to calculate pagination end.</span> When total entries exceed 1000, system will only return total=1000, indicating 1000+ matches found. Please use has_next_page to determine if more data exists. For detailed explanation, please refer to [About Pagination](https://developer-en.flashcat.cloud/en/flashduty/open-api/about-pagination)"
          },
          "has_next_page": {
            "type": "boolean",
            "title": "Whether more unretreived data exists"
          }
        },
        "x-apifox-orders": [
          "search_after_ctx",
          "total",
          "has_next_page"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "ERuleExtraction": {
        "type": "object",
        "properties": {
          "result_label": {
            "type": "string",
            "title": "Generate label"
          },
          "override": {
            "type": "boolean",
            "title": "Whether to overwrite if result label already exists"
          },
          "source_field": {
            "type": "string",
            "title": "Source label"
          },
          "pattern": {
            "type": "string",
            "title": "Extract regex",
            "description": "Must be valid regex; at least one submatch required, if multiple submatches found, join with space; mutually exclusive with g_json"
          },
          "g_json": {
            "type": "string",
            "title": "gjson path",
            "description": "gjson path syntax, please refer to [gjson.dev](https://gjson.dev) for specific syntax; note this is mutually exclusive with pattern"
          }
        },
        "x-apifox-orders": [
          "source_field",
          "result_label",
          "pattern",
          "g_json",
          "override"
        ],
        "required": [
          "source_field",
          "result_label"
        ],
        "oneOf": [
          {
            "properties": {
              "g_json": {
                "not": {}
              }
            },
            "x-apifox-orders": [
              "g_json"
            ],
            "type": "object",
            "x-apifox-ignore-properties": []
          },
          {
            "properties": {
              "pattern": {
                "not": {}
              }
            },
            "x-apifox-orders": [
              "pattern"
            ],
            "type": "object",
            "x-apifox-ignore-properties": []
          }
        ],
        "x-apifox-refs": {},
        "x-apifox-folder": "Flashduty"
      },
      "Enrichment": {
        "type": "object",
        "properties": {
          "integration_id": {
            "type": "integer",
            "title": "Integration ID"
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "title": "Rule type",
                  "enum": [
                    "extraction",
                    "composition",
                    "mapping",
                    "drop"
                  ],
                  "x-apifox": {
                    "enumDescriptions": {
                      "extraction": "Extract",
                      "composition": "Compose",
                      "mapping": "Map",
                      "drop": "Delete"
                    }
                  },
                  "description": "Rules will be executed in order"
                },
                "if": {
                  "$ref": "#/components/schemas/AndFilters",
                  "title": "Matching conditions"
                },
                "settings": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ERuleExtraction"
                    },
                    {
                      "$ref": "#/components/schemas/ERuleComposition"
                    },
                    {
                      "$ref": "#/components/schemas/ERuleMapping"
                    },
                    {
                      "$ref": "#/components/schemas/ERuleDrop"
                    }
                  ]
                }
              },
              "x-apifox-orders": [
                "kind",
                "if",
                "settings"
              ],
              "required": [
                "kind",
                "settings"
              ],
              "x-apifox-ignore-properties": []
            },
            "title": "Rule list"
          },
          "creator_id": {
            "type": "integer",
            "title": "Creator ID"
          },
          "updated_by": {
            "type": "integer",
            "title": "Updater ID"
          },
          "created_at": {
            "type": "integer",
            "title": "Created timestamp in seconds"
          },
          "updated_at": {
            "type": "integer",
            "title": "Updated timestamp in seconds"
          }
        },
        "x-apifox-orders": [
          "integration_id",
          "rules",
          "creator_id",
          "updated_by",
          "created_at",
          "updated_at"
        ],
        "required": [
          "updated_at",
          "created_at",
          "rules",
          "integration_id"
        ],
        "x-apifox-refs": {},
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "ERuleDrop": {
        "type": "object",
        "properties": {
          "drop_labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Label list to delete"
          }
        },
        "x-apifox-orders": [
          "drop_labels"
        ],
        "required": [
          "drop_labels"
        ],
        "x-apifox-refs": {},
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "ERuleMapping": {
        "type": "object",
        "properties": {
          "result_labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Label list to generate",
            "description": "Must be result fields defined in mapping table"
          },
          "schema_id": {
            "type": "string",
            "title": "schama ID"
          },
          "override": {
            "type": "boolean",
            "title": "Whether to overwrite if result label already exists"
          }
        },
        "x-apifox-orders": [
          "result_labels",
          "schema_id",
          "override"
        ],
        "required": [
          "result_labels",
          "schema_id"
        ],
        "x-apifox-refs": {},
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "ERuleComposition": {
        "type": "object",
        "properties": {
          "result_label": {
            "type": "string",
            "title": "Generate label"
          },
          "template": {
            "type": "string",
            "title": "Composition rule",
            "description": "A format string that allows variables, variable names in form ${label} where label is source label name"
          },
          "override": {
            "type": "boolean",
            "title": "Whether to overwrite if result label already exists"
          }
        },
        "x-apifox-orders": [
          "result_label",
          "template",
          "override"
        ],
        "required": [
          "result_label",
          "template"
        ],
        "x-apifox-refs": {},
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "MappingSchema": {
        "type": "object",
        "properties": {
          "schema_id": {
            "type": "string",
            "title": "Table ID"
          },
          "schema_name": {
            "type": "string",
            "title": "Table name",
            "maxLength": 40,
            "minLength": 1
          },
          "description": {
            "type": "string",
            "title": "Table description",
            "maxLength": 500
          },
          "source_labels": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*",
              "maxLength": 40,
              "minLength": 1
            },
            "title": "Query field list",
            "maxItems": 3,
            "minItems": 1
          },
          "result_labels": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*",
              "maxLength": 40,
              "minLength": 1
            },
            "title": "Result field list",
            "maxItems": 10,
            "minItems": 1
          },
          "team_id": {
            "type": "integer",
            "title": "Responsible team ID"
          },
          "creator_id": {
            "type": "integer",
            "title": "Creator ID"
          },
          "updated_by": {
            "type": "integer",
            "title": "Updater ID"
          },
          "created_at": {
            "type": "integer",
            "title": "Created timestamp in seconds"
          },
          "updated_at": {
            "type": "integer",
            "title": "Updated timestamp in seconds"
          }
        },
        "x-apifox-orders": [
          "schema_id",
          "schema_name",
          "description",
          "source_labels",
          "result_labels",
          "team_id",
          "creator_id",
          "updated_by",
          "created_at",
          "updated_at"
        ],
        "required": [
          "updated_at",
          "created_at",
          "source_labels",
          "schema_id",
          "result_labels",
          "schema_name"
        ],
        "x-apifox-refs": {},
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "Route": {
        "type": "object",
        "properties": {
          "cases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouteCase"
            },
            "title": "Conditional route",
            "description": "At least one of this and default route must exist"
          },
          "default": {
            "type": "object",
            "properties": {
              "channel_ids": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            },
            "title": "Default route",
            "x-apifox-orders": [
              "channel_ids"
            ],
            "required": [
              "channel_ids"
            ],
            "description": "At least one of this and conditional route must exist",
            "x-apifox-ignore-properties": []
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "enabled, disabled, deleted",
            "enum": [
              "enabled",
              "disabled",
              "deleted"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "enabled": "Enabled",
                "disabled": "Disabled",
                "deleted": "Deleted"
              }
            }
          },
          "creator_id": {
            "type": "integer",
            "title": "Creator ID"
          },
          "updated_by": {
            "type": "integer",
            "title": "Updater ID"
          },
          "created_at": {
            "type": "integer",
            "title": "Created timestamp"
          },
          "updated_at": {
            "type": "integer",
            "title": "Updated timestamp"
          }
        },
        "x-apifox-orders": [
          "cases",
          "default",
          "status",
          "creator_id",
          "updated_by",
          "created_at",
          "updated_at"
        ],
        "required": [
          "status",
          "updated_at",
          "created_at",
          "creator_id",
          "updated_by"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "RouteCase": {
        "type": "object",
        "properties": {
          "if": {
            "$ref": "#/components/schemas/AndFilters",
            "title": "Matching conditions"
          },
          "channel_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "fallthrough": {
            "type": "boolean"
          }
        },
        "x-apifox-orders": [
          "if",
          "channel_ids",
          "fallthrough"
        ],
        "required": [
          "if",
          "channel_ids"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "AlertAction": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "integer",
            "title": "Operation time",
            "description": "Note this is in milliseconds"
          },
          "creator_id": {
            "title": "Operator",
            "description": "0 represents system",
            "type": "integer"
          },
          "type": {
            "type": "string",
            "title": "Operation type",
            "enum": [
              "a_new",
              "a_close",
              "a_comm"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "a_new": "Alert.Trigger",
                "a_close": "Alert.Close",
                "a_comm": "Alert.Comment"
              }
            }
          },
          "detail": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/a_comm"
              },
              {
                "$ref": "#/components/schemas/a_new"
              },
              {
                "$ref": "#/components/schemas/a_close"
              },
              {
                "$ref": "#/components/schemas/a_m_inhibit"
              },
              {
                "$ref": "#/components/schemas/a_m_silence"
              },
              {
                "$ref": "#/components/schemas/a_update"
              },
              {
                "$ref": "#/components/schemas/a_merge"
              }
            ],
            "title": "Operation details",
            "description": "Each type corresponds to different content, please parse according to operation type"
          }
        },
        "x-apifox-orders": [
          "created_at",
          "creator_id",
          "type",
          "detail"
        ],
        "required": [
          "created_at",
          "type",
          "creator_id",
          "detail"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "AlertProcessingRule": {
        "type": "object",
        "properties": {
          "integration_id": {
            "type": "integer",
            "title": "Integration ID"
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "title": "Rule type",
                  "description": "Rules will be executed in order",
                  "enum": [
                    "title_reset",
                    "description_reset",
                    "severity_reset",
                    "alert_drop",
                    "alert_inhibit"
                  ],
                  "x-apifox": {
                    "enumDescriptions": {
                      "title_reset": "Update title",
                      "description_reset": "Update description",
                      "severity_reset": "Update severity",
                      "alert_drop": "Alert filter",
                      "alert_inhibit": "Alert inhibit"
                    }
                  }
                },
                "if": {
                  "title": "Filter conditions, empty means match all",
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/AndFilters",
                      "title": "Matching conditions"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "settings": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/APRuleTitleReset"
                    },
                    {
                      "$ref": "#/components/schemas/APRuleDescriptionReset"
                    },
                    {
                      "$ref": "#/components/schemas/APRuleSeverityReset"
                    },
                    {
                      "$ref": "#/components/schemas/APRuleAlertDrop"
                    },
                    {
                      "$ref": "#/components/schemas/APRuleAlertInhibit"
                    }
                  ],
                  "title": "Rule configuration",
                  "description": "Different configurations for different rule types"
                }
              },
              "x-apifox-orders": [
                "kind",
                "if",
                "settings"
              ],
              "required": [
                "kind",
                "settings"
              ],
              "x-apifox-ignore-properties": []
            },
            "title": "Rule list"
          },
          "creator_id": {
            "type": "integer",
            "title": "Creator ID"
          },
          "updated_by": {
            "type": "integer",
            "title": "Updater ID"
          },
          "created_at": {
            "type": "integer",
            "title": "Created timestamp in seconds"
          },
          "updated_at": {
            "type": "integer",
            "title": "Updated timestamp in seconds"
          }
        },
        "x-apifox-orders": [
          "integration_id",
          "rules",
          "creator_id",
          "updated_by",
          "created_at",
          "updated_at"
        ],
        "required": [
          "updated_at",
          "created_at",
          "rules",
          "integration_id"
        ],
        "x-apifox-refs": {},
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "APRuleAlertInhibit": {
        "type": "object",
        "properties": {
          "source_filters": {
            "$ref": "#/components/schemas/AndFilters",
            "title": "Matching conditions"
          },
          "equals": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Items prefixed with label. are labels, others are attributes",
            "title": "Equal items"
          }
        },
        "x-apifox-orders": [
          "source_filters",
          "equals"
        ],
        "x-apifox-refs": {},
        "required": [
          "source_filters",
          "equals"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "APRuleAlertDrop": {
        "type": "object",
        "properties": {},
        "x-apifox-orders": [],
        "x-apifox-refs": {},
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "APRuleSeverityReset": {
        "type": "object",
        "properties": {
          "severity": {
            "type": "string",
            "title": "New severity",
            "description": "Supports variable generation, refer to [Customize Incident Description](https://docs.flashcat.cloud/en/flashduty/customize-incident-attrs)",
            "enum": [
              "Critical",
              "Warning",
              "Info"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "Critical": "Critical",
                "Warning": "Warning",
                "Info": "Info"
              }
            }
          }
        },
        "x-apifox-orders": [
          "severity"
        ],
        "required": [
          "severity"
        ],
        "x-apifox-refs": {},
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "APRuleDescriptionReset": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "title": "New alert description",
            "description": "Supports variable generation, refer to [Customize Incident Description](https://docs.flashcat.cloud/en/flashduty/customize-incident-attrs)",
            "minLength": 1,
            "maxLength": 2048
          }
        },
        "x-apifox-orders": [
          "description"
        ],
        "required": [
          "description"
        ],
        "x-apifox-refs": {},
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "APRuleTitleReset": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "New alert title",
            "minLength": 1,
            "maxLength": 512,
            "description": "Supports variable generation, refer to [Customize Incident Title](https://docs.flashcat.cloud/en/flashduty/customize-incident-attrs)"
          }
        },
        "x-apifox-orders": [
          "title"
        ],
        "required": [
          "title"
        ],
        "x-apifox-refs": {},
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "InsightInput": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "integer",
            "title": "Start time",
            "description": "Timestamp in seconds, incident trigger time must be greater than this"
          },
          "end_time": {
            "type": "integer",
            "title": "End time",
            "description": "Timestamp in seconds, incident trigger time must be less than or equal to this. Maximum time span is 6 months, if aggregate_unit is day, maximum time span is 31 days."
          },
          "team_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "title": "Team ID list"
          },
          "channel_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "title": "Channel ID list"
          },
          "severities": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Info",
                "Warning",
                "Critical"
              ],
              "x-apifox": {
                "enumDescriptions": {
                  "Info": "Info",
                  "Warning": "Warning",
                  "Critical": "Critical"
                }
              }
            },
            "title": "Severity"
          },
          "time_zone": {
            "type": "string",
            "title": "Timezone",
            "description": "Default timezone Asia/Shanghai, used for results and grouping timezone. Must be in tzdata format. Please refer to [this list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) for acceptable values."
          }
        },
        "required": [
          "start_time",
          "end_time"
        ],
        "x-apifox-orders": [
          "start_time",
          "end_time",
          "team_ids",
          "channel_ids",
          "severities",
          "time_zone"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "InsightIncidentMetrics": {
        "type": "object",
        "properties": {
          "total_engaged_seconds": {
            "type": "integer",
            "description": "Total time spent by responders participating in incident processing. One person's processing time is the time difference from acknowledgment to incident closure (close_time-ack_time), may include snooze time. If no one acknowledges, this value is 0.",
            "title": "Total responder response time"
          },
          "total_incident_cnt": {
            "type": "integer",
            "description": "Triggered incident count",
            "title": "Triggered incident count"
          },
          "total_incidents_acknowledged": {
            "type": "integer",
            "description": "Acknowledged incident count",
            "title": "Acknowledged incident count"
          },
          "total_incidents_closed": {
            "type": "integer",
            "description": "Closed incident count",
            "title": "Closed incident count"
          },
          "total_incidents_auto_closed": {
            "type": "integer",
            "description": "Auto-recovered incident count",
            "title": "Auto-recovered incident count"
          },
          "total_incidents_manually_closed": {
            "type": "integer",
            "description": "Manually closed incident count",
            "title": "Manually closed incident count"
          },
          "total_incidents_timeout_closed": {
            "type": "integer",
            "description": "Timeout closed incident count",
            "title": "Timeout closed incident count"
          },
          "total_incidents_escalated": {
            "type": "integer",
            "description": "Escalated incident count",
            "title": "Escalated incident count"
          },
          "total_incidents_manually_escalated": {
            "type": "integer",
            "description": "Manually escalated incident count",
            "title": "Manually escalated incident count"
          },
          "total_incidents_timeout_escalated": {
            "type": "integer",
            "description": "Timeout escalated incident count",
            "title": "Timeout escalated incident count"
          },
          "total_incidents_reassigned": {
            "type": "integer",
            "description": "Reassigned incident count",
            "title": "Reassigned incident count"
          },
          "mean_seconds_to_engage": {
            "type": "number",
            "description": "Average processing time, one person's processing time is the time difference from acknowledgment to incident closure (close_time-ack_time), may include snooze time. If no one acknowledges, this value is 0.",
            "title": "Average processing time"
          },
          "mean_seconds_to_first_acknowledge": {
            "type": "number",
            "description": "Average first acknowledgment time (ack_time-start_time)",
            "title": "Average acknowledgment time"
          },
          "mean_seconds_to_close": {
            "type": "number",
            "description": "Average closure time (close_time-start_time)",
            "title": "Average closure time"
          },
          "mean_noise_reduction_pct": {
            "type": "number",
            "description": "Noise reduction ratio, 1-(total_incident_cnt/total_alert_event_cnt)",
            "title": "Noise reduction ratio"
          },
          "mean_acknowlegement_pct": {
            "type": "number",
            "description": "Response ratio, 1-(total_incidents_acknowledged/total_incident_cnt)",
            "title": "Response ratio"
          },
          "ts": {
            "type": "integer",
            "title": "Phase start time",
            "description": "Timestamp in seconds, whether to display depends on if data is aggregated by time granularity. When aggregate_unit is day, this value will be set to timestamp of day start (00:00) according to time_zone",
            "nullable": true
          },
          "hours": {
            "type": "string",
            "enum": [
              "work",
              "off",
              "sleep"
            ],
            "x-apifox": {
              "enumDescriptions": {
                "work": "Work time (workdays 8am~7pm)",
                "off": "Rest time (workdays 7pm~11pm, non-workdays 8am~11pm)",
                "sleep": "Sleep time (every day 11pm~8am)"
              }
            },
            "title": "Time type",
            "description": "Define each hour as one of work time, rest time or sleep time. To distinguish metric differences between different time periods. When not filtering by time period, this field is not displayed. An incident's time type is only determined by its occurrence time, even if the incident spans multiple time types, it will not be split.",
            "nullable": true
          },
          "channel_id": {
            "type": "integer",
            "title": "Channel ID",
            "description": "Channel ID, grouping data, may or may not exist depending on grouping situation",
            "nullable": true
          },
          "channel_name": {
            "type": "string",
            "title": "Channel name",
            "description": "Channel name, grouping data, may or may not exist depending on grouping situation",
            "nullable": true
          },
          "team_id": {
            "type": "integer",
            "title": "Team ID",
            "description": "Team ID, grouping data, may or may not exist depending on grouping situation",
            "nullable": true
          },
          "team_name": {
            "type": "string",
            "title": "Team name",
            "description": "Team name, grouping data, may or may not exist depending on grouping situation",
            "nullable": true
          }
        },
        "x-apifox-orders": [
          "total_engaged_seconds",
          "total_incident_cnt",
          "total_incidents_acknowledged",
          "total_incidents_closed",
          "total_incidents_auto_closed",
          "total_incidents_manually_closed",
          "total_incidents_timeout_closed",
          "total_incidents_escalated",
          "total_incidents_manually_escalated",
          "total_incidents_timeout_escalated",
          "total_incidents_reassigned",
          "mean_seconds_to_engage",
          "mean_seconds_to_first_acknowledge",
          "mean_seconds_to_close",
          "mean_noise_reduction_pct",
          "mean_acknowlegement_pct",
          "ts",
          "hours",
          "channel_id",
          "channel_name",
          "team_id",
          "team_name"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "InsightAlertMetrics": {
        "type": "object",
        "properties": {
          "total_alert_cnt": {
            "type": "integer",
            "title": "Triggered alert count",
            "description": "Triggered alert count"
          },
          "total_alert_event_cnt": {
            "type": "integer",
            "title": "Triggered alert event count",
            "description": "Triggered alert event count"
          }
        },
        "x-apifox-orders": [
          "total_alert_cnt",
          "total_alert_event_cnt"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "insightNotificationMetrics": {
        "type": "object",
        "properties": {
          "total_incident_sms_notifications": {
            "type": "integer",
            "description": "Incident SMS notification count",
            "title": "Incident SMS notification count"
          },
          "total_incident_email_notifications": {
            "type": "integer",
            "description": "Incident email notification count",
            "title": "Incident email notification count"
          },
          "total_incident_voice_notifications": {
            "type": "integer",
            "description": "Incident voice notification count",
            "title": "Incident voice notification count"
          },
          "total_schdule_shift_sms_notifications": {
            "type": "integer",
            "description": "On-call SMS notification count",
            "title": "On-call SMS notification count"
          },
          "total_schdule_shift_email_notifications": {
            "type": "integer",
            "description": "On-call email notification count",
            "title": "On-call email notification count"
          }
        },
        "x-apifox-orders": [
          "total_incident_sms_notifications",
          "total_incident_email_notifications",
          "total_incident_voice_notifications",
          "total_schdule_shift_sms_notifications",
          "total_schdule_shift_email_notifications"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      },
      "InsightResponderMetrics": {
        "type": "object",
        "properties": {
          "total_engaged_seconds": {
            "type": "integer",
            "description": "Total time spent by responders participating in incident processing. One person's processing time is the time difference from acknowledgment to incident closure (close_time-ack_time), may include snooze time. If no one acknowledges, this value is 0.",
            "title": "Total processing time"
          },
          "total_incident_cnt": {
            "type": "integer",
            "description": "Triggered incident count",
            "title": "Triggered incident count"
          },
          "total_incidents_acknowledged": {
            "type": "integer",
            "description": "Acknowledged incident count",
            "title": "Acknowledged incident count"
          },
          "total_incidents_reassigned": {
            "type": "integer",
            "description": "Reassigned incident count",
            "title": "Reassigned incident count"
          },
          "mean_seconds_to_engage": {
            "type": "number",
            "description": "Average processing time. One person's processing time is the time difference from acknowledgment to incident closure (close_time-ack_time), may include snooze time. If no one acknowledges, this value is 0.",
            "title": "Average processing time"
          },
          "mean_seconds_to_acknowledge": {
            "type": "number",
            "description": "Average first acknowledgment time (ack_time-start_time).",
            "title": "Average acknowledgment time"
          },
          "ts": {
            "type": "integer",
            "title": "Phase start time",
            "description": "Timestamp in seconds, whether to display depends on if data is aggregated by time granularity. When aggregate_unit is day, this value will be set to timestamp of day start (00:00) according to time_zone",
            "nullable": true
          },
          "hours": {
            "type": "string",
            "description": "Work time (workdays 8am~7pm)",
            "title": "Time type",
            "nullable": true
          },
          "responder_id": {
            "type": "integer",
            "title": "Member ID",
            "description": "Member ID"
          },
          "responder_name": {
            "type": "string",
            "title": "Member name",
            "description": "Member name"
          }
        },
        "x-apifox-orders": [
          "total_engaged_seconds",
          "total_incident_cnt",
          "total_incidents_acknowledged",
          "total_incidents_reassigned",
          "mean_seconds_to_engage",
          "mean_seconds_to_acknowledge",
          "ts",
          "hours",
          "responder_id",
          "responder_name"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": "Flashduty"
      }
    },
    "securitySchemes": {
      "apikey-query-app_key": {
        "type": "apiKey",
        "in": "query",
        "name": "app_key"
      }
    }
  },
  "servers": []
}
